%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 210 273 474 511 
%%LanguageLevel: 1
%%Creator: CorelDRAW 9
%%Title: \\Edge\gicl\data1\repository\...
%%CreationDate: Sun Oct 29 09:21:56 2000
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 1 def
%Build: CorelDRAW 9 Version 9.337
%Color profile: Disabled
%%BeginResource: procset wCorel9Dict 9.0 0
/wCorel9Dict 300 dict def wCorel9Dict begin
% Copyright (c)1992-1999 Corel Corporation
% All rights reserved.     v9.0 r0.5
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CurrentInkName_5 where{pop}{/CurrentInkName_5(Composite)def}
ifelse/$ink_5 where{pop}{/$ink_5 -1 def}ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0
def/$t 1 def/$n _ def/$o 0 def/$fil 0 def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def
/$T 1 def/$N _ def/$O 0 def/$PF false def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0
def/s1t 0 def/s1n _ def/$bkg false def/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op
false def matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm
matrix def/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve
16#6/dotaccent 16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def/Comp?{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{1 0 0 0 @gs
setcmykcolor currentcmykcolor @gr add add add 0 ne 0 1 0 0 @gs setcmykcolor
currentcmykcolor @gr add add add 0 ne 0 0 1 0 @gs setcmykcolor currentcmykcolor
@gr add add add 0 ne 0 0 0 1 @gs setcmykcolor currentcmykcolor @gr add add add
0 ne and and and}ifelse}ifelse}bd/@PL{/LV where{pop LV 2 ge L2? not and{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/p{/$pm xd 7 rp/$pyf xd/$pxf xd/$pn xd/$fil 1 def}
bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}ifelse}bd
/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp}bd
/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}bd
/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld/GetRgb
/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2 systemdict
/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def/SetHsb
systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get def
/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop/SetCmyk_5{LumSepsDict
/setcmykcolor get exec}def}{/AldusSepsDict where{pop/SetCmyk_5{AldusSepsDict
/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld}ifelse}ifelse}{
/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk
/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where
{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where{pop}{
/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll
mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0 4 $ink_5 sub index exch pop 5 1
roll pop pop pop pop SepsColor true eq{$ink_5 3 gt{1 sub neg SetGry}{0 0 0 4
$ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/setcustomcolor where{pop}{/setcustomcolor{exch aload pop SepMode_5 0 eq{pop
@tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll 5 rp 1
sub neg SetGry}ifelse}bd}ifelse/@scc_5{dup type/booleantype eq{setoverprint}{1
eq setoverprint}ifelse dup _ eq{pop setprocesscolor_5 pop}{findcmykcustomcolor
exch setcustomcolor}ifelse SepMode_5 0 eq{true}{GetGry 1 eq currentoverprint
and not}ifelse}bd/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{
/ncolors xd/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop
pop exch pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd
/daqC xd pop pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}
ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub
{dup 3 mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div $dat 3 index
2 add get 255 div rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat
length 3 idiv getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4
mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add
get 255 div $dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop
$dat 3 1 roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}
image}ifelse}bd}ifelse/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5
/$ffpnt xd}bd/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/@sft{$tllx
$pxf add dup $tllx gt{$pwid sub}if/$tx xd $tury $pyf sub dup $tury lt{$phei
add}if/$ty xd}bd/@stb{pathbbox/$ury xd/$urx xd/$lly xd/$llx xd}bd/@ep{{cvx exec
}forall}bd/@tp{@sv/$in true def 2 copy dup $lly le{/$in false def}if $phei sub
$ury ge{/$in false def}if dup $urx ge{/$in false def}if $pwid add $llx le{/$in
false def}if $in{@np 2 copy m $pwid 0 rl 0 $phei neg rl $pwid neg 0 rl 0 $phei
rl clip @np $pn cvlit load aload pop 7 -1 roll 5 index sub 7 -1 roll 3 index
sub Tl matrix currentmatrix/$ctm xd @ep pop pop pop pop}{pop pop}ifelse @rs}bd
/@th{@sft 0 1 $tly 1 sub{dup $psx mul $tx add{dup $llx gt{$pwid sub}{exit}
ifelse}loop exch $phei mul $ty exch sub 0 1 $tlx 1 sub{$pwid mul 3 copy 3 -1
roll add exch @tp pop}for pop pop}for}bd/@tv{@sft 0 1 $tlx 1 sub{dup $pwid mul
$tx add exch $psy mul $ty exch sub{dup $ury lt{$phei add}{exit}ifelse}loop 0 1
$tly 1 sub{$phei mul 3 copy sub @tp pop}for pop pop}for}bd/$fm 0 def/wfill{1
$fm eq{fill}{eofill}ifelse}bd/wclip{1 $fm eq{clip}{eoclip}ifelse}bd/@pf{@gs
$ctm setmatrix $pm concat @stb wclip @sv Bburx Bbury $pm itransform/$tury xd
/$turx xd Bbllx Bblly $pm itransform/$tlly xd/$tllx xd newpath $tllx $tlly m
$tllx $tury l $turx $tury l $turx $tlly l $tllx $tlly m @cp pathbbox @rs/$tury
xd/$turx xd/$tlly xd/$tllx xd/$wid $turx $tllx sub def/$hei $tury $tlly sub def
@gs $vectpat{1 0 0 0 0 _ $o @scc_5{wfill}if}{$t $c $m $y $k $n $o @scc_5{
SepMode_5 0 eq $pfrg or{$tllx $tlly Tl $wid $hei scale <00> 8 1 false[8 0 0 1 0
0]{}imagemask}{/$bkg true def}ifelse}if}ifelse @gr $wid 0 gt $hei 0 gt and{$pn
cvlit load aload pop/$pd xd 3 -1 roll sub/$phei xd exch sub/$pwid xd $wid $pwid
div ceiling 1 add/$tlx xd $hei $phei div ceiling 1 add/$tly xd $psx 0 eq{@tv}{
@th}ifelse}if @gr @np/$bkg false def}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm setmatrix 72
1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{@pf}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$t $c $m $y $k $n $o @scc_5{wfill}
{@np}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp
F}bd/S{matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if $T $C $M
$Y $K $N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}
{@np}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}
bd/b{@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat
readhexstring pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd
/Bblly xd/Bbllx xd}bd/@c{@cp}bd/@p{/$fil 1 def 1 eq dup/$vectpat xd{/$pfrg true
def}{@gs $t $c $m $y $k $n $o @scc_5/$pfrg xd @gr}ifelse/$pm xd/$psy xd/$psx xd
/$pyf xd/$pxf xd/$pn xd}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd
}bd/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/tcc{@cc}def/@i{@sm @gs @ii 6 index 1 ne
{/$frg true def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg
false def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd
/$lly xd/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi
string def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub
$ury $lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts
1 eq{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load
$bts 1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]$msimage false eq $ncl 1 eq or{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl
3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def
/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq
{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5
(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{
CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}
ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000 -72000
l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec
cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}
bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}
ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd/@daq{dup type
/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq MaskedImage true eq and
{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq UseLevel 3 eq or and{7 -2
roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{7 -2 roll pop pop @I}
ifelse}ifelse}ifelse}bd systemdict/pdfmark known not{/pdfmark/cleartomark ld}
if
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel9Dict begin
@BeginSysCorelDict
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
234.36000 349.27200 472.89600 510.12000 @E
1 J 1 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.56693 0.56693 90.00000 @w
/$fm 0 def
349.84800 510.12000 m
347.11200 508.39200 L
400.03200 496.15200 m
398.30400 498.88800 L
394.48800 471.67200 m
400.10400 495.93600 L
346.89600 508.24800 m
341.35200 483.98400 L
427.17600 403.48800 m
427.96800 400.82400 L
428.11200 397.00800 L
427.46400 392.47200 L
426.16800 387.72000 L
424.44000 383.40000 L
422.35200 379.94400 L
420.26400 377.85600 L
397.29600 483.69600 m
472.89600 463.39200 L
319.32000 378.00000 m
321.33600 378.00000 L
281.95200 384.12000 m
319.32000 378.00000 L
315.21600 373.32000 m
319.32000 378.00000 L
275.61600 393.48000 m
275.18400 391.75200 L
275.47200 389.80800 L
276.48000 387.79200 L
277.99200 386.06400 L
279.93600 384.76800 L
281.95200 384.12000 L
277.84800 379.51200 m
281.95200 384.12000 L
286.41600 415.36800 m
275.61600 393.48000 L
271.36800 388.94400 m
275.61600 393.48000 L
283.39200 413.28000 m
284.83200 414.79200 L
280.65600 468.64800 m
281.01600 469.65600 L
281.95200 470.59200 L
283.32000 471.31200 L
285.12000 471.67200 L
287.06400 471.74400 L
288.86400 471.45600 L
291.88800 468.79200 m
291.45600 467.64000 L
290.23200 466.63200 L
288.43200 465.98400 L
286.34400 465.69600 L
284.18400 465.91200 L
282.38400 466.56000 L
281.16000 467.49600 L
280.65600 468.64800 L
288.86400 471.45600 m
290.44800 470.80800 L
291.45600 469.87200 L
291.88800 468.79200 L
296.64000 478.29600 m
297.00000 479.37600 L
298.08000 480.31200 L
299.66400 481.03200 L
301.60800 481.32000 L
303.69600 481.24800 L
305.49600 480.81600 L
306.86400 480.02400 L
307.80000 478.44000 m
307.36800 477.28800 L
306.14400 476.28000 L
304.34400 475.56000 L
302.25600 475.34400 L
300.09600 475.56000 L
298.29600 476.20800 L
297.07200 477.14400 L
296.64000 478.29600 L
306.86400 480.02400 m
307.58400 479.23200 L
307.80000 478.44000 L
275.47200 455.90400 m
275.83200 457.05600 L
276.98400 458.06400 L
278.78400 458.78400 L
280.87200 459.07200 L
286.70400 456.04800 m
286.27200 454.89600 L
285.12000 453.88800 L
283.24800 453.16800 L
281.08800 452.88000 L
279.00000 453.09600 L
277.12800 453.74400 L
275.90400 454.75200 L
275.47200 455.90400 L
280.87200 459.07200 m
282.60000 459.00000 L
284.25600 458.56800 L
285.55200 457.92000 L
286.41600 457.05600 L
286.70400 456.04800 L
282.60000 443.37600 m
282.88800 444.45600 L
283.82400 445.39200 L
285.19200 446.11200 L
293.90400 443.52000 m
293.47200 442.36800 L
292.24800 441.28800 L
290.44800 440.64000 L
288.28800 440.35200 L
286.12800 440.56800 L
284.25600 441.21600 L
283.03200 442.22400 L
282.60000 443.37600 L
285.19200 446.11200 m
287.06400 446.54400 L
289.08000 446.61600 L
290.95200 446.25600 L
292.53600 445.60800 L
293.54400 444.60000 L
293.90400 443.52000 L
300.31200 434.59200 m
300.52800 435.31200 L
300.96000 436.03200 L
311.68800 434.66400 m
311.32800 433.44000 L
310.10400 432.43200 L
308.23200 431.71200 L
306.07200 431.49600 L
303.91200 431.71200 L
302.04000 432.36000 L
300.81600 433.36800 L
300.31200 434.59200 L
300.96000 436.03200 m
302.32800 436.96800 L
304.20000 437.61600 L
306.28800 437.76000 L
308.37600 437.54400 L
310.10400 436.82400 L
311.32800 435.81600 L
311.68800 434.66400 L
335.37600 431.92800 m
334.94400 430.77600 L
333.72000 429.76800 L
331.92000 429.04800 L
329.83200 428.76000 L
327.67200 428.97600 L
325.80000 429.62400 L
324.50400 430.56000 L
324.00000 431.78400 L
323.92800 431.92800 m
324.28800 433.00800 L
325.29600 433.94400 L
326.80800 434.66400 L
328.68000 435.02400 L
330.62400 435.09600 L
332.49600 434.66400 L
334.00800 434.01600 L
335.01600 433.00800 L
335.37600 431.92800 L
324.00000 431.78400 m
323.92800 431.92800 L
358.27200 436.17600 m
357.91200 435.02400 L
356.83200 434.08800 L
355.17600 433.36800 L
353.16000 433.08000 L
351.14400 433.15200 L
349.27200 433.58400 L
347.83200 434.44800 L
346.89600 436.17600 m
347.25600 437.25600 L
348.19200 438.19200 L
349.70400 438.91200 L
351.57600 439.27200 L
353.59200 439.27200 L
355.39200 438.91200 L
356.90400 438.19200 L
357.91200 437.25600 L
358.27200 436.17600 L
347.83200 434.44800 m
347.11200 435.31200 L
346.89600 436.17600 L
374.11200 446.11200 m
373.75200 445.10400 L
372.88800 444.16800 L
371.44800 443.44800 L
369.64800 443.08800 L
367.77600 443.01600 L
365.97600 443.37600 L
362.80800 446.18400 m
363.16800 447.26400 L
364.10400 448.20000 L
365.61600 448.84800 L
367.48800 449.20800 L
369.43200 449.20800 L
371.30400 448.84800 L
372.81600 448.12800 L
373.75200 447.19200 L
374.11200 446.11200 L
365.97600 443.37600 m
364.32000 444.02400 L
363.16800 445.03200 L
362.80800 446.18400 L
378.72000 459.00000 m
378.28800 457.84800 L
377.20800 456.91200 L
375.48000 456.26400 L
373.46400 455.97600 L
367.48800 459.07200 m
367.84800 460.08000 L
368.78400 461.01600 L
370.29600 461.73600 L
372.09600 462.02400 L
374.04000 462.02400 L
375.91200 461.66400 L
377.42400 460.94400 L
378.36000 460.00800 L
378.72000 459.00000 L
373.46400 455.97600 m
371.66400 456.04800 L
369.93600 456.48000 L
368.64000 457.20000 L
367.77600 458.06400 L
367.48800 459.07200 L
234.36000 353.23200 m
234.79200 354.74400 L
236.01600 356.04000 L
237.88800 356.97600 L
240.26400 357.55200 L
242.78400 357.69600 L
245.16000 357.26400 L
248.97600 353.66400 m
248.47200 352.00800 L
246.96000 350.64000 L
244.58400 349.63200 L
241.77600 349.27200 L
238.96800 349.48800 L
236.59200 350.35200 L
235.00800 351.64800 L
234.36000 353.23200 L
245.16000 357.26400 m
247.17600 356.32800 L
248.54400 355.10400 L
248.97600 353.66400 L
438.62400 460.08000 m
440.28000 461.16000 L
S

@rax %Note: Object
285.76800 285.33600 472.89600 510.26400 @E
1 J 1 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.56693 0.56693 90.00000 @w
/$fm 0 def
440.28000 461.16000 m
442.51200 461.80800 L
445.10400 461.95200 L
447.62400 461.52000 L
451.58400 457.99200 m
451.08000 456.62400 L
449.64000 455.40000 L
447.48000 454.68000 L
444.96000 454.39200 L
442.36800 454.60800 L
440.13600 455.40000 L
438.55200 456.55200 L
447.62400 461.52000 m
449.71200 460.65600 L
451.15200 459.43200 L
451.58400 457.99200 L
324.57600 326.88000 m
325.00800 328.32000 L
326.16000 329.61600 L
328.10400 330.62400 L
330.40800 331.20000 L
332.92800 331.27200 L
335.30400 330.84000 L
339.33600 326.95200 m
338.83200 325.29600 L
337.17600 323.85600 L
334.80000 322.92000 L
331.99200 322.56000 L
329.11200 322.92000 L
326.73600 323.85600 L
325.15200 325.22400 L
324.57600 326.88000 L
335.30400 330.84000 m
337.46400 329.83200 L
338.83200 328.53600 L
339.33600 326.95200 L
360.72000 507.38400 m
361.22400 506.95200 L
362.88000 506.23200 L
365.47200 505.44000 L
368.85600 504.43200 L
387.36000 501.26400 m
386.64000 501.84000 L
384.40800 502.70400 L
380.88000 503.78400 L
376.63200 504.86400 L
371.95200 505.94400 L
367.63200 506.80800 L
364.03200 507.38400 L
361.65600 507.60000 L
360.72000 507.38400 L
368.85600 504.43200 m
373.89600 503.20800 L
379.00800 502.12800 L
383.32800 501.40800 L
386.28000 501.04800 L
387.36000 501.26400 L
292.10400 304.92000 m
288.93600 301.24800 L
292.10400 304.92000 m
345.16800 289.00800 L
285.76800 312.91200 m
285.91200 310.96800 L
286.77600 309.02400 L
288.21600 307.22400 L
290.01600 305.78400 L
292.10400 304.92000 L
421.20000 376.56000 m
420.26400 377.13600 L
428.83200 403.77600 m
430.27200 402.48000 L
430.99200 399.74400 L
430.99200 395.85600 L
430.34400 391.24800 L
428.97600 386.49600 L
427.17600 382.17600 L
425.16000 378.86400 L
423.07200 376.92000 L
421.20000 376.56000 L
420.55200 392.11200 m
422.35200 397.00800 L
424.58400 400.89600 L
426.88800 403.27200 L
428.83200 403.77600 L
420.55200 392.04000 m
420.55200 392.04000 L
420.55200 392.11200 L
420.26400 377.20800 m
420.55200 392.04000 L
420.26400 377.13600 m
420.26400 377.13600 L
420.26400 377.20800 L
472.89600 463.39200 m
342.07200 308.88000 L
471.88800 429.84000 m
472.89600 463.39200 L
345.16800 289.00800 m
342.14400 285.33600 L
345.16800 289.00800 m
345.16800 300.45600 L
342.14400 296.85600 L
290.59200 457.05600 m
291.02400 460.22400 L
292.32000 463.24800 L
294.48000 466.20000 L
297.50400 468.93600 L
301.17600 471.31200 L
305.49600 473.40000 L
310.39200 475.05600 L
315.64800 476.28000 L
321.19200 477.07200 L
326.88000 477.36000 L
332.64000 477.14400 L
338.18400 476.42400 L
343.44000 475.27200 L
363.60000 457.34400 m
363.16800 454.24800 L
361.87200 451.22400 L
359.64000 448.34400 L
356.68800 445.60800 L
353.01600 443.23200 L
348.62400 441.21600 L
343.80000 439.48800 L
338.47200 438.26400 L
332.92800 437.54400 L
327.24000 437.25600 L
321.48000 437.47200 L
315.93600 438.19200 L
310.60800 439.34400 L
305.71200 441.00000 L
301.39200 443.01600 L
297.64800 445.39200 L
294.62400 448.05600 L
292.46400 450.93600 L
291.09600 453.96000 L
290.59200 457.05600 L
343.44000 475.27200 m
347.83200 473.83200 L
351.79200 472.17600 L
355.24800 470.16000 L
358.20000 467.92800 L
360.50400 465.48000 L
362.23200 462.88800 L
363.31200 460.15200 L
363.60000 457.34400 L
292.39200 451.00800 m
294.33600 453.74400 L
296.92800 456.26400 L
300.24000 458.56800 L
303.98400 460.58400 L
308.30400 462.24000 L
312.98400 463.60800 L
317.95200 464.54400 L
323.06400 465.04800 L
328.32000 465.19200 L
333.57600 464.90400 L
338.61600 464.25600 L
343.51200 463.17600 L
343.51200 463.17600 m
347.61600 461.80800 L
351.43200 460.15200 L
354.88800 458.28000 L
357.76800 456.12000 L
360.14400 453.81600 L
361.87200 451.29600 L
299.16000 445.03200 m
299.66400 448.05600 L
301.24800 451.00800 L
303.84000 453.74400 L
307.36800 456.12000 L
311.68800 458.06400 L
316.51200 459.50400 L
321.84000 460.36800 L
327.31200 460.65600 L
299.16000 444.31200 m
299.16000 445.03200 L
355.17600 445.24800 m
355.17600 444.60000 L
327.31200 460.65600 m
332.78400 460.36800 L
337.96800 459.50400 L
342.79200 458.06400 L
347.04000 456.19200 L
350.49600 453.88800 L
353.08800 451.22400 L
354.67200 448.27200 L
355.17600 445.24800 L
349.84800 510.12000 m
350.85600 510.26400 L
352.87200 510.26400 L
355.82400 509.90400 L
359.49600 509.32800 L
363.88800 508.60800 L
368.64000 507.67200 L
373.60800 506.52000 L
378.57600 505.36800 L
383.40000 504.14400 L
398.30400 498.88800 m
398.08800 498.45600 L
396.72000 498.31200 L
394.20000 498.52800 L
390.74400 498.96000 L
386.42400 499.68000 L
381.52800 500.61600 L
376.27200 501.69600 L
370.87200 502.92000 L
365.68800 504.21600 L
360.86400 505.58400 L
356.68800 506.80800 L
353.37600 507.96000 L
351.07200 508.89600 L
349.84800 509.61600 L
349.84800 510.12000 L
383.40000 504.14400 m
388.15200 502.84800 L
392.18400 501.55200 L
395.28000 500.47200 L
397.36800 499.53600 L
398.30400 498.88800 L
400.10400 495.93600 m
399.52800 495.57600 L
397.94400 495.50400 L
395.35200 495.72000 L
391.96800 496.15200 L
387.93600 496.80000 L
383.25600 497.66400 L
378.21600 498.67200 L
373.03200 499.82400 L
367.77600 501.12000 L
362.80800 502.34400 L
358.27200 503.64000 L
354.31200 504.86400 L
351.07200 505.94400 L
348.69600 506.88000 L
347.32800 507.67200 L
S

@rax %Note: Object
211.17600 273.88800 471.88800 508.24800 @E
1 J 1 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.56693 0.56693 90.00000 @w
/$fm 0 def
347.32800 507.67200 m
346.89600 508.24800 L
400.03200 496.15200 m
400.10400 495.93600 L
296.49600 491.25600 m
395.92800 464.25600 L
394.48800 471.67200 m
393.84000 471.31200 L
392.25600 471.24000 L
389.73600 471.38400 L
386.35200 471.74400 L
382.24800 472.39200 L
377.56800 473.18400 L
372.52800 474.19200 L
367.34400 475.34400 L
362.16000 476.64000 L
357.19200 477.93600 L
352.65600 479.23200 L
348.69600 480.45600 L
345.45600 481.60800 L
343.15200 482.54400 L
341.71200 483.40800 L
341.35200 483.98400 L
332.49600 399.74400 m
332.92800 401.54400 L
332.64000 403.56000 L
331.70400 405.57600 L
330.12000 407.37600 L
328.10400 408.67200 L
326.01600 409.32000 L
326.01600 409.32000 m
288.14400 415.36800 L
284.04000 414.14400 m
283.39200 413.28000 L
288.14400 415.36800 m
286.56000 415.36800 L
285.12000 415.00800 L
284.04000 414.14400 L
283.39200 413.28000 m
271.36800 388.94400 L
271.36800 388.94400 m
271.00800 387.21600 L
271.29600 385.20000 L
272.30400 383.25600 L
273.81600 381.52800 L
275.76000 380.23200 L
277.84800 379.51200 L
277.84800 379.51200 m
315.21600 373.32000 L
319.46400 374.61600 m
319.96800 375.33600 L
315.21600 373.32000 m
316.87200 373.32000 L
318.31200 373.75200 L
319.46400 374.61600 L
319.96800 375.33600 m
332.49600 399.74400 L
352.36800 415.22400 m
251.06400 443.59200 L
352.29600 343.22400 m
252.64800 372.16800 L
409.03200 427.60800 m
410.04000 427.82400 L
411.12000 428.97600 L
412.27200 430.77600 L
413.13600 433.15200 L
413.78400 435.67200 L
414.00000 438.04800 L
412.84800 441.36000 m
411.76800 441.07200 L
410.54400 439.84800 L
409.46400 437.76000 L
408.52800 435.16800 L
407.95200 432.50400 L
407.88000 430.12800 L
408.24000 428.40000 L
409.03200 427.60800 L
414.00000 438.04800 m
413.85600 439.70400 L
413.49600 440.85600 L
412.84800 441.36000 L
438.26400 443.66400 m
352.29600 343.22400 L
352.36800 415.22400 L
395.92800 464.25600 m
352.36800 415.22400 L
438.69600 464.76000 m
395.92800 464.25600 L
438.26400 443.66400 m
438.69600 464.76000 L
395.56800 476.42400 m
438.69600 464.76000 L
342.36000 490.75200 m
342.86400 490.60800 L
342.36000 490.75200 m
296.49600 491.25600 L
251.06400 443.59200 m
296.49600 491.25600 L
252.64800 372.16800 m
251.06400 443.59200 L
211.17600 347.61600 m
252.21600 391.82400 L
342.14400 285.33600 m
288.93600 301.24800 L
342.14400 273.88800 m
342.14400 285.33600 L
212.25600 313.05600 m
211.17600 347.61600 L
342.07200 308.88000 m
211.17600 347.61600 L
342.14400 296.85600 m
342.07200 308.88000 L
342.14400 296.85600 m
288.79200 312.69600 L
283.53600 311.68800 m
282.67200 310.03200 L
282.67200 308.01600 L
283.39200 305.92800 L
284.83200 303.91200 L
286.70400 302.32800 L
288.93600 301.24800 L
288.79200 312.69600 m
286.70400 313.05600 L
284.90400 312.62400 L
283.53600 311.68800 L
471.88800 429.84000 m
342.14400 273.88800 L
212.25600 313.05600 L
S

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel9Dict 9.0 0
%%EOF
