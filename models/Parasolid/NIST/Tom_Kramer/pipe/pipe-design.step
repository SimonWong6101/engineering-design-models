
STEP;

HEADER;
 FILE_IDENTIFICATION(
 'PIPECLAMP_FV',
 '19880710.095017',
 'Tina Lee & Sandy Ressler, (301)-975-3550 or 3549',
 'National Bureau of Standards, Factory Automation Systems Division',
 'STEP VERSION 1.0',
 'AMRF Part Model to Step File Translator, Version 1.0',
 'AMRF PART MODEL');
 FILE_DESCRIPTION('THIS FILE IS TRANSLATED FROM AN AMRF PART MODEL FILE');
 IMP_LEVEL('1.0');
ENDSEC;

DATA;
@1 = CARTESIAN_THREE_COORDINATE( 0.500000, 0.000000, 0.000000);
@2 = CARTESIAN_THREE_COORDINATE( 1.220720, 0.000000, 0.000000);
@3 = CARTESIAN_THREE_COORDINATE( 1.779280, 0.000000, 0.000000);
@4 = CARTESIAN_THREE_COORDINATE( 2.345720, 0.000000, 0.000000);
@5 = CARTESIAN_THREE_COORDINATE( 2.904280, 0.000000, 0.000000);
@6 = CARTESIAN_THREE_COORDINATE( 3.312000, 0.000000, 0.000000);
@7 = CARTESIAN_THREE_COORDINATE( 3.812000, 0.500000, 0.000000);
@8 = CARTESIAN_THREE_COORDINATE( 3.812000, 0.703000, 0.000000);
@9 = CARTESIAN_THREE_COORDINATE( 1.203000, 0.703000, 0.000000);
@10 = CARTESIAN_THREE_COORDINATE( 0.703000, 1.203000, 0.000000);
@11 = CARTESIAN_THREE_COORDINATE( 0.703000, 1.673720, 0.000000);
@12 = CARTESIAN_THREE_COORDINATE( 0.703000, 2.232280, 0.000000);
@13 = CARTESIAN_THREE_COORDINATE( 0.703000, 3.173720, 0.000000);
@14 = CARTESIAN_THREE_COORDINATE( 0.703000, 3.732280, 0.000000);
@15 = CARTESIAN_THREE_COORDINATE( 0.703000, 5.000000, 0.000000);
@16 = CARTESIAN_THREE_COORDINATE( 0.000000, 5.000000, 0.000000);
@17 = CARTESIAN_THREE_COORDINATE( 0.000000, 0.500000, 0.000000);
@18 = CARTESIAN_THREE_COORDINATE( 0.406000, 1.141000, 0.000000);
@19 = CARTESIAN_THREE_COORDINATE( 0.546500, 1.141000, 0.000000);
@20 = CARTESIAN_THREE_COORDINATE( 0.406000, 4.641000, 0.000000);
@21 = CARTESIAN_THREE_COORDINATE( 0.546500, 4.641000, 0.000000);
@22 = CARTESIAN_THREE_COORDINATE( 2.062000, 0.000000, 0.250000);
@23 = CARTESIAN_THREE_COORDINATE( 2.202500, 0.000000, 0.250000);
@24 = CARTESIAN_THREE_COORDINATE( 2.062000, 0.703000, 0.250000);
@25 = CARTESIAN_THREE_COORDINATE( 2.202500, 0.703000, 0.250000);
@26 = CARTESIAN_THREE_COORDINATE( 0.000000, 2.703000, 0.250000);
@27 = CARTESIAN_THREE_COORDINATE( 0.000000, 2.804500, 0.250000);
@28 = CARTESIAN_THREE_COORDINATE( 0.664000, 2.703000, 0.250000);
@29 = CARTESIAN_THREE_COORDINATE( 0.664000, 2.804500, 0.250000);
@30 = CARTESIAN_THREE_COORDINATE( 0.703000, 2.703000, 0.250000);
@31 = CARTESIAN_THREE_COORDINATE( 0.703000, 2.843500, 0.250000);
@32 = CARTESIAN_THREE_COORDINATE( 0.500000, 0.000000, 0.500000);
@33 = CARTESIAN_THREE_COORDINATE( 1.220720, 0.000000, 0.500000);
@34 = CARTESIAN_THREE_COORDINATE( 1.779280, 0.000000, 0.500000);
@35 = CARTESIAN_THREE_COORDINATE( 2.345720, 0.000000, 0.500000);
@36 = CARTESIAN_THREE_COORDINATE( 2.904280, 0.000000, 0.500000);
@37 = CARTESIAN_THREE_COORDINATE( 3.312000, 0.000000, 0.500000);
@38 = CARTESIAN_THREE_COORDINATE( 3.812000, 0.500000, 0.500000);
@39 = CARTESIAN_THREE_COORDINATE( 3.812000, 0.703000, 0.500000);
@40 = CARTESIAN_THREE_COORDINATE( 1.203000, 0.703000, 0.500000);
@41 = CARTESIAN_THREE_COORDINATE( 0.703000, 1.203000, 0.500000);
@42 = CARTESIAN_THREE_COORDINATE( 0.703000, 1.673720, 0.500000);
@43 = CARTESIAN_THREE_COORDINATE( 0.703000, 2.232280, 0.500000);
@44 = CARTESIAN_THREE_COORDINATE( 0.703000, 3.173720, 0.500000);
@45 = CARTESIAN_THREE_COORDINATE( 0.703000, 3.732280, 0.500000);
@46 = CARTESIAN_THREE_COORDINATE( 0.703000, 5.000000, 0.500000);
@47 = CARTESIAN_THREE_COORDINATE( 0.000000, 5.000000, 0.500000);
@48 = CARTESIAN_THREE_COORDINATE( 0.000000, 0.500000, 0.500000);
@49 = CARTESIAN_THREE_COORDINATE( 0.406000, 1.141000, 0.500000);
@50 = CARTESIAN_THREE_COORDINATE( 0.656000, 1.141000, 0.500000);
@51 = CARTESIAN_THREE_COORDINATE( 0.406000, 4.641000, 0.500000);
@52 = CARTESIAN_THREE_COORDINATE( 0.656000, 4.641000, 0.500000);
@53 = CARTESIAN_THREE_COORDINATE( 0.406000, 1.141000, 0.468750);
@54 = CARTESIAN_THREE_COORDINATE( 0.546500, 1.141000, 0.468750);
@55 = CARTESIAN_THREE_COORDINATE( 0.656000, 1.141000, 0.468750);
@56 = CARTESIAN_THREE_COORDINATE( 0.406000, 4.641000, 0.468750);
@57 = CARTESIAN_THREE_COORDINATE( 0.546500, 4.641000, 0.468750);
@58 = CARTESIAN_THREE_COORDINATE( 0.656000, 4.641000, 0.468750);
@59 = CARTESIAN_THREE_COORDINATE( 1.500000, -0.031000, 0.000000);
@60 = CARTESIAN_THREE_COORDINATE( 2.625000, -0.031000, 0.000000);
@61 = CARTESIAN_THREE_COORDINATE( 3.312000, 0.500000, 0.000000);
@62 = CARTESIAN_THREE_COORDINATE( 1.203000, 1.203000, 0.000000);
@63 = CARTESIAN_THREE_COORDINATE( 0.734000, 1.953000, 0.000000);
@64 = CARTESIAN_THREE_COORDINATE( 0.734000, 3.453000, 0.000000);
@65 = CARTESIAN_THREE_COORDINATE( 0.500000, 0.500000, 0.000000);
@66 = CARTESIAN_THREE_COORDINATE( 0.562500, 2.703000, 0.250000);
@67 = CARTESIAN_THREE_COORDINATE( 1.500000, -0.031000, 0.500000);
@68 = CARTESIAN_THREE_COORDINATE( 2.625000, -0.031000, 0.500000);
@69 = CARTESIAN_THREE_COORDINATE( 3.312000, 0.500000, 0.500000);
@70 = CARTESIAN_THREE_COORDINATE( 1.203000, 1.203000, 0.500000);
@71 = CARTESIAN_THREE_COORDINATE( 0.734000, 1.953000, 0.500000);
@72 = CARTESIAN_THREE_COORDINATE( 0.734000, 3.453000, 0.500000);
@73 = CARTESIAN_THREE_COORDINATE( 0.500000, 0.500000, 0.500000);
!* Done Points *!

@74 = THREE_SPACE_DIRECTION( 1.000000, 0.000000, 0.000000);
@75 = THREE_SPACE_DIRECTION( 0.000000, 1.000000, 0.000000);
@76 = THREE_SPACE_DIRECTION( 0.000000, 0.000000, 1.000000);
!* Done UnitVectors *!

@77 = LINE( #1, #74);
@78 = CIRCLE( 0.280995, AXIS2_PLACEMENT(#59, #76, 
       THREE_SPACE_DIRECTION(-0.993896, 0.110322, 0.000000)));
@79 = CIRCLE( 0.280995, AXIS2_PLACEMENT(#60, #76, 
       THREE_SPACE_DIRECTION(-0.993896, 0.110322, 0.000000)));
@80 = CIRCLE( 0.500000, AXIS2_PLACEMENT(#61, #76, 
       THREE_SPACE_DIRECTION(1.000000, 0.000000, 0.000000)));
@81 = LINE( #7, #75);
@82 = LINE( #9, #74);
@83 = CIRCLE( 0.500000, AXIS2_PLACEMENT(#62, #76, 
       THREE_SPACE_DIRECTION(0.000000, -1.000000, 0.000000)));
@84 = LINE( #10, #75);
@85 = CIRCLE( 0.280995, AXIS2_PLACEMENT(#63, #76, 
       THREE_SPACE_DIRECTION(-0.110322, -0.993896, 0.000000)));
@86 = CIRCLE( 0.280995, AXIS2_PLACEMENT(#64, #76, 
       THREE_SPACE_DIRECTION(-0.110322, -0.993896, 0.000000)));
@87 = LINE( #16, #74);
@88 = LINE( #17, #75);
@89 = CIRCLE( 0.500000, AXIS2_PLACEMENT(#65, #76, 
       THREE_SPACE_DIRECTION(0.000000, -1.000000, 0.000000)));
@90 = CIRCLE( 0.140500, AXIS2_PLACEMENT(#18, #76, 
       THREE_SPACE_DIRECTION(1.000000, 0.000000, 0.000000)));
@91 = CIRCLE( 0.140500, AXIS2_PLACEMENT(#20, #76, 
       THREE_SPACE_DIRECTION(1.000000, 0.000000, 0.000000)));
@92 = CIRCLE( 0.140500, AXIS2_PLACEMENT(#22, #75, 
       THREE_SPACE_DIRECTION(1.000000, 0.000000, 0.000000)));
@93 = CIRCLE( 0.140500, AXIS2_PLACEMENT(#24, #75, 
       THREE_SPACE_DIRECTION(1.000000, 0.000000, 0.000000)));
@94 = CIRCLE( 0.101500, AXIS2_PLACEMENT(#26, #74, 
       THREE_SPACE_DIRECTION(0.000000, 1.000000, 0.000000)));
@95 = CIRCLE( 0.101500, AXIS2_PLACEMENT(#28, #74, 
       THREE_SPACE_DIRECTION(0.000000, 1.000000, 0.000000)));
@96 = CIRCLE( 0.140500, AXIS2_PLACEMENT(#30, #74, 
       THREE_SPACE_DIRECTION(0.000000, 1.000000, 0.000000)));
@97 = CIRCLE( 0.140500, AXIS2_PLACEMENT(#53, #76, 
       THREE_SPACE_DIRECTION(1.000000, 0.000000, 0.000000)));
@98 = CIRCLE( 0.250000, AXIS2_PLACEMENT(#53, #76, 
       THREE_SPACE_DIRECTION(1.000000, 0.000000, 0.000000)));
@99 = CIRCLE( 0.140500, AXIS2_PLACEMENT(#56, #76, 
       THREE_SPACE_DIRECTION(1.000000, 0.000000, 0.000000)));
@100 = CIRCLE( 0.250000, AXIS2_PLACEMENT(#56, #76, 
       THREE_SPACE_DIRECTION(1.000000, 0.000000, 0.000000)));
@101 = LINE( #32, #74);
@102 = CIRCLE( 0.280995, AXIS2_PLACEMENT(#67, #76, 
       THREE_SPACE_DIRECTION(-0.993896, 0.110322, 0.000000)));
@103 = CIRCLE( 0.280995, AXIS2_PLACEMENT(#68, #76, 
       THREE_SPACE_DIRECTION(-0.993896, 0.110322, 0.000000)));
@104 = CIRCLE( 0.500000, AXIS2_PLACEMENT(#69, #76, 
       THREE_SPACE_DIRECTION(1.000000, 0.000000, 0.000000)));
@105 = LINE( #38, #75);
@106 = LINE( #40, #74);
@107 = CIRCLE( 0.500000, AXIS2_PLACEMENT(#70, #76, 
       THREE_SPACE_DIRECTION(0.000000, -1.000000, 0.000000)));
@108 = LINE( #41, #75);
@109 = CIRCLE( 0.280995, AXIS2_PLACEMENT(#71, #76, 
       THREE_SPACE_DIRECTION(-0.110322, -0.993896, 0.000000)));
@110 = CIRCLE( 0.280995, AXIS2_PLACEMENT(#72, #76, 
       THREE_SPACE_DIRECTION(-0.110322, -0.993896, 0.000000)));
@111 = LINE( #47, #74);
@112 = LINE( #48, #74);
@113 = CIRCLE( 0.500000, AXIS2_PLACEMENT(#73, #76, 
       THREE_SPACE_DIRECTION(0.000000, -1.000000, 0.000000)));
@114 = CIRCLE( 0.250000, AXIS2_PLACEMENT(#49, #76, 
       THREE_SPACE_DIRECTION(1.000000, 0.000000, 0.000000)));
@115 = CIRCLE( 0.250000, AXIS2_PLACEMENT(#51, #76, 
       THREE_SPACE_DIRECTION(1.000000, 0.000000, 0.000000)));
@116 = LINE( #1, #76);
@117 = LINE( #2, #76);
@118 = LINE( #3, #76);
@119 = LINE( #4, #76);
@120 = LINE( #5, #76);
@121 = LINE( #6, #76);
@122 = LINE( #7, #76);
@123 = LINE( #8, #76);
@124 = LINE( #9, #76);
@125 = LINE( #10, #76);
@126 = LINE( #11, #76);
@127 = LINE( #12, #76);
@128 = LINE( #13, #76);
@129 = LINE( #14, #76);
@130 = LINE( #15, #76);
@131 = LINE( #16, #76);
@132 = LINE( #17, #76);
!* Done Curves *!

@133 = PLANE( AXIS2_PLACEMENT( 
       CARTESIAN_THREE_COORDINATE( 0.000000, 0.000000, 0.000000), #75));
@134 = CYLINDRICAL_SURFACE(  0.281000, AXIS2_PLACEMENT(#59, #76));
@135 = CYLINDRICAL_SURFACE(  0.281000, AXIS2_PLACEMENT(#60, #76));
@136 = CYLINDRICAL_SURFACE(  0.281000, AXIS2_PLACEMENT(#61, #76));
@137 = PLANE( AXIS2_PLACEMENT( 
       CARTESIAN_THREE_COORDINATE( 3.812000, 0.000000, 0.000000), #74));
@138 = PLANE( AXIS2_PLACEMENT( 
       CARTESIAN_THREE_COORDINATE( 0.000000, 0.703000, 0.000000), #75));
@139 = CYLINDRICAL_SURFACE(  0.500000, AXIS2_PLACEMENT(#62, #76));
@140 = PLANE( AXIS2_PLACEMENT( 
       CARTESIAN_THREE_COORDINATE( 0.703000, 0.000000, 0.000000), #74));
@141 = CYLINDRICAL_SURFACE(  0.281000, AXIS2_PLACEMENT(#63, #76));
@142 = CYLINDRICAL_SURFACE(  0.281000, AXIS2_PLACEMENT(#64, #76));
@143 = PLANE( AXIS2_PLACEMENT( 
       CARTESIAN_THREE_COORDINATE( 0.000000, 5.000000, 0.000000), #75));
@144 = PLANE( AXIS2_PLACEMENT( 
       CARTESIAN_THREE_COORDINATE( 0.000000, 0.000000, 0.000000), #74));
@145 = CYLINDRICAL_SURFACE(  0.500000, AXIS2_PLACEMENT(#65, #76));
@146 = CYLINDRICAL_SURFACE(  0.281000, AXIS2_PLACEMENT(#22, #75));
@147 = CYLINDRICAL_SURFACE(  0.203000, AXIS2_PLACEMENT(#26, #74));
@148 = CONICAL_SURFACE(  45.008690,  0.0, AXIS2_PLACEMENT(#66, #74));
@149 = CYLINDRICAL_SURFACE(  0.140500, AXIS2_PLACEMENT(#18, #76));
@150 = PLANE( AXIS2_PLACEMENT( 
       CARTESIAN_THREE_COORDINATE( 0.000000, 0.000000, 0.468750), #76));
@151 = CYLINDRICAL_SURFACE(  0.250000, AXIS2_PLACEMENT(#53, #76));
@152 = CYLINDRICAL_SURFACE(  0.140500, AXIS2_PLACEMENT(#20, #76));
@153 = CYLINDRICAL_SURFACE(  0.250000, AXIS2_PLACEMENT(#56, #76));
@154 = PLANE( AXIS2_PLACEMENT( 
       CARTESIAN_THREE_COORDINATE( 0.000000, 0.000000, 0.000000), #76));
@155 = PLANE( AXIS2_PLACEMENT( 
       CARTESIAN_THREE_COORDINATE( 0.000000, 0.000000, 0.500000), #76));
!* Done Surfaces *!

@156 = VERTEX(  #1);
@157 = VERTEX(  #2);
@158 = VERTEX(  #3);
@159 = VERTEX(  #4);
@160 = VERTEX(  #5);
@161 = VERTEX(  #6);
@162 = VERTEX(  #7);
@163 = VERTEX(  #8);
@164 = VERTEX(  #9);
@165 = VERTEX(  #10);
@166 = VERTEX(  #11);
@167 = VERTEX(  #12);
@168 = VERTEX(  #13);
@169 = VERTEX(  #14);
@170 = VERTEX(  #15);
@171 = VERTEX(  #16);
@172 = VERTEX(  #17);
@173 = VERTEX(  #19);
@174 = VERTEX(  #21);
@175 = VERTEX(  #23);
@176 = VERTEX(  #25);
@177 = VERTEX(  #27);
@178 = VERTEX(  #29);
@179 = VERTEX(  #31);
@180 = VERTEX(  #32);
@181 = VERTEX(  #33);
@182 = VERTEX(  #34);
@183 = VERTEX(  #35);
@184 = VERTEX(  #36);
@185 = VERTEX(  #37);
@186 = VERTEX(  #38);
@187 = VERTEX(  #39);
@188 = VERTEX(  #40);
@189 = VERTEX(  #41);
@190 = VERTEX(  #42);
@191 = VERTEX(  #43);
@192 = VERTEX(  #44);
@193 = VERTEX(  #45);
@194 = VERTEX(  #46);
@195 = VERTEX(  #47);
@196 = VERTEX(  #48);
@197 = VERTEX(  #50);
@198 = VERTEX(  #52);
@199 = VERTEX(  #54);
@200 = VERTEX(  #55);
@201 = VERTEX(  #57);
@202 = VERTEX(  #58);
!* Done Vertices *!

@203 = EDGE( #156, #157, CURVE_LOGICAL_STRUCTURE(#77, .T.));
@204 = EDGE( #158, #157, CURVE_LOGICAL_STRUCTURE(#78, .T.));
@205 = EDGE( #160, #159, CURVE_LOGICAL_STRUCTURE(#79, .T.));
@206 = EDGE( #161, #162, CURVE_LOGICAL_STRUCTURE(#80, .T.));
@207 = EDGE( #162, #163, CURVE_LOGICAL_STRUCTURE(#81, .T.));
@208 = EDGE( #164, #163, CURVE_LOGICAL_STRUCTURE(#82, .T.));
@209 = EDGE( #165, #164, CURVE_LOGICAL_STRUCTURE(#83, .T.));
@210 = EDGE( #165, #166, CURVE_LOGICAL_STRUCTURE(#84, .T.));
@211 = EDGE( #167, #166, CURVE_LOGICAL_STRUCTURE(#85, .T.));
@212 = EDGE( #169, #168, CURVE_LOGICAL_STRUCTURE(#86, .T.));
@213 = EDGE( #171, #170, CURVE_LOGICAL_STRUCTURE(#87, .T.));
@214 = EDGE( #172, #171, CURVE_LOGICAL_STRUCTURE(#88, .T.));
@215 = EDGE( #172, #156, CURVE_LOGICAL_STRUCTURE(#89, .T.));
@216 = EDGE( #173, #173, CURVE_LOGICAL_STRUCTURE(#90, .T.));
@217 = EDGE( #174, #174, CURVE_LOGICAL_STRUCTURE(#91, .T.));
@218 = EDGE( #175, #175, CURVE_LOGICAL_STRUCTURE(#92, .T.));
@219 = EDGE( #176, #176, CURVE_LOGICAL_STRUCTURE(#93, .T.));
@220 = EDGE( #177, #177, CURVE_LOGICAL_STRUCTURE(#94, .T.));
@221 = EDGE( #178, #178, CURVE_LOGICAL_STRUCTURE(#95, .T.));
@222 = EDGE( #179, #179, CURVE_LOGICAL_STRUCTURE(#96, .T.));
@223 = EDGE( #199, #199, CURVE_LOGICAL_STRUCTURE(#97, .T.));
@224 = EDGE( #200, #200, CURVE_LOGICAL_STRUCTURE(#98, .T.));
@225 = EDGE( #201, #201, CURVE_LOGICAL_STRUCTURE(#99, .T.));
@226 = EDGE( #202, #202, CURVE_LOGICAL_STRUCTURE(#100, .T.));
@227 = EDGE( #180, #181, CURVE_LOGICAL_STRUCTURE(#101, .T.));
@228 = EDGE( #182, #181, CURVE_LOGICAL_STRUCTURE(#102, .T.));
@229 = EDGE( #184, #183, CURVE_LOGICAL_STRUCTURE(#103, .T.));
@230 = EDGE( #185, #186, CURVE_LOGICAL_STRUCTURE(#104, .T.));
@231 = EDGE( #186, #187, CURVE_LOGICAL_STRUCTURE(#105, .T.));
@232 = EDGE( #188, #187, CURVE_LOGICAL_STRUCTURE(#106, .T.));
@233 = EDGE( #189, #188, CURVE_LOGICAL_STRUCTURE(#107, .T.));
@234 = EDGE( #189, #190, CURVE_LOGICAL_STRUCTURE(#108, .T.));
@235 = EDGE( #191, #190, CURVE_LOGICAL_STRUCTURE(#109, .T.));
@236 = EDGE( #193, #192, CURVE_LOGICAL_STRUCTURE(#110, .T.));
@237 = EDGE( #195, #194, CURVE_LOGICAL_STRUCTURE(#111, .T.));
@238 = EDGE( #196, #195, CURVE_LOGICAL_STRUCTURE(#112, .T.));
@239 = EDGE( #196, #180, CURVE_LOGICAL_STRUCTURE(#113, .T.));
@240 = EDGE( #197, #197, CURVE_LOGICAL_STRUCTURE(#114, .T.));
@241 = EDGE( #198, #198, CURVE_LOGICAL_STRUCTURE(#115, .T.));
@242 = EDGE( #156, #180, CURVE_LOGICAL_STRUCTURE(#116, .T.));
@243 = EDGE( #157, #181, CURVE_LOGICAL_STRUCTURE(#117, .T.));
@244 = EDGE( #158, #182, CURVE_LOGICAL_STRUCTURE(#118, .T.));
@245 = EDGE( #159, #183, CURVE_LOGICAL_STRUCTURE(#119, .T.));
@246 = EDGE( #160, #184, CURVE_LOGICAL_STRUCTURE(#120, .T.));
@247 = EDGE( #161, #185, CURVE_LOGICAL_STRUCTURE(#121, .T.));
@248 = EDGE( #162, #186, CURVE_LOGICAL_STRUCTURE(#122, .T.));
@249 = EDGE( #163, #187, CURVE_LOGICAL_STRUCTURE(#123, .T.));
@250 = EDGE( #164, #188, CURVE_LOGICAL_STRUCTURE(#124, .T.));
@251 = EDGE( #165, #189, CURVE_LOGICAL_STRUCTURE(#125, .T.));
@252 = EDGE( #166, #190, CURVE_LOGICAL_STRUCTURE(#126, .T.));
@253 = EDGE( #167, #191, CURVE_LOGICAL_STRUCTURE(#127, .T.));
@254 = EDGE( #168, #192, CURVE_LOGICAL_STRUCTURE(#128, .T.));
@255 = EDGE( #169, #193, CURVE_LOGICAL_STRUCTURE(#129, .T.));
@256 = EDGE( #170, #194, CURVE_LOGICAL_STRUCTURE(#130, .T.));
@257 = EDGE( #171, #195, CURVE_LOGICAL_STRUCTURE(#131, .T.));
@258 = EDGE( #172, #196, CURVE_LOGICAL_STRUCTURE(#132, .T.));
@259 = EDGE( #158, #159, CURVE_LOGICAL_STRUCTURE(#77, .T.));
@260 = EDGE( #160, #161, CURVE_LOGICAL_STRUCTURE(#77, .T.));
@261 = EDGE( #167, #168, CURVE_LOGICAL_STRUCTURE(#84, .T.));
@262 = EDGE( #169, #170, CURVE_LOGICAL_STRUCTURE(#84, .T.));
@263 = EDGE( #182, #183, CURVE_LOGICAL_STRUCTURE(#101, .T.));
@264 = EDGE( #184, #185, CURVE_LOGICAL_STRUCTURE(#101, .T.));
@265 = EDGE( #191, #192, CURVE_LOGICAL_STRUCTURE(#108, .T.));
@266 = EDGE( #193, #194, CURVE_LOGICAL_STRUCTURE(#108, .T.));
!* Done Edges *!

@267 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#203, .T.), 
       EDGE_LOGICAL_STRUCTURE(#243, .T.), 
       EDGE_LOGICAL_STRUCTURE(#227, .F.), 
       EDGE_LOGICAL_STRUCTURE(#242, .F.) ));
@268 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#204, .F.), 
       EDGE_LOGICAL_STRUCTURE(#244, .T.), 
       EDGE_LOGICAL_STRUCTURE(#228, .T.), 
       EDGE_LOGICAL_STRUCTURE(#243, .F.) ));
@269 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#205, .F.), 
       EDGE_LOGICAL_STRUCTURE(#246, .T.), 
       EDGE_LOGICAL_STRUCTURE(#229, .T.), 
       EDGE_LOGICAL_STRUCTURE(#245, .F.) ));
@270 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#206, .T.), 
       EDGE_LOGICAL_STRUCTURE(#248, .T.), 
       EDGE_LOGICAL_STRUCTURE(#230, .F.), 
       EDGE_LOGICAL_STRUCTURE(#247, .F.) ));
@271 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#207, .T.), 
       EDGE_LOGICAL_STRUCTURE(#249, .T.), 
       EDGE_LOGICAL_STRUCTURE(#231, .F.), 
       EDGE_LOGICAL_STRUCTURE(#248, .F.) ));
@272 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#208, .F.), 
       EDGE_LOGICAL_STRUCTURE(#250, .T.), 
       EDGE_LOGICAL_STRUCTURE(#232, .T.), 
       EDGE_LOGICAL_STRUCTURE(#249, .F.) ));
@273 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#209, .F.), 
       EDGE_LOGICAL_STRUCTURE(#251, .T.), 
       EDGE_LOGICAL_STRUCTURE(#233, .T.), 
       EDGE_LOGICAL_STRUCTURE(#250, .F.) ));
@274 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#210, .T.), 
       EDGE_LOGICAL_STRUCTURE(#252, .T.), 
       EDGE_LOGICAL_STRUCTURE(#234, .F.), 
       EDGE_LOGICAL_STRUCTURE(#251, .F.) ));
@275 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#211, .F.), 
       EDGE_LOGICAL_STRUCTURE(#253, .T.), 
       EDGE_LOGICAL_STRUCTURE(#235, .T.), 
       EDGE_LOGICAL_STRUCTURE(#252, .F.) ));
@276 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#212, .F.), 
       EDGE_LOGICAL_STRUCTURE(#255, .T.), 
       EDGE_LOGICAL_STRUCTURE(#236, .T.), 
       EDGE_LOGICAL_STRUCTURE(#254, .F.) ));
@277 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#213, .F.), 
       EDGE_LOGICAL_STRUCTURE(#257, .T.), 
       EDGE_LOGICAL_STRUCTURE(#237, .T.), 
       EDGE_LOGICAL_STRUCTURE(#256, .F.) ));
@278 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#214, .F.), 
       EDGE_LOGICAL_STRUCTURE(#258, .T.), 
       EDGE_LOGICAL_STRUCTURE(#238, .T.), 
       EDGE_LOGICAL_STRUCTURE(#257, .F.) ));
@279 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#215, .T.), 
       EDGE_LOGICAL_STRUCTURE(#242, .T.), 
       EDGE_LOGICAL_STRUCTURE(#239, .F.), 
       EDGE_LOGICAL_STRUCTURE(#258, .F.) ));
@280 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#218, .F.) ));
@281 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#220, .F.) ));
@282 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#221, .F.) ));
@283 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#216, .F.) ));
@284 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#224, .T.) ));
@285 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#224, .F.) ));
@286 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#217, .F.) ));
@287 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#226, .F.) ));
@288 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#203, .F.), 
       EDGE_LOGICAL_STRUCTURE(#215, .F.), 
       EDGE_LOGICAL_STRUCTURE(#214, .T.), 
       EDGE_LOGICAL_STRUCTURE(#213, .T.), 
       EDGE_LOGICAL_STRUCTURE(#262, .F.), 
       EDGE_LOGICAL_STRUCTURE(#212, .T.), 
       EDGE_LOGICAL_STRUCTURE(#261, .F.), 
       EDGE_LOGICAL_STRUCTURE(#211, .T.), 
       EDGE_LOGICAL_STRUCTURE(#210, .F.), 
       EDGE_LOGICAL_STRUCTURE(#209, .T.), 
       EDGE_LOGICAL_STRUCTURE(#208, .T.), 
       EDGE_LOGICAL_STRUCTURE(#207, .F.), 
       EDGE_LOGICAL_STRUCTURE(#206, .F.), 
       EDGE_LOGICAL_STRUCTURE(#260, .F.), 
       EDGE_LOGICAL_STRUCTURE(#205, .T.), 
       EDGE_LOGICAL_STRUCTURE(#259, .F.), 
       EDGE_LOGICAL_STRUCTURE(#204, .T.) ));
@289 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#227, .T.), 
       EDGE_LOGICAL_STRUCTURE(#228, .F.), 
       EDGE_LOGICAL_STRUCTURE(#263, .T.), 
       EDGE_LOGICAL_STRUCTURE(#229, .F.), 
       EDGE_LOGICAL_STRUCTURE(#264, .T.), 
       EDGE_LOGICAL_STRUCTURE(#230, .T.), 
       EDGE_LOGICAL_STRUCTURE(#231, .T.), 
       EDGE_LOGICAL_STRUCTURE(#232, .F.), 
       EDGE_LOGICAL_STRUCTURE(#233, .F.), 
       EDGE_LOGICAL_STRUCTURE(#234, .T.), 
       EDGE_LOGICAL_STRUCTURE(#235, .F.), 
       EDGE_LOGICAL_STRUCTURE(#265, .T.), 
       EDGE_LOGICAL_STRUCTURE(#236, .F.), 
       EDGE_LOGICAL_STRUCTURE(#266, .T.), 
       EDGE_LOGICAL_STRUCTURE(#237, .F.), 
       EDGE_LOGICAL_STRUCTURE(#238, .F.), 
       EDGE_LOGICAL_STRUCTURE(#239, .T.) ));
@290 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#259, .T.), 
       EDGE_LOGICAL_STRUCTURE(#245, .T.), 
       EDGE_LOGICAL_STRUCTURE(#263, .F.), 
       EDGE_LOGICAL_STRUCTURE(#244, .F.) ));
@291 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#260, .T.), 
       EDGE_LOGICAL_STRUCTURE(#247, .T.), 
       EDGE_LOGICAL_STRUCTURE(#264, .F.), 
       EDGE_LOGICAL_STRUCTURE(#246, .F.) ));
@292 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#261, .T.), 
       EDGE_LOGICAL_STRUCTURE(#254, .T.), 
       EDGE_LOGICAL_STRUCTURE(#265, .F.), 
       EDGE_LOGICAL_STRUCTURE(#253, .F.) ));
@293 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#262, .T.), 
       EDGE_LOGICAL_STRUCTURE(#256, .T.), 
       EDGE_LOGICAL_STRUCTURE(#266, .F.), 
       EDGE_LOGICAL_STRUCTURE(#255, .F.) ));
@294 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#226, .T.) ));
@295 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#218, .T.) ));
@296 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#219, .F.) ));
@297 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#219, .T.) ));
@298 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#220, .T.) ));
@299 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#221, .T.) ));
@300 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#222, .T.) ));
@301 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#222, .F.) ));
@302 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#216, .T.) ));
@303 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#223, .T.) ));
@304 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#223, .F.) ));
@305 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#240, .T.) ));
@306 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#240, .F.) ));
@307 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#217, .T.) ));
@308 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#225, .T.) ));
@309 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#225, .F.) ));
@310 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#241, .T.) ));
@311 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#241, .F.) ));
!* Done Loops *!

@312 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#267, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#133, .F.));
@313 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#268, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#134, .T.));
@314 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#269, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#135, .T.));
@315 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#270, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#136, .F.));
@316 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#271, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#137, .T.));
@317 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#272, .T.),
       LOOP_LOGICAL_STRUCTURE(#296, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#138, .T.));
@318 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#273, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#139, .T.));
@319 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#274, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#140, .T.));
@320 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#275, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#141, .T.));
@321 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#276, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#142, .T.));
@322 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#277, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#143, .T.));
@323 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#278, .T.),
       LOOP_LOGICAL_STRUCTURE(#298, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#144, .F.));
@324 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#279, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#145, .F.));
@325 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#280, .T.),
       LOOP_LOGICAL_STRUCTURE(#297, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#146, .T.));
@326 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#281, .T.),
       LOOP_LOGICAL_STRUCTURE(#299, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#147, .T.));
@327 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#282, .T.),
       LOOP_LOGICAL_STRUCTURE(#300, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#148, .T.));
@328 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#283, .T.),
       LOOP_LOGICAL_STRUCTURE(#303, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#149, .T.));
@329 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#284, .T.),
       LOOP_LOGICAL_STRUCTURE(#304, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#150, .T.));
@330 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#285, .T.),
       LOOP_LOGICAL_STRUCTURE(#305, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#151, .T.));
@331 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#286, .T.),
       LOOP_LOGICAL_STRUCTURE(#308, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#152, .T.));
@332 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#287, .T.),
       LOOP_LOGICAL_STRUCTURE(#310, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#153, .T.));
@333 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#288, .T.),
       LOOP_LOGICAL_STRUCTURE(#302, .T.),
       LOOP_LOGICAL_STRUCTURE(#307, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#154, .F.));
@334 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#289, .T.),
       LOOP_LOGICAL_STRUCTURE(#306, .T.),
       LOOP_LOGICAL_STRUCTURE(#311, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#155, .T.));
@335 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#290, .T.),
       LOOP_LOGICAL_STRUCTURE(#295, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#133, .F.));
@336 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#291, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#133, .F.));
@337 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#292, .T.),
       LOOP_LOGICAL_STRUCTURE(#301, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#140, .T.));
@338 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#293, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#140, .T.));
@339 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#294, .T.),
       LOOP_LOGICAL_STRUCTURE(#309, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#150, .T.));
!* Done Faces *!

@340 = CLOSED_SHELL( (
        FACE_LOGICAL_STRUCTURE(#312,.T.),
        FACE_LOGICAL_STRUCTURE(#313,.T.),
        FACE_LOGICAL_STRUCTURE(#314,.T.),
        FACE_LOGICAL_STRUCTURE(#315,.T.),
        FACE_LOGICAL_STRUCTURE(#316,.T.),
        FACE_LOGICAL_STRUCTURE(#317,.T.),
        FACE_LOGICAL_STRUCTURE(#318,.T.),
        FACE_LOGICAL_STRUCTURE(#319,.T.),
        FACE_LOGICAL_STRUCTURE(#320,.T.),
        FACE_LOGICAL_STRUCTURE(#321,.T.),
        FACE_LOGICAL_STRUCTURE(#322,.T.),
        FACE_LOGICAL_STRUCTURE(#323,.T.),
        FACE_LOGICAL_STRUCTURE(#324,.T.),
        FACE_LOGICAL_STRUCTURE(#325,.T.),
        FACE_LOGICAL_STRUCTURE(#326,.T.),
        FACE_LOGICAL_STRUCTURE(#327,.T.),
        FACE_LOGICAL_STRUCTURE(#328,.T.),
        FACE_LOGICAL_STRUCTURE(#329,.T.),
        FACE_LOGICAL_STRUCTURE(#330,.T.),
        FACE_LOGICAL_STRUCTURE(#331,.T.),
        FACE_LOGICAL_STRUCTURE(#332,.T.),
        FACE_LOGICAL_STRUCTURE(#333,.T.),
        FACE_LOGICAL_STRUCTURE(#334,.T.),
        FACE_LOGICAL_STRUCTURE(#335,.T.),
        FACE_LOGICAL_STRUCTURE(#336,.T.),
        FACE_LOGICAL_STRUCTURE(#337,.T.),
        FACE_LOGICAL_STRUCTURE(#338,.T.),
        FACE_LOGICAL_STRUCTURE(#339,.T.)   ));
!* Done Shells *!

ENDSEC;

ENDSTEP;
