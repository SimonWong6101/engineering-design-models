!* The file structure of this STEP file is based on the
   Document 284 of ISO TC184/SC4/WG1 - Oct. 27, 1988, and
   Document Title:ISO STEP Baseline Requirements Document (IPIM). 
   This STEP file has been presented in a line-oriented or 
   record-oriented manner in order to aid readability.
   Unnecessary spaces have also been added to aid readability. 
   Note that an ordinary STEP file is not aligned in this
   manner, but is instead a continuous stream of characters.
*!

STEP;

HEADER;
 FILE_IDENTIFICATION(
 'MRSEV1.BREP-DESIGN.STEP',
 '19890723.084518',
 'Tina Lee & Sandy Ressler, (301)-975-3550 or 3549',
 'National Bureau of Standards, Factory Automation Systems Division',
 'STEP VERSION 1.0',
 'AMRF Part Model to Step File Translator, Version 1.0',
 'AMRF PART MODEL');
 FILE_DESCRIPTION('THIS FILE IS TRANSLATED FROM AN AMRF PART MODEL FILE');
 IMP_LEVEL('1.0');
ENDSEC;

DATA;
@1 = CARTESIAN_POINT( , 2.750000, 2.250000, 0.735000);
@2 = CARTESIAN_POINT( , 3.250000, 2.250000, 0.735000);
@3 = CARTESIAN_POINT( , 3.250000, 2.250000, 0.352322);
@4 = CARTESIAN_POINT( , 2.750000, 2.250000, 0.352322);
@5 = CARTESIAN_POINT( , 0.000000, 2.975000, 0.735000);
@6 = CARTESIAN_POINT( , 6.250000, 2.975000, 0.735000);
@7 = CARTESIAN_POINT( , 0.000000, 0.000000, 0.735000);
@8 = CARTESIAN_POINT( , 6.250000, 0.000000, 0.735000);
@9 = CARTESIAN_POINT( , 4.650000, 0.500000, 0.735000);
@10 = CARTESIAN_POINT( , 5.350000, 0.500000, 0.735000);
@11 = CARTESIAN_POINT( , 4.250000, 0.900000, 0.735000);
@12 = CARTESIAN_POINT( , 4.250000, 2.100000, 0.735000);
@13 = CARTESIAN_POINT( , 4.650000, 2.500000, 0.735000);
@14 = CARTESIAN_POINT( , 5.350000, 2.500000, 0.735000);
@15 = CARTESIAN_POINT( , 5.750000, 2.100000, 0.735000);
@16 = CARTESIAN_POINT( , 5.750000, 0.900000, 0.735000);
@17 = CARTESIAN_POINT( , 0.850000, 0.250000, 0.735000);
@18 = CARTESIAN_POINT( , 2.155025, 0.250000, 0.735000);
@19 = CARTESIAN_POINT( , 0.500000, 0.600000, 0.735000);
@20 = CARTESIAN_POINT( , 0.500000, 1.905025, 0.735000);
@21 = CARTESIAN_POINT( , 1.097487, 2.152513, 0.735000);
@22 = CARTESIAN_POINT( , 2.402513, 0.847487, 0.735000);
@23 = CARTESIAN_POINT( , 2.505025, 0.600000, 0.735000);
@24 = CARTESIAN_POINT( , 3.000000, 2.250000, 0.135000);
@25 = CARTESIAN_POINT( , 0.000000, 2.975000, 0.000000);
@26 = CARTESIAN_POINT( , 6.250000, 2.975000, 0.000000);
@27 = CARTESIAN_POINT( , 0.000000, 0.000000, 0.000000);
@28 = CARTESIAN_POINT( , 6.250000, 0.000000, 0.000000);
@29 = CARTESIAN_POINT( , 4.650000, 0.500000, 0.535000);
@30 = CARTESIAN_POINT( , 5.350000, 0.500000, 0.535000);
@31 = CARTESIAN_POINT( , 4.250000, 0.900000, 0.535000);
@32 = CARTESIAN_POINT( , 4.250000, 2.100000, 0.535000);
@33 = CARTESIAN_POINT( , 4.650000, 2.500000, 0.535000);
@34 = CARTESIAN_POINT( , 5.350000, 2.500000, 0.535000);
@35 = CARTESIAN_POINT( , 5.750000, 2.100000, 0.535000);
@36 = CARTESIAN_POINT( , 5.750000, 0.900000, 0.535000);
@37 = CARTESIAN_POINT( , 0.850000, 0.250000, 0.435000);
@38 = CARTESIAN_POINT( , 2.155025, 0.250000, 0.435000);
@39 = CARTESIAN_POINT( , 0.500000, 0.600000, 0.435000);
@40 = CARTESIAN_POINT( , 0.500000, 1.905025, 0.435000);
@41 = CARTESIAN_POINT( , 1.097487, 2.152513, 0.435000);
@42 = CARTESIAN_POINT( , 2.402513, 0.847487, 0.435000);
@43 = CARTESIAN_POINT( , 2.505025, 0.600000, 0.435000);
@44 = CARTESIAN_POINT( , 3.000000, 2.250000, 0.735000);
@45 = CARTESIAN_POINT( , 3.000000, 2.250000, 0.352322);
@46 = CARTESIAN_POINT( , 4.650000, 0.900000, 0.735000);
@47 = CARTESIAN_POINT( , 4.250000, 0.900000, 0.735000);
@48 = CARTESIAN_POINT( , 4.250000, 2.100000, 0.735000);
@49 = CARTESIAN_POINT( , 4.650000, 2.100000, 0.735000);
@50 = CARTESIAN_POINT( , 5.350000, 2.100000, 0.735000);
@51 = CARTESIAN_POINT( , 5.750000, 2.100000, 0.735000);
@52 = CARTESIAN_POINT( , 5.750000, 0.900000, 0.735000);
@53 = CARTESIAN_POINT( , 5.350000, 0.900000, 0.735000);
@54 = CARTESIAN_POINT( , 0.850000, 0.250000, 0.735000);
@55 = CARTESIAN_POINT( , 0.850000, 0.600000, 0.735000);
@56 = CARTESIAN_POINT( , 0.500000, 0.600000, 0.735000);
@57 = CARTESIAN_POINT( , 0.500000, 1.905025, 0.735000);
@58 = CARTESIAN_POINT( , 0.850000, 1.905025, 0.735000);
@59 = CARTESIAN_POINT( , 2.402513, 0.847487, 0.735000);
@60 = CARTESIAN_POINT( , 2.155025, 0.600000, 0.735000);
@61 = CARTESIAN_POINT( , 2.505025, 0.600000, 0.735000);
@62 = CARTESIAN_POINT( , 4.650000, 0.900000, 0.535000);
@63 = CARTESIAN_POINT( , 4.250000, 0.900000, 0.535000);
@64 = CARTESIAN_POINT( , 4.650000, 2.100000, 0.535000);
@65 = CARTESIAN_POINT( , 5.350000, 2.100000, 0.535000);
@66 = CARTESIAN_POINT( , 5.750000, 2.100000, 0.535000);
@67 = CARTESIAN_POINT( , 5.750000, 0.900000, 0.535000);
@68 = CARTESIAN_POINT( , 5.350000, 0.900000, 0.535000);
@69 = CARTESIAN_POINT( , 0.850000, 0.250000, 0.435000);
@70 = CARTESIAN_POINT( , 0.850000, 0.600000, 0.435000);
@71 = CARTESIAN_POINT( , 0.500000, 0.600000, 0.435000);
@72 = CARTESIAN_POINT( , 0.500000, 1.905025, 0.435000);
@73 = CARTESIAN_POINT( , 0.850000, 1.905025, 0.435000);
@74 = CARTESIAN_POINT( , 2.402513, 0.847487, 0.435000);
@75 = CARTESIAN_POINT( , 2.155025, 0.600000, 0.435000);
@76 = CARTESIAN_POINT( , 2.505025, 0.600000, 0.435000);
@77 = CARTESIAN_POINT( , 4.650000, 0.900000, 0.335000);
@78 = CARTESIAN_POINT( , 4.650000, 2.100000, 0.335000);
@79 = CARTESIAN_POINT( , 5.350000, 2.100000, 0.335000);
@80 = CARTESIAN_POINT( , 5.350000, 0.900000, 0.335000);
@81 = CARTESIAN_POINT( , 0.850000, 0.600000, 0.235000);
@82 = CARTESIAN_POINT( , 0.850000, 1.905025, 0.235000);
@83 = CARTESIAN_POINT( , 2.155025, 0.600000, 0.235000);
!* Done Points *!

@84 = DIRECTION( , 0.000000, 0.000000, 1.000000);
@85 = DIRECTION( , 1.000000, 0.000000, 0.000000);
@86 = DIRECTION( , 0.000000, -1.000000, 0.000000);
@87 = DIRECTION( , -1.000000, 0.000000, 0.000000);
@88 = DIRECTION( , 0.000000, 1.000000, 0.000000);
@89 = DIRECTION( , -0.707107, 0.707107, 0.000000);
@90 = DIRECTION( , -0.754710, 0.000000, -0.656059);
@91 = DIRECTION( , 0.754710, 0.000000, -0.656059);
@92 = DIRECTION( , 0.000000, 0.000000, -1.000000);
@93 = DIRECTION( , -0.707107, 0.707107, 0.000000);
@94 = DIRECTION( , 0.707107, 0.707107, 0.000000);
!* Done UnitVectors *!

@95 = CIRCLE( , 0.250000, AXIS2_PLACEMENT( , #44, #84, 
       DIRECTION( , -1.000000, 0.000000, 0.000000)));
@96 = LINE( , #3, #84);
@97 = CIRCLE( , 0.250000, AXIS2_PLACEMENT( , #45, #84, 
       DIRECTION( , -1.000000, 0.000000, 0.000000)));
@98 = LINE( , #4, #84);
@99 = LINE( , #5, #85);
@100 = LINE( , #5, #86);
@101 = LINE( , #8, #87);
@102 = LINE( , #8, #88);
@103 = CIRCLE( , 0.250000, AXIS2_PLACEMENT( , #44, #84, 
       DIRECTION( , 1.000000, 0.000000, 0.000000)));
@104 = LINE( , #9, #85);
@105 = CIRCLE( , 0.400000, AXIS2_PLACEMENT( , #46, #84, 
       DIRECTION( , -1.000000, 0.000000, 0.000000)));
@106 = LINE( , #48, #86);
@107 = CIRCLE( , 0.400000, AXIS2_PLACEMENT( , #49, #84, 
       DIRECTION( , 0.000000, 1.000000, 0.000000)));
@108 = LINE( , #14, #87);
@109 = CIRCLE( , 0.400000, AXIS2_PLACEMENT( , #50, #84, 
       DIRECTION( , 1.000000, -0.000001, 0.000000)));
@110 = LINE( , #52, #88);
@111 = CIRCLE( , 0.400000, AXIS2_PLACEMENT( , #53, #84, 
       DIRECTION( , 0.000000, -1.000000, 0.000000)));
@112 = LINE( , #54, #85);
@113 = CIRCLE( , 0.350000, AXIS2_PLACEMENT( , #55, #84, 
       DIRECTION( , -1.000000, 0.000000, 0.000000)));
@114 = LINE( , #57, #86);
@115 = CIRCLE( , 0.350000, AXIS2_PLACEMENT( , #58, #84, 
       DIRECTION( , 0.707107, 0.707107, 0.000000)));
@116 = LINE( , #59, #89);
@117 = CIRCLE( , 0.350000, AXIS2_PLACEMENT( , #60, #84, 
       DIRECTION( , 1.000000, 0.000000, 0.000000)));
@118 = CIRCLE( , 0.350000, AXIS2_PLACEMENT( , #60, #84, 
       DIRECTION( , 0.000000, -1.000000, 0.000000)));
@119 = CIRCLE( , 0.250000, AXIS2_PLACEMENT( , #45, #84, 
       DIRECTION( , 1.000000, 0.000000, 0.000000)));
@120 = LINE( , #3, #90);
@121 = LINE( , #4, #91);
@122 = LINE( , #5, #92);
@123 = LINE( , #26, #84);
@124 = LINE( , #26, #87);
@125 = LINE( , #27, #88);
@126 = LINE( , #27, #84);
@127 = LINE( , #27, #85);
@128 = LINE( , #8, #92);
@129 = LINE( , #26, #86);
@130 = LINE( , #9, #92);
@131 = LINE( , #29, #85);
@132 = LINE( , #30, #84);
@133 = CIRCLE( , 0.400000, AXIS2_PLACEMENT( , #62, #84, 
       DIRECTION( , -1.000000, 0.000000, 0.000000)));
@134 = LINE( , #11, #92);
@135 = LINE( , #12, #92);
@136 = LINE( , #32, #86);
@137 = CIRCLE( , 0.400000, AXIS2_PLACEMENT( , #64, #84, 
       DIRECTION( , 0.000000, 1.000000, 0.000000)));
@138 = LINE( , #33, #84);
@139 = LINE( , #14, #92);
@140 = LINE( , #34, #87);
@141 = CIRCLE( , 0.400000, AXIS2_PLACEMENT( , #65, #84, 
       DIRECTION( , 1.000000, -0.000001, 0.000000)));
@142 = LINE( , #15, #92);
@143 = LINE( , #16, #92);
@144 = LINE( , #67, #88);
@145 = CIRCLE( , 0.400000, AXIS2_PLACEMENT( , #68, #84, 
       DIRECTION( , 0.000000, -1.000000, 0.000000)));
@146 = LINE( , #17, #92);
@147 = LINE( , #69, #85);
@148 = LINE( , #38, #84);
@149 = CIRCLE( , 0.350000, AXIS2_PLACEMENT( , #70, #84, 
       DIRECTION( , -1.000000, 0.000000, 0.000000)));
@150 = LINE( , #19, #92);
@151 = LINE( , #20, #92);
@152 = LINE( , #72, #86);
@153 = CIRCLE( , 0.350000, AXIS2_PLACEMENT( , #73, #84, 
       DIRECTION( , 0.707107, 0.707107, 0.000000)));
@154 = LINE( , #41, #84);
@155 = LINE( , #22, #92);
@156 = LINE( , #74, #93);
@157 = CIRCLE( , 0.350000, AXIS2_PLACEMENT( , #75, #84, 
       DIRECTION( , 1.000000, 0.000000, 0.000000)));
@158 = LINE( , #43, #84);
@159 = CIRCLE( , 0.350000, AXIS2_PLACEMENT( , #75, #84, 
       DIRECTION( , 0.000000, -1.000000, 0.000000)));
!* Done Curves *!

@160 = CYLINDRICAL_SURFACE( ,  0.250000, AXIS2_PLACEMENT( , #45, #84, ));
@161 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 0.000000, 0.000000, 0.735000), #84, ));
@162 = CYLINDRICAL_SURFACE( ,  0.250000, AXIS2_PLACEMENT( , #45, #84, ));
@163 = CONICAL_SURFACE( ,  49.000042,  0.0, AXIS2_PLACEMENT( , #24, #92, ));
@164 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 0.000000, 2.975000, 0.000000), #88, ));
@165 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 0.000000, 0.000000, 0.000000), #87, ));
@166 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 0.000000, 0.000000, 0.000000), #86, ));
@167 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 6.250000, 0.000000, 0.000000), #85, ));
@168 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 0.000000, 0.500000, 0.000000), #86, ));
@169 = CYLINDRICAL_SURFACE( ,  0.400000, AXIS2_PLACEMENT( , #77, #84, ));
@170 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 4.250000, 0.000000, 0.000000), #87, ));
@171 = CYLINDRICAL_SURFACE( ,  0.400000, AXIS2_PLACEMENT( , #78, #84, ));
@172 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 0.000000, 2.500000, 0.000000), #88, ));
@173 = CYLINDRICAL_SURFACE( ,  0.400000, AXIS2_PLACEMENT( , #79, #84, ));
@174 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 5.750000, 0.000000, 0.000000), #85, ));
@175 = CYLINDRICAL_SURFACE( ,  0.400000, AXIS2_PLACEMENT( , #80, #84, ));
@176 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 0.000000, 0.250000, 0.000000), #86, ));
@177 = CYLINDRICAL_SURFACE( ,  0.350000, AXIS2_PLACEMENT( , #81, #84, ));
@178 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 0.500000, 0.000000, 0.000000), #87, ));
@179 = CYLINDRICAL_SURFACE( ,  0.350000, AXIS2_PLACEMENT( , #82, #84, ));
@180 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 1.625000, 1.625000, 0.000000), #94, ));
@181 = CYLINDRICAL_SURFACE( ,  0.350000, AXIS2_PLACEMENT( , #83, #84, ));
@182 = CYLINDRICAL_SURFACE( ,  0.350000, AXIS2_PLACEMENT( , #83, #84, ));
@183 = CONICAL_SURFACE( ,  49.000042,  0.0, AXIS2_PLACEMENT( , #24, #92, ));
@184 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 0.000000, 0.000000, 0.000000), #92, ));
@185 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 0.000000, 0.000000, 0.535000), #92, ));
@186 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 0.000000, 0.000000, 0.435000), #92, ));
!* Done Surfaces *!

@187 = VERTEX(  #1);
@188 = VERTEX(  #2);
@189 = VERTEX(  #3);
@190 = VERTEX(  #4);
@191 = VERTEX(  #5);
@192 = VERTEX(  #6);
@193 = VERTEX(  #7);
@194 = VERTEX(  #8);
@195 = VERTEX(  #9);
@196 = VERTEX(  #10);
@197 = VERTEX(  #11);
@198 = VERTEX(  #12);
@199 = VERTEX(  #13);
@200 = VERTEX(  #14);
@201 = VERTEX(  #15);
@202 = VERTEX(  #16);
@203 = VERTEX(  #17);
@204 = VERTEX(  #18);
@205 = VERTEX(  #19);
@206 = VERTEX(  #20);
@207 = VERTEX(  #21);
@208 = VERTEX(  #22);
@209 = VERTEX(  #23);
@210 = VERTEX(  #24);
@211 = VERTEX(  #25);
@212 = VERTEX(  #26);
@213 = VERTEX(  #27);
@214 = VERTEX(  #28);
@215 = VERTEX(  #29);
@216 = VERTEX(  #30);
@217 = VERTEX(  #31);
@218 = VERTEX(  #32);
@219 = VERTEX(  #33);
@220 = VERTEX(  #34);
@221 = VERTEX(  #35);
@222 = VERTEX(  #36);
@223 = VERTEX(  #37);
@224 = VERTEX(  #38);
@225 = VERTEX(  #39);
@226 = VERTEX(  #40);
@227 = VERTEX(  #41);
@228 = VERTEX(  #42);
@229 = VERTEX(  #43);
!* Done Vertices *!

@230 = EDGE( #187, #188, CURVE_LOGICAL_STRUCTURE(#95, .T.));
@231 = EDGE( #189, #188, CURVE_LOGICAL_STRUCTURE(#96, .T.));
@232 = EDGE( #190, #189, CURVE_LOGICAL_STRUCTURE(#97, .T.));
@233 = EDGE( #190, #187, CURVE_LOGICAL_STRUCTURE(#98, .T.));
@234 = EDGE( #191, #192, CURVE_LOGICAL_STRUCTURE(#99, .T.));
@235 = EDGE( #191, #193, CURVE_LOGICAL_STRUCTURE(#100, .T.));
@236 = EDGE( #194, #193, CURVE_LOGICAL_STRUCTURE(#101, .T.));
@237 = EDGE( #194, #192, CURVE_LOGICAL_STRUCTURE(#102, .T.));
@238 = EDGE( #188, #187, CURVE_LOGICAL_STRUCTURE(#103, .T.));
@239 = EDGE( #195, #196, CURVE_LOGICAL_STRUCTURE(#104, .T.));
@240 = EDGE( #197, #195, CURVE_LOGICAL_STRUCTURE(#105, .T.));
@241 = EDGE( #198, #197, CURVE_LOGICAL_STRUCTURE(#106, .T.));
@242 = EDGE( #199, #198, CURVE_LOGICAL_STRUCTURE(#107, .T.));
@243 = EDGE( #200, #199, CURVE_LOGICAL_STRUCTURE(#108, .T.));
@244 = EDGE( #201, #200, CURVE_LOGICAL_STRUCTURE(#109, .T.));
@245 = EDGE( #202, #201, CURVE_LOGICAL_STRUCTURE(#110, .T.));
@246 = EDGE( #196, #202, CURVE_LOGICAL_STRUCTURE(#111, .T.));
@247 = EDGE( #203, #204, CURVE_LOGICAL_STRUCTURE(#112, .T.));
@248 = EDGE( #205, #203, CURVE_LOGICAL_STRUCTURE(#113, .T.));
@249 = EDGE( #206, #205, CURVE_LOGICAL_STRUCTURE(#114, .T.));
@250 = EDGE( #207, #206, CURVE_LOGICAL_STRUCTURE(#115, .T.));
@251 = EDGE( #208, #207, CURVE_LOGICAL_STRUCTURE(#116, .T.));
@252 = EDGE( #209, #208, CURVE_LOGICAL_STRUCTURE(#117, .T.));
@253 = EDGE( #204, #209, CURVE_LOGICAL_STRUCTURE(#118, .T.));
@254 = EDGE( #189, #190, CURVE_LOGICAL_STRUCTURE(#119, .T.));
@255 = EDGE( #189, #210, CURVE_LOGICAL_STRUCTURE(#120, .T.));
@256 = EDGE( #190, #210, CURVE_LOGICAL_STRUCTURE(#121, .T.));
@257 = EDGE( #191, #211, CURVE_LOGICAL_STRUCTURE(#122, .T.));
@258 = EDGE( #212, #192, CURVE_LOGICAL_STRUCTURE(#123, .T.));
@259 = EDGE( #212, #211, CURVE_LOGICAL_STRUCTURE(#124, .T.));
@260 = EDGE( #213, #211, CURVE_LOGICAL_STRUCTURE(#125, .T.));
@261 = EDGE( #213, #193, CURVE_LOGICAL_STRUCTURE(#126, .T.));
@262 = EDGE( #213, #214, CURVE_LOGICAL_STRUCTURE(#127, .T.));
@263 = EDGE( #194, #214, CURVE_LOGICAL_STRUCTURE(#128, .T.));
@264 = EDGE( #212, #214, CURVE_LOGICAL_STRUCTURE(#129, .T.));
@265 = EDGE( #195, #215, CURVE_LOGICAL_STRUCTURE(#130, .T.));
@266 = EDGE( #215, #216, CURVE_LOGICAL_STRUCTURE(#131, .T.));
@267 = EDGE( #216, #196, CURVE_LOGICAL_STRUCTURE(#132, .T.));
@268 = EDGE( #217, #215, CURVE_LOGICAL_STRUCTURE(#133, .T.));
@269 = EDGE( #197, #217, CURVE_LOGICAL_STRUCTURE(#134, .T.));
@270 = EDGE( #198, #218, CURVE_LOGICAL_STRUCTURE(#135, .T.));
@271 = EDGE( #218, #217, CURVE_LOGICAL_STRUCTURE(#136, .T.));
@272 = EDGE( #219, #218, CURVE_LOGICAL_STRUCTURE(#137, .T.));
@273 = EDGE( #219, #199, CURVE_LOGICAL_STRUCTURE(#138, .T.));
@274 = EDGE( #200, #220, CURVE_LOGICAL_STRUCTURE(#139, .T.));
@275 = EDGE( #220, #219, CURVE_LOGICAL_STRUCTURE(#140, .T.));
@276 = EDGE( #221, #220, CURVE_LOGICAL_STRUCTURE(#141, .T.));
@277 = EDGE( #201, #221, CURVE_LOGICAL_STRUCTURE(#142, .T.));
@278 = EDGE( #202, #222, CURVE_LOGICAL_STRUCTURE(#143, .T.));
@279 = EDGE( #222, #221, CURVE_LOGICAL_STRUCTURE(#144, .T.));
@280 = EDGE( #216, #222, CURVE_LOGICAL_STRUCTURE(#145, .T.));
@281 = EDGE( #203, #223, CURVE_LOGICAL_STRUCTURE(#146, .T.));
@282 = EDGE( #223, #224, CURVE_LOGICAL_STRUCTURE(#147, .T.));
@283 = EDGE( #224, #204, CURVE_LOGICAL_STRUCTURE(#148, .T.));
@284 = EDGE( #225, #223, CURVE_LOGICAL_STRUCTURE(#149, .T.));
@285 = EDGE( #205, #225, CURVE_LOGICAL_STRUCTURE(#150, .T.));
@286 = EDGE( #206, #226, CURVE_LOGICAL_STRUCTURE(#151, .T.));
@287 = EDGE( #226, #225, CURVE_LOGICAL_STRUCTURE(#152, .T.));
@288 = EDGE( #227, #226, CURVE_LOGICAL_STRUCTURE(#153, .T.));
@289 = EDGE( #227, #207, CURVE_LOGICAL_STRUCTURE(#154, .T.));
@290 = EDGE( #208, #228, CURVE_LOGICAL_STRUCTURE(#155, .T.));
@291 = EDGE( #228, #227, CURVE_LOGICAL_STRUCTURE(#156, .T.));
@292 = EDGE( #229, #228, CURVE_LOGICAL_STRUCTURE(#157, .T.));
@293 = EDGE( #229, #209, CURVE_LOGICAL_STRUCTURE(#158, .T.));
@294 = EDGE( #224, #229, CURVE_LOGICAL_STRUCTURE(#159, .T.));
!* Done Edges *!

@295 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#230, .T.), 
       EDGE_LOGICAL_STRUCTURE(#231, .F.), 
       EDGE_LOGICAL_STRUCTURE(#232, .F.), 
       EDGE_LOGICAL_STRUCTURE(#233, .T.) ));
@296 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#234, .F.), 
       EDGE_LOGICAL_STRUCTURE(#235, .T.), 
       EDGE_LOGICAL_STRUCTURE(#236, .F.), 
       EDGE_LOGICAL_STRUCTURE(#237, .T.) ));
@297 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#238, .F.), 
       EDGE_LOGICAL_STRUCTURE(#230, .F.) ));
@298 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#239, .F.), 
       EDGE_LOGICAL_STRUCTURE(#240, .F.), 
       EDGE_LOGICAL_STRUCTURE(#241, .F.), 
       EDGE_LOGICAL_STRUCTURE(#242, .F.), 
       EDGE_LOGICAL_STRUCTURE(#243, .F.), 
       EDGE_LOGICAL_STRUCTURE(#244, .F.), 
       EDGE_LOGICAL_STRUCTURE(#245, .F.), 
       EDGE_LOGICAL_STRUCTURE(#246, .F.) ));
@299 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#247, .F.), 
       EDGE_LOGICAL_STRUCTURE(#248, .F.), 
       EDGE_LOGICAL_STRUCTURE(#249, .F.), 
       EDGE_LOGICAL_STRUCTURE(#250, .F.), 
       EDGE_LOGICAL_STRUCTURE(#251, .F.), 
       EDGE_LOGICAL_STRUCTURE(#252, .F.), 
       EDGE_LOGICAL_STRUCTURE(#253, .F.) ));
@300 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#238, .T.), 
       EDGE_LOGICAL_STRUCTURE(#233, .F.), 
       EDGE_LOGICAL_STRUCTURE(#254, .F.), 
       EDGE_LOGICAL_STRUCTURE(#231, .T.) ));
@301 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#232, .T.), 
       EDGE_LOGICAL_STRUCTURE(#255, .T.), 
       EDGE_LOGICAL_STRUCTURE(#256, .F.) ));
@302 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#257, .F.), 
       EDGE_LOGICAL_STRUCTURE(#234, .T.), 
       EDGE_LOGICAL_STRUCTURE(#258, .F.), 
       EDGE_LOGICAL_STRUCTURE(#259, .T.) ));
@303 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#260, .F.), 
       EDGE_LOGICAL_STRUCTURE(#261, .T.), 
       EDGE_LOGICAL_STRUCTURE(#235, .F.), 
       EDGE_LOGICAL_STRUCTURE(#257, .T.) ));
@304 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#261, .F.), 
       EDGE_LOGICAL_STRUCTURE(#262, .T.), 
       EDGE_LOGICAL_STRUCTURE(#263, .F.), 
       EDGE_LOGICAL_STRUCTURE(#236, .T.) ));
@305 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#264, .F.), 
       EDGE_LOGICAL_STRUCTURE(#258, .T.), 
       EDGE_LOGICAL_STRUCTURE(#237, .F.), 
       EDGE_LOGICAL_STRUCTURE(#263, .T.) ));
@306 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#267, .F.), 
       EDGE_LOGICAL_STRUCTURE(#266, .F.), 
       EDGE_LOGICAL_STRUCTURE(#265, .F.), 
       EDGE_LOGICAL_STRUCTURE(#239, .T.) ));
@307 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#240, .T.), 
       EDGE_LOGICAL_STRUCTURE(#265, .T.), 
       EDGE_LOGICAL_STRUCTURE(#268, .F.), 
       EDGE_LOGICAL_STRUCTURE(#269, .F.) ));
@308 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#269, .T.), 
       EDGE_LOGICAL_STRUCTURE(#271, .F.), 
       EDGE_LOGICAL_STRUCTURE(#270, .F.), 
       EDGE_LOGICAL_STRUCTURE(#241, .T.) ));
@309 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#242, .T.), 
       EDGE_LOGICAL_STRUCTURE(#270, .T.), 
       EDGE_LOGICAL_STRUCTURE(#272, .F.), 
       EDGE_LOGICAL_STRUCTURE(#273, .T.) ));
@310 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#273, .F.), 
       EDGE_LOGICAL_STRUCTURE(#275, .F.), 
       EDGE_LOGICAL_STRUCTURE(#274, .F.), 
       EDGE_LOGICAL_STRUCTURE(#243, .T.) ));
@311 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#244, .T.), 
       EDGE_LOGICAL_STRUCTURE(#274, .T.), 
       EDGE_LOGICAL_STRUCTURE(#276, .F.), 
       EDGE_LOGICAL_STRUCTURE(#277, .F.) ));
@312 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#277, .T.), 
       EDGE_LOGICAL_STRUCTURE(#279, .F.), 
       EDGE_LOGICAL_STRUCTURE(#278, .F.), 
       EDGE_LOGICAL_STRUCTURE(#245, .T.) ));
@313 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#246, .T.), 
       EDGE_LOGICAL_STRUCTURE(#278, .T.), 
       EDGE_LOGICAL_STRUCTURE(#280, .F.), 
       EDGE_LOGICAL_STRUCTURE(#267, .T.) ));
@314 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#283, .F.), 
       EDGE_LOGICAL_STRUCTURE(#282, .F.), 
       EDGE_LOGICAL_STRUCTURE(#281, .F.), 
       EDGE_LOGICAL_STRUCTURE(#247, .T.) ));
@315 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#248, .T.), 
       EDGE_LOGICAL_STRUCTURE(#281, .T.), 
       EDGE_LOGICAL_STRUCTURE(#284, .F.), 
       EDGE_LOGICAL_STRUCTURE(#285, .F.) ));
@316 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#285, .T.), 
       EDGE_LOGICAL_STRUCTURE(#287, .F.), 
       EDGE_LOGICAL_STRUCTURE(#286, .F.), 
       EDGE_LOGICAL_STRUCTURE(#249, .T.) ));
@317 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#250, .T.), 
       EDGE_LOGICAL_STRUCTURE(#286, .T.), 
       EDGE_LOGICAL_STRUCTURE(#288, .F.), 
       EDGE_LOGICAL_STRUCTURE(#289, .T.) ));
@318 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#289, .F.), 
       EDGE_LOGICAL_STRUCTURE(#291, .F.), 
       EDGE_LOGICAL_STRUCTURE(#290, .F.), 
       EDGE_LOGICAL_STRUCTURE(#251, .T.) ));
@319 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#252, .T.), 
       EDGE_LOGICAL_STRUCTURE(#290, .T.), 
       EDGE_LOGICAL_STRUCTURE(#292, .F.), 
       EDGE_LOGICAL_STRUCTURE(#293, .T.) ));
@320 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#253, .T.), 
       EDGE_LOGICAL_STRUCTURE(#293, .F.), 
       EDGE_LOGICAL_STRUCTURE(#294, .F.), 
       EDGE_LOGICAL_STRUCTURE(#283, .T.) ));
@321 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#254, .T.), 
       EDGE_LOGICAL_STRUCTURE(#256, .T.), 
       EDGE_LOGICAL_STRUCTURE(#255, .F.) ));
@322 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#262, .F.), 
       EDGE_LOGICAL_STRUCTURE(#260, .T.), 
       EDGE_LOGICAL_STRUCTURE(#259, .F.), 
       EDGE_LOGICAL_STRUCTURE(#264, .T.) ));
@323 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#279, .T.), 
       EDGE_LOGICAL_STRUCTURE(#276, .T.), 
       EDGE_LOGICAL_STRUCTURE(#275, .T.), 
       EDGE_LOGICAL_STRUCTURE(#272, .T.), 
       EDGE_LOGICAL_STRUCTURE(#271, .T.), 
       EDGE_LOGICAL_STRUCTURE(#268, .T.), 
       EDGE_LOGICAL_STRUCTURE(#266, .T.), 
       EDGE_LOGICAL_STRUCTURE(#280, .T.) ));
@324 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#282, .T.), 
       EDGE_LOGICAL_STRUCTURE(#294, .T.), 
       EDGE_LOGICAL_STRUCTURE(#292, .T.), 
       EDGE_LOGICAL_STRUCTURE(#291, .T.), 
       EDGE_LOGICAL_STRUCTURE(#288, .T.), 
       EDGE_LOGICAL_STRUCTURE(#287, .T.), 
       EDGE_LOGICAL_STRUCTURE(#284, .T.) ));
!* Done Loops *!

@325 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#295, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#160, .T.));
@326 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#296, .T.),
       LOOP_LOGICAL_STRUCTURE(#297, .T.),
       LOOP_LOGICAL_STRUCTURE(#298, .T.),
       LOOP_LOGICAL_STRUCTURE(#299, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#161, .T.));
@327 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#300, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#162, .T.));
@328 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#301, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#163, .T.));
@329 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#302, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#164, .T.));
@330 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#303, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#165, .T.));
@331 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#304, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#166, .T.));
@332 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#305, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#167, .T.));
@333 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#306, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#168, .T.));
@334 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#307, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#169, .T.));
@335 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#308, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#170, .T.));
@336 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#309, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#171, .T.));
@337 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#310, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#172, .T.));
@338 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#311, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#173, .T.));
@339 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#312, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#174, .T.));
@340 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#313, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#175, .T.));
@341 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#314, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#176, .T.));
@342 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#315, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#177, .T.));
@343 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#316, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#178, .T.));
@344 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#317, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#179, .T.));
@345 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#318, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#180, .T.));
@346 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#319, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#181, .T.));
@347 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#320, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#182, .T.));
@348 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#321, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#183, .T.));
@349 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#322, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#184, .T.));
@350 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#323, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#185, .T.));
@351 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#324, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#186, .T.));
!* Done Faces *!

@352 = CLOSED_SHELL( (
        FACE_LOGICAL_STRUCTURE(#325,.T.),
        FACE_LOGICAL_STRUCTURE(#326,.T.),
        FACE_LOGICAL_STRUCTURE(#327,.T.),
        FACE_LOGICAL_STRUCTURE(#328,.T.),
        FACE_LOGICAL_STRUCTURE(#329,.T.),
        FACE_LOGICAL_STRUCTURE(#330,.T.),
        FACE_LOGICAL_STRUCTURE(#331,.T.),
        FACE_LOGICAL_STRUCTURE(#332,.T.),
        FACE_LOGICAL_STRUCTURE(#333,.T.),
        FACE_LOGICAL_STRUCTURE(#334,.T.),
        FACE_LOGICAL_STRUCTURE(#335,.T.),
        FACE_LOGICAL_STRUCTURE(#336,.T.),
        FACE_LOGICAL_STRUCTURE(#337,.T.),
        FACE_LOGICAL_STRUCTURE(#338,.T.),
        FACE_LOGICAL_STRUCTURE(#339,.T.),
        FACE_LOGICAL_STRUCTURE(#340,.T.),
        FACE_LOGICAL_STRUCTURE(#341,.T.),
        FACE_LOGICAL_STRUCTURE(#342,.T.),
        FACE_LOGICAL_STRUCTURE(#343,.T.),
        FACE_LOGICAL_STRUCTURE(#344,.T.),
        FACE_LOGICAL_STRUCTURE(#345,.T.),
        FACE_LOGICAL_STRUCTURE(#346,.T.),
        FACE_LOGICAL_STRUCTURE(#347,.T.),
        FACE_LOGICAL_STRUCTURE(#348,.T.),
        FACE_LOGICAL_STRUCTURE(#349,.T.),
        FACE_LOGICAL_STRUCTURE(#350,.T.),
        FACE_LOGICAL_STRUCTURE(#351,.T.)   ));
!* Done Shells *!

ENDSEC;

ENDSTEP;
