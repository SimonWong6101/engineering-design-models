!* The file structure of this STEP file is based on the
   Document 284 of ISO TC184/SC4/WG1 - Oct. 27, 1988, and
   Document Title:ISO STEP Baseline Requirements Document (IPIM). 
   This STEP file has been presented in a line-oriented or 
   record-oriented manner in order to aid readability.
   Unnecessary spaces have also been added to aid readability. 
   Note that an ordinary STEP file is not aligned in this
   manner, but is instead a continuous stream of characters.
*!

STEP;

HEADER;
 FILE_IDENTIFICATION(
 'XTRACTPMTEST',
 '19901023.121200',
 'Tina Lee & Sandy Ressler, (301)-975-3550 or 3549',
 'National Bureau of Standards, Factory Automation Systems Division',
 'STEP VERSION 1.0',
 'AMRF Part Model to Step File Translator, Version 1.0',
 'AMRF PART MODEL');
 FILE_DESCRIPTION('THIS FILE IS TRANSLATED FROM AN AMRF PART MODEL FILE');
 IMP_LEVEL('1.0');
ENDSEC;

DATA;
@1 = CARTESIAN_POINT( , 1.050000, 0.900000, 1.500000);
@2 = CARTESIAN_POINT( , 0.550000, 0.900000, 1.500000);
@3 = CARTESIAN_POINT( , 0.550000, 0.900000, 0.000000);
@4 = CARTESIAN_POINT( , 1.050000, 0.900000, 0.000000);
@5 = CARTESIAN_POINT( , 0.000000, 3.000000, 1.500000);
@6 = CARTESIAN_POINT( , 6.500000, 3.000000, 1.500000);
@7 = CARTESIAN_POINT( , 0.000000, 0.000000, 1.500000);
@8 = CARTESIAN_POINT( , 6.500000, 0.000000, 1.500000);
@9 = CARTESIAN_POINT( , 5.500000, 1.200000, 1.500000);
@10 = CARTESIAN_POINT( , 5.500000, 1.800000, 1.500000);
@11 = CARTESIAN_POINT( , 4.800000, 0.500000, 1.500000);
@12 = CARTESIAN_POINT( , 3.200000, 0.500000, 1.500000);
@13 = CARTESIAN_POINT( , 2.500000, 1.200000, 1.500000);
@14 = CARTESIAN_POINT( , 2.500000, 1.800000, 1.500000);
@15 = CARTESIAN_POINT( , 3.200000, 2.500000, 1.500000);
@16 = CARTESIAN_POINT( , 4.800000, 2.500000, 1.500000);
@17 = CARTESIAN_POINT( , 0.000000, 0.000000, 0.000000);
@18 = CARTESIAN_POINT( , 6.500000, 0.000000, 0.000000);
@19 = CARTESIAN_POINT( , 0.000000, 3.000000, 0.000000);
@20 = CARTESIAN_POINT( , 6.500000, 3.000000, 0.000000);
@21 = CARTESIAN_POINT( , 5.500000, 1.200000, 0.900000);
@22 = CARTESIAN_POINT( , 5.500000, 1.800000, 0.900000);
@23 = CARTESIAN_POINT( , 4.800000, 0.500000, 0.900000);
@24 = CARTESIAN_POINT( , 3.200000, 0.500000, 0.900000);
@25 = CARTESIAN_POINT( , 2.500000, 1.200000, 0.900000);
@26 = CARTESIAN_POINT( , 2.500000, 1.800000, 0.900000);
@27 = CARTESIAN_POINT( , 3.200000, 2.500000, 0.900000);
@28 = CARTESIAN_POINT( , 4.800000, 2.500000, 0.900000);
@29 = CARTESIAN_POINT( , 0.800000, 0.900000, 1.500000);
@30 = CARTESIAN_POINT( , 1.050000, 0.900000, 1.500000);
@31 = CARTESIAN_POINT( , 0.800000, 0.900000, 0.000000);
@32 = CARTESIAN_POINT( , 1.050000, 0.900000, 0.000000);
@33 = CARTESIAN_POINT( , 0.550000, 0.900000, 1.500000);
@34 = CARTESIAN_POINT( , 5.500000, 1.200000, 1.500000);
@35 = CARTESIAN_POINT( , 4.800000, 1.200000, 1.500000);
@36 = CARTESIAN_POINT( , 3.200000, 1.200000, 1.500000);
@37 = CARTESIAN_POINT( , 2.500000, 1.200000, 1.500000);
@38 = CARTESIAN_POINT( , 2.500000, 1.800000, 1.500000);
@39 = CARTESIAN_POINT( , 3.200000, 1.800000, 1.500000);
@40 = CARTESIAN_POINT( , 4.800000, 1.800000, 1.500000);
@41 = CARTESIAN_POINT( , 5.500000, 1.800000, 1.500000);
@42 = CARTESIAN_POINT( , 0.550000, 0.900000, 0.000000);
@43 = CARTESIAN_POINT( , 4.800000, 1.200000, 0.900000);
@44 = CARTESIAN_POINT( , 3.200000, 1.200000, 0.900000);
@45 = CARTESIAN_POINT( , 2.500000, 1.200000, 0.900000);
@46 = CARTESIAN_POINT( , 3.200000, 1.800000, 0.900000);
@47 = CARTESIAN_POINT( , 4.800000, 1.800000, 0.900000);
@48 = CARTESIAN_POINT( , 0.800000, 0.900000, -0.250000);
@49 = CARTESIAN_POINT( , 4.800000, 1.200000, 0.000000);
@50 = CARTESIAN_POINT( , 3.200000, 1.200000, 0.000000);
@51 = CARTESIAN_POINT( , 3.200000, 1.800000, 0.000000);
@52 = CARTESIAN_POINT( , 4.800000, 1.800000, 0.000000);
!* Done Points *!

@53 = DIRECTION( , 0.000000, 0.000000, 1.000000);
@54 = DIRECTION( , 1.000000, 0.000000, 0.000000);
@55 = DIRECTION( , 0.000000, -1.000000, 0.000000);
@56 = DIRECTION( , -1.000000, 0.000000, 0.000000);
@57 = DIRECTION( , 0.000000, 1.000000, 0.000000);
@58 = DIRECTION( , 0.000000, 0.000000, -1.000000);
!* Done UnitVectors *!

@59 = CIRCLE( , 0.250000, AXIS2_PLACEMENT( , #29, #53, 
       DIRECTION( , 1.000000, 0.000000, 0.000000)));
@60 = LINE( , #3, #53);
@61 = CIRCLE( , 0.250000, AXIS2_PLACEMENT( , #31, #53, 
       DIRECTION( , 1.000000, 0.000000, 0.000000)));
@62 = LINE( , #4, #53);
@63 = LINE( , #5, #54);
@64 = LINE( , #5, #55);
@65 = LINE( , #8, #56);
@66 = LINE( , #8, #57);
@67 = CIRCLE( , 0.250000, AXIS2_PLACEMENT( , #29, #53, 
       DIRECTION( , -1.000000, 0.000000, 0.000000)));
@68 = LINE( , #34, #57);
@69 = CIRCLE( , 0.700000, AXIS2_PLACEMENT( , #35, #53, 
       DIRECTION( , 0.000000, -1.000000, 0.000000)));
@70 = LINE( , #12, #54);
@71 = CIRCLE( , 0.700000, AXIS2_PLACEMENT( , #36, #53, 
       DIRECTION( , -1.000000, 0.000000, 0.000000)));
@72 = LINE( , #38, #55);
@73 = CIRCLE( , 0.700000, AXIS2_PLACEMENT( , #39, #53, 
       DIRECTION( , 0.000000, 1.000000, 0.000000)));
@74 = LINE( , #16, #56);
@75 = CIRCLE( , 0.700000, AXIS2_PLACEMENT( , #40, #53, 
       DIRECTION( , 1.000000, 0.000000, 0.000000)));
@76 = CIRCLE( , 0.250000, AXIS2_PLACEMENT( , #31, #53, 
       DIRECTION( , -1.000000, 0.000000, 0.000000)));
@77 = LINE( , #17, #54);
@78 = LINE( , #17, #57);
@79 = LINE( , #20, #56);
@80 = LINE( , #20, #55);
@81 = LINE( , #5, #58);
@82 = LINE( , #20, #53);
@83 = LINE( , #17, #53);
@84 = LINE( , #8, #58);
@85 = LINE( , #9, #58);
@86 = LINE( , #21, #57);
@87 = LINE( , #10, #58);
@88 = CIRCLE( , 0.700000, AXIS2_PLACEMENT( , #43, #53, 
       DIRECTION( , 0.000000, -1.000000, 0.000000)));
@89 = LINE( , #23, #53);
@90 = LINE( , #12, #58);
@91 = LINE( , #24, #54);
@92 = CIRCLE( , 0.700000, AXIS2_PLACEMENT( , #44, #53, 
       DIRECTION( , -1.000000, 0.000000, 0.000000)));
@93 = LINE( , #13, #58);
@94 = LINE( , #14, #58);
@95 = LINE( , #26, #55);
@96 = CIRCLE( , 0.700000, AXIS2_PLACEMENT( , #46, #53, 
       DIRECTION( , 0.000000, 1.000000, 0.000000)));
@97 = LINE( , #27, #53);
@98 = LINE( , #16, #58);
@99 = LINE( , #28, #56);
@100 = CIRCLE( , 0.700000, AXIS2_PLACEMENT( , #47, #53, 
       DIRECTION( , 1.000000, 0.000000, 0.000000)));
!* Done Curves *!

@101 = CYLINDRICAL_SURFACE( ,  0.250000, AXIS2_PLACEMENT( , #48, #53, ));
@102 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 0.000000, 0.000000, 1.500000), #53, ));
@103 = CYLINDRICAL_SURFACE( ,  0.250000, AXIS2_PLACEMENT( , #48, #53, ));
@104 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 0.000000, 0.000000, 0.000000), #58, ));
@105 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 0.000000, 3.000000, 0.000000), #57, ));
@106 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 0.000000, 0.000000, 0.000000), #56, ));
@107 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 0.000000, 0.000000, 0.000000), #55, ));
@108 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 6.500000, 0.000000, 0.000000), #54, ));
@109 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 5.500000, 0.000000, 0.000000), #54, ));
@110 = CYLINDRICAL_SURFACE( ,  0.700000, AXIS2_PLACEMENT( , #49, #53, ));
@111 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 0.000000, 0.500000, 0.000000), #55, ));
@112 = CYLINDRICAL_SURFACE( ,  0.700000, AXIS2_PLACEMENT( , #50, #53, ));
@113 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 2.500000, 0.000000, 0.000000), #56, ));
@114 = CYLINDRICAL_SURFACE( ,  0.700000, AXIS2_PLACEMENT( , #51, #53, ));
@115 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 0.000000, 2.500000, 0.000000), #57, ));
@116 = CYLINDRICAL_SURFACE( ,  0.700000, AXIS2_PLACEMENT( , #52, #53, ));
@117 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 0.000000, 0.000000, 0.900000), #58, ));
!* Done Surfaces *!

@118 = VERTEX(  #1);
@119 = VERTEX(  #2);
@120 = VERTEX(  #3);
@121 = VERTEX(  #4);
@122 = VERTEX(  #5);
@123 = VERTEX(  #6);
@124 = VERTEX(  #7);
@125 = VERTEX(  #8);
@126 = VERTEX(  #9);
@127 = VERTEX(  #10);
@128 = VERTEX(  #11);
@129 = VERTEX(  #12);
@130 = VERTEX(  #13);
@131 = VERTEX(  #14);
@132 = VERTEX(  #15);
@133 = VERTEX(  #16);
@134 = VERTEX(  #17);
@135 = VERTEX(  #18);
@136 = VERTEX(  #19);
@137 = VERTEX(  #20);
@138 = VERTEX(  #21);
@139 = VERTEX(  #22);
@140 = VERTEX(  #23);
@141 = VERTEX(  #24);
@142 = VERTEX(  #25);
@143 = VERTEX(  #26);
@144 = VERTEX(  #27);
@145 = VERTEX(  #28);
!* Done Vertices *!

@146 = EDGE( #118, #119, CURVE_LOGICAL_STRUCTURE(#59, .T.));
@147 = EDGE( #120, #119, CURVE_LOGICAL_STRUCTURE(#60, .T.));
@148 = EDGE( #121, #120, CURVE_LOGICAL_STRUCTURE(#61, .T.));
@149 = EDGE( #121, #118, CURVE_LOGICAL_STRUCTURE(#62, .T.));
@150 = EDGE( #122, #123, CURVE_LOGICAL_STRUCTURE(#63, .T.));
@151 = EDGE( #122, #124, CURVE_LOGICAL_STRUCTURE(#64, .T.));
@152 = EDGE( #125, #124, CURVE_LOGICAL_STRUCTURE(#65, .T.));
@153 = EDGE( #125, #123, CURVE_LOGICAL_STRUCTURE(#66, .T.));
@154 = EDGE( #119, #118, CURVE_LOGICAL_STRUCTURE(#67, .T.));
@155 = EDGE( #126, #127, CURVE_LOGICAL_STRUCTURE(#68, .T.));
@156 = EDGE( #128, #126, CURVE_LOGICAL_STRUCTURE(#69, .T.));
@157 = EDGE( #129, #128, CURVE_LOGICAL_STRUCTURE(#70, .T.));
@158 = EDGE( #130, #129, CURVE_LOGICAL_STRUCTURE(#71, .T.));
@159 = EDGE( #131, #130, CURVE_LOGICAL_STRUCTURE(#72, .T.));
@160 = EDGE( #132, #131, CURVE_LOGICAL_STRUCTURE(#73, .T.));
@161 = EDGE( #133, #132, CURVE_LOGICAL_STRUCTURE(#74, .T.));
@162 = EDGE( #127, #133, CURVE_LOGICAL_STRUCTURE(#75, .T.));
@163 = EDGE( #120, #121, CURVE_LOGICAL_STRUCTURE(#76, .T.));
@164 = EDGE( #134, #135, CURVE_LOGICAL_STRUCTURE(#77, .T.));
@165 = EDGE( #134, #136, CURVE_LOGICAL_STRUCTURE(#78, .T.));
@166 = EDGE( #137, #136, CURVE_LOGICAL_STRUCTURE(#79, .T.));
@167 = EDGE( #137, #135, CURVE_LOGICAL_STRUCTURE(#80, .T.));
@168 = EDGE( #122, #136, CURVE_LOGICAL_STRUCTURE(#81, .T.));
@169 = EDGE( #137, #123, CURVE_LOGICAL_STRUCTURE(#82, .T.));
@170 = EDGE( #134, #124, CURVE_LOGICAL_STRUCTURE(#83, .T.));
@171 = EDGE( #125, #135, CURVE_LOGICAL_STRUCTURE(#84, .T.));
@172 = EDGE( #126, #138, CURVE_LOGICAL_STRUCTURE(#85, .T.));
@173 = EDGE( #138, #139, CURVE_LOGICAL_STRUCTURE(#86, .T.));
@174 = EDGE( #127, #139, CURVE_LOGICAL_STRUCTURE(#87, .T.));
@175 = EDGE( #140, #138, CURVE_LOGICAL_STRUCTURE(#88, .T.));
@176 = EDGE( #140, #128, CURVE_LOGICAL_STRUCTURE(#89, .T.));
@177 = EDGE( #129, #141, CURVE_LOGICAL_STRUCTURE(#90, .T.));
@178 = EDGE( #141, #140, CURVE_LOGICAL_STRUCTURE(#91, .T.));
@179 = EDGE( #142, #141, CURVE_LOGICAL_STRUCTURE(#92, .T.));
@180 = EDGE( #130, #142, CURVE_LOGICAL_STRUCTURE(#93, .T.));
@181 = EDGE( #131, #143, CURVE_LOGICAL_STRUCTURE(#94, .T.));
@182 = EDGE( #143, #142, CURVE_LOGICAL_STRUCTURE(#95, .T.));
@183 = EDGE( #144, #143, CURVE_LOGICAL_STRUCTURE(#96, .T.));
@184 = EDGE( #144, #132, CURVE_LOGICAL_STRUCTURE(#97, .T.));
@185 = EDGE( #133, #145, CURVE_LOGICAL_STRUCTURE(#98, .T.));
@186 = EDGE( #145, #144, CURVE_LOGICAL_STRUCTURE(#99, .T.));
@187 = EDGE( #139, #145, CURVE_LOGICAL_STRUCTURE(#100, .T.));
!* Done Edges *!

@188 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#146, .T.), 
       EDGE_LOGICAL_STRUCTURE(#147, .F.), 
       EDGE_LOGICAL_STRUCTURE(#148, .F.), 
       EDGE_LOGICAL_STRUCTURE(#149, .T.) ));
@189 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#150, .F.), 
       EDGE_LOGICAL_STRUCTURE(#151, .T.), 
       EDGE_LOGICAL_STRUCTURE(#152, .F.), 
       EDGE_LOGICAL_STRUCTURE(#153, .T.) ));
@190 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#154, .F.), 
       EDGE_LOGICAL_STRUCTURE(#146, .F.) ));
@191 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#155, .F.), 
       EDGE_LOGICAL_STRUCTURE(#156, .F.), 
       EDGE_LOGICAL_STRUCTURE(#157, .F.), 
       EDGE_LOGICAL_STRUCTURE(#158, .F.), 
       EDGE_LOGICAL_STRUCTURE(#159, .F.), 
       EDGE_LOGICAL_STRUCTURE(#160, .F.), 
       EDGE_LOGICAL_STRUCTURE(#161, .F.), 
       EDGE_LOGICAL_STRUCTURE(#162, .F.) ));
@192 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#154, .T.), 
       EDGE_LOGICAL_STRUCTURE(#149, .F.), 
       EDGE_LOGICAL_STRUCTURE(#163, .F.), 
       EDGE_LOGICAL_STRUCTURE(#147, .T.) ));
@193 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#164, .F.), 
       EDGE_LOGICAL_STRUCTURE(#165, .T.), 
       EDGE_LOGICAL_STRUCTURE(#166, .F.), 
       EDGE_LOGICAL_STRUCTURE(#167, .T.) ));
@194 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#163, .T.), 
       EDGE_LOGICAL_STRUCTURE(#148, .T.) ));
@195 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#168, .F.), 
       EDGE_LOGICAL_STRUCTURE(#150, .T.), 
       EDGE_LOGICAL_STRUCTURE(#169, .F.), 
       EDGE_LOGICAL_STRUCTURE(#166, .T.) ));
@196 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#165, .F.), 
       EDGE_LOGICAL_STRUCTURE(#170, .T.), 
       EDGE_LOGICAL_STRUCTURE(#151, .F.), 
       EDGE_LOGICAL_STRUCTURE(#168, .T.) ));
@197 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#170, .F.), 
       EDGE_LOGICAL_STRUCTURE(#164, .T.), 
       EDGE_LOGICAL_STRUCTURE(#171, .F.), 
       EDGE_LOGICAL_STRUCTURE(#152, .T.) ));
@198 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#167, .F.), 
       EDGE_LOGICAL_STRUCTURE(#169, .T.), 
       EDGE_LOGICAL_STRUCTURE(#153, .F.), 
       EDGE_LOGICAL_STRUCTURE(#171, .T.) ));
@199 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#174, .T.), 
       EDGE_LOGICAL_STRUCTURE(#173, .F.), 
       EDGE_LOGICAL_STRUCTURE(#172, .F.), 
       EDGE_LOGICAL_STRUCTURE(#155, .T.) ));
@200 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#156, .T.), 
       EDGE_LOGICAL_STRUCTURE(#172, .T.), 
       EDGE_LOGICAL_STRUCTURE(#175, .F.), 
       EDGE_LOGICAL_STRUCTURE(#176, .T.) ));
@201 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#176, .F.), 
       EDGE_LOGICAL_STRUCTURE(#178, .F.), 
       EDGE_LOGICAL_STRUCTURE(#177, .F.), 
       EDGE_LOGICAL_STRUCTURE(#157, .T.) ));
@202 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#158, .T.), 
       EDGE_LOGICAL_STRUCTURE(#177, .T.), 
       EDGE_LOGICAL_STRUCTURE(#179, .F.), 
       EDGE_LOGICAL_STRUCTURE(#180, .F.) ));
@203 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#180, .T.), 
       EDGE_LOGICAL_STRUCTURE(#182, .F.), 
       EDGE_LOGICAL_STRUCTURE(#181, .F.), 
       EDGE_LOGICAL_STRUCTURE(#159, .T.) ));
@204 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#160, .T.), 
       EDGE_LOGICAL_STRUCTURE(#181, .T.), 
       EDGE_LOGICAL_STRUCTURE(#183, .F.), 
       EDGE_LOGICAL_STRUCTURE(#184, .T.) ));
@205 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#184, .F.), 
       EDGE_LOGICAL_STRUCTURE(#186, .F.), 
       EDGE_LOGICAL_STRUCTURE(#185, .F.), 
       EDGE_LOGICAL_STRUCTURE(#161, .T.) ));
@206 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#162, .T.), 
       EDGE_LOGICAL_STRUCTURE(#185, .T.), 
       EDGE_LOGICAL_STRUCTURE(#187, .F.), 
       EDGE_LOGICAL_STRUCTURE(#174, .F.) ));
@207 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#173, .T.), 
       EDGE_LOGICAL_STRUCTURE(#187, .T.), 
       EDGE_LOGICAL_STRUCTURE(#186, .T.), 
       EDGE_LOGICAL_STRUCTURE(#183, .T.), 
       EDGE_LOGICAL_STRUCTURE(#182, .T.), 
       EDGE_LOGICAL_STRUCTURE(#179, .T.), 
       EDGE_LOGICAL_STRUCTURE(#178, .T.), 
       EDGE_LOGICAL_STRUCTURE(#175, .T.) ));
!* Done Loops *!

@208 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#188, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#101, .T.));
@209 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#189, .T.),
       LOOP_LOGICAL_STRUCTURE(#190, .T.),
       LOOP_LOGICAL_STRUCTURE(#191, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#102, .T.));
@210 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#192, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#103, .T.));
@211 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#193, .T.),
       LOOP_LOGICAL_STRUCTURE(#194, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#104, .T.));
@212 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#195, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#105, .T.));
@213 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#196, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#106, .T.));
@214 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#197, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#107, .T.));
@215 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#198, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#108, .T.));
@216 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#199, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#109, .T.));
@217 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#200, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#110, .T.));
@218 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#201, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#111, .T.));
@219 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#202, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#112, .T.));
@220 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#203, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#113, .T.));
@221 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#204, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#114, .T.));
@222 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#205, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#115, .T.));
@223 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#206, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#116, .T.));
@224 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#207, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#117, .T.));
!* Done Faces *!

@225 = CLOSED_SHELL( (
        FACE_LOGICAL_STRUCTURE(#208,.T.),
        FACE_LOGICAL_STRUCTURE(#209,.T.),
        FACE_LOGICAL_STRUCTURE(#210,.T.),
        FACE_LOGICAL_STRUCTURE(#211,.T.),
        FACE_LOGICAL_STRUCTURE(#212,.T.),
        FACE_LOGICAL_STRUCTURE(#213,.T.),
        FACE_LOGICAL_STRUCTURE(#214,.T.),
        FACE_LOGICAL_STRUCTURE(#215,.T.),
        FACE_LOGICAL_STRUCTURE(#216,.T.),
        FACE_LOGICAL_STRUCTURE(#217,.T.),
        FACE_LOGICAL_STRUCTURE(#218,.T.),
        FACE_LOGICAL_STRUCTURE(#219,.T.),
        FACE_LOGICAL_STRUCTURE(#220,.T.),
        FACE_LOGICAL_STRUCTURE(#221,.T.),
        FACE_LOGICAL_STRUCTURE(#222,.T.),
        FACE_LOGICAL_STRUCTURE(#223,.T.),
        FACE_LOGICAL_STRUCTURE(#224,.T.)   ));
!* Done Shells *!

ENDSEC;

ENDSTEP;
