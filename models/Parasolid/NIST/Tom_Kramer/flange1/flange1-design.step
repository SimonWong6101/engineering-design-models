!* The file structure of this STEP file is based on the
   Document 284 of ISO TC184/SC4/WG1 -Oct. 27, 1988.  and
   Document Title: ISO STEP Baseline Requirements Document (IPIM).
   This STEP file has been presented in a line-oriented or 
   record-oriented manner in order to aid readability.
   Unnecessary spaces have also been added to aid readability. 
   Note that an ordinary STEP file is not aligned in this
   manner, but is instead a continuous stream of characters.
*!

STEP;

HEADER;
 FILE_IDENTIFICATION(
 'flange-1',
 '19890116.141450',
 'Tina Lee & Sandy Ressler, (301)-975-3550 or 3549',
 'National Bureau of Standards, Factory Automation Systems Division',
 'STEP VERSION 1.0',
 'AMRF Part Model to Step File Translator, Version 1.0',
 'AMRF PART MODEL');
 FILE_DESCRIPTION('THIS FILE IS TRANSLATED FROM AN AMRF PART MODEL FILE');
 IMP_LEVEL('1.0');
ENDSEC;

DATA;
@1 = CARTESIAN_POINT( , -4.124960, -4.463450, 0.354408);
@2 = CARTESIAN_POINT( , -4.124960, -4.286250, 0.000000);
@3 = CARTESIAN_POINT( , -4.124960, -3.208040, -2.676430);
@4 = CARTESIAN_POINT( , -4.124960, -3.208040, 3.385240);
@5 = CARTESIAN_POINT( , -4.124960, -3.030840, -3.030840);
@6 = CARTESIAN_POINT( , -4.124960, -3.030840, 3.030840);
@7 = CARTESIAN_POINT( , -4.124960, -0.177204, -3.931840);
@8 = CARTESIAN_POINT( , -4.124960, -0.177204, 4.640660);
@9 = CARTESIAN_POINT( , -4.124960, 0.000000, -4.286250);
@10 = CARTESIAN_POINT( , -4.124960, 0.000000, 0.000000);
@11 = CARTESIAN_POINT( , -4.124960, 0.000000, 4.286250);
@12 = CARTESIAN_POINT( , -4.124960, 2.226310, 0.000000);
@13 = CARTESIAN_POINT( , -4.124960, 2.853630, -2.676430);
@14 = CARTESIAN_POINT( , -4.124960, 2.853630, 3.385240);
@15 = CARTESIAN_POINT( , -4.124960, 3.030840, -3.030840);
@16 = CARTESIAN_POINT( , -4.124960, 3.030840, 3.030840);
@17 = CARTESIAN_POINT( , -4.124960, 4.109050, 0.354408);
@18 = CARTESIAN_POINT( , -4.124960, 4.286250, 0.000000);
@19 = CARTESIAN_POINT( , -4.124960, 5.080000, 0.000000);
@20 = CARTESIAN_POINT( , -3.657600, 0.000000, 0.000000);
@21 = CARTESIAN_POINT( , -3.657600, 4.927600, 0.000000);
@22 = CARTESIAN_POINT( , -3.657600, 5.080000, 0.000000);
@23 = CARTESIAN_POINT( , -3.505200, -4.463450, 0.354408);
@24 = CARTESIAN_POINT( , -3.505200, -4.286250, 0.000000);
@25 = CARTESIAN_POINT( , -3.505200, -3.208040, -2.676430);
@26 = CARTESIAN_POINT( , -3.505200, -3.208040, 3.385240);
@27 = CARTESIAN_POINT( , -3.505200, -3.030840, -3.030840);
@28 = CARTESIAN_POINT( , -3.505200, -3.030840, 3.030840);
@29 = CARTESIAN_POINT( , -3.505200, -0.177204, -3.931840);
@30 = CARTESIAN_POINT( , -3.505200, -0.177204, 4.640660);
@31 = CARTESIAN_POINT( , -3.505200, 0.000000, -4.286250);
@32 = CARTESIAN_POINT( , -3.505200, 0.000000, 0.000000);
@33 = CARTESIAN_POINT( , -3.505200, 0.000000, 4.286250);
@34 = CARTESIAN_POINT( , -3.505200, 2.853630, -2.676430);
@35 = CARTESIAN_POINT( , -3.505200, 2.853630, 3.385240);
@36 = CARTESIAN_POINT( , -3.505200, 3.030840, -3.030840);
@37 = CARTESIAN_POINT( , -3.505200, 3.030840, 3.030840);
@38 = CARTESIAN_POINT( , -3.505200, 3.149600, 0.000000);
@39 = CARTESIAN_POINT( , -3.505200, 4.109050, 0.354408);
@40 = CARTESIAN_POINT( , -3.505200, 4.286250, 0.000000);
@41 = CARTESIAN_POINT( , -3.505200, 4.927600, 0.000000);
@42 = CARTESIAN_POINT( , -3.477260, 0.000000, 0.000000);
@43 = CARTESIAN_POINT( , -3.477260, 1.921510, 0.000000);
@44 = CARTESIAN_POINT( , -3.477260, 2.226310, 0.000000);
@45 = CARTESIAN_POINT( , -3.200400, 0.000000, 0.000000);
@46 = CARTESIAN_POINT( , -3.200400, 2.844800, 0.000000);
@47 = CARTESIAN_POINT( , -3.200400, 3.149600, 0.000000);
@48 = CARTESIAN_POINT( , -3.172460, 0.000000, 0.000000);
@49 = CARTESIAN_POINT( , -3.172460, 0.956310, 0.000000);
@50 = CARTESIAN_POINT( , -3.172460, 1.921510, 0.000000);
@51 = CARTESIAN_POINT( , -2.546350, 0.000000, 0.000000);
@52 = CARTESIAN_POINT( , -2.546350, 2.120900, 0.000000);
@53 = CARTESIAN_POINT( , -2.546350, 2.844800, 0.000000);
@54 = CARTESIAN_POINT( , -2.241550, 0.000000, 0.000000);
@55 = CARTESIAN_POINT( , -2.241550, 1.816100, 0.000000);
@56 = CARTESIAN_POINT( , -2.241550, 2.120900, 0.000000);
@57 = CARTESIAN_POINT( , -1.911350, 0.000000, 0.000000);
@58 = CARTESIAN_POINT( , -1.911350, 1.816100, 0.000000);
@59 = CARTESIAN_POINT( , -1.911350, 1.900300, 0.000000);
@60 = CARTESIAN_POINT( , -1.862740, 0.000000, 0.000000);
@61 = CARTESIAN_POINT( , -1.862740, 1.984500, 0.000000);
@62 = CARTESIAN_POINT( , -1.049370, 0.000000, 0.000000);
@63 = CARTESIAN_POINT( , -1.049370, 1.984500, 0.000000);
@64 = CARTESIAN_POINT( , -1.000760, 0.000000, 0.000000);
@65 = CARTESIAN_POINT( , -1.000760, 1.739900, 0.000000);
@66 = CARTESIAN_POINT( , -1.000760, 1.900300, 0.000000);
@67 = CARTESIAN_POINT( , -0.848360, 0.000000, 0.000000);
@68 = CARTESIAN_POINT( , -0.848360, 1.587500, 0.000000);
@69 = CARTESIAN_POINT( , -0.848360, 1.739900, 0.000000);
@70 = CARTESIAN_POINT( , 0.000000, -4.286250, 0.000000);
@71 = CARTESIAN_POINT( , 0.000000, -3.030840, -3.030840);
@72 = CARTESIAN_POINT( , 0.000000, -3.030840, 3.030840);
@73 = CARTESIAN_POINT( , 0.000000, 0.000000, -4.286250);
@74 = CARTESIAN_POINT( , 0.000000, 0.000000, 0.000000);
@75 = CARTESIAN_POINT( , 0.000000, 0.000000, 4.286250);
@76 = CARTESIAN_POINT( , 0.000000, 0.956310, 0.000000);
@77 = CARTESIAN_POINT( , 0.000000, 1.587500, 0.000000);
@78 = CARTESIAN_POINT( , 0.000000, 3.030840, -3.030840);
@79 = CARTESIAN_POINT( , 0.000000, 3.030840, 3.030840);
@80 = CARTESIAN_POINT( , 0.000000, 4.286250, 0.000000);
!* Done Points *!

@81 = DIRECTION( , -1.000000, 0.000000, 0.000000);
@82 = DIRECTION( , 0.000000, 0.000000, -1.000000);
@83 = DIRECTION( , 0.000000, 0.000000, 1.000000);
@84 = DIRECTION( , 1.000000, 0.000000, 0.000000);
!* Done UnitVectors *!

@85 = CIRCLE( , 0.396245, AXIS2_PLACEMENT( , #36, #84, 
       DIRECTION( , 0.000000, -0.447223, 0.894422)));
@86 = CIRCLE( , 0.396245, AXIS2_PLACEMENT( , #15, #81, 
       DIRECTION( , 0.000000, -0.447223, 0.894422)));
@87 = CIRCLE( , 0.396242, AXIS2_PLACEMENT( , #9, #84, 
       DIRECTION( , 0.000000, -0.447211, 0.894428)));
@88 = CIRCLE( , 0.396240, AXIS2_PLACEMENT( , #5, #84, 
       DIRECTION( , 0.000000, -0.447204, 0.894432)));
@89 = CIRCLE( , 0.396238, AXIS2_PLACEMENT( , #2, #84, 
       DIRECTION( , 0.000000, -0.447205, 0.894431)));
@90 = CIRCLE( , 0.396231, AXIS2_PLACEMENT( , #6, #84, 
       DIRECTION( , 0.000000, -0.447214, 0.894427)));
@91 = CIRCLE( , 0.396242, AXIS2_PLACEMENT( , #11, #84, 
       DIRECTION( , 0.000000, -0.447212, 0.894428)));
@92 = CIRCLE( , 0.396236, AXIS2_PLACEMENT( , #16, #84, 
       DIRECTION( , 0.000000, -0.447233, 0.894417)));
@93 = CIRCLE( , 0.396239, AXIS2_PLACEMENT( , #18, #84, 
       DIRECTION( , 0.000000, -0.447206, 0.894431)));
@94 = CIRCLE( , 2.226310, AXIS2_PLACEMENT( , #10, #84, 
       DIRECTION( , 0.000000, 1.000000, 0.000000)));
@95 = CIRCLE( , 5.080000, AXIS2_PLACEMENT( , #10, #81, 
       DIRECTION( , 0.000000, 1.000000, 0.000000)));
@96 = CIRCLE( , 0.396240, AXIS2_PLACEMENT( , #27, #84, 
       DIRECTION( , 0.000000, -0.447204, 0.894432)));
@97 = CIRCLE( , 0.396231, AXIS2_PLACEMENT( , #28, #84, 
       DIRECTION( , 0.000000, -0.447214, 0.894427)));
@98 = CIRCLE( , 0.396236, AXIS2_PLACEMENT( , #37, #84, 
       DIRECTION( , 0.000000, -0.447233, 0.894417)));
@99 = CIRCLE( , 2.226310, AXIS2_PLACEMENT( , #42, #84, 
       DIRECTION( , 0.000000, 1.000000, 0.000000)));
@100 = CIRCLE( , 0.304800, AXIS2_PLACEMENT( , #43, #82, 
       DIRECTION( , 0.000000, 1.000000, 0.000000)));
@101 = CIRCLE( , 1.921510, AXIS2_PLACEMENT( , #48, #84, 
       DIRECTION( , 0.000000, 1.000000, 0.000000)));
@102 = CIRCLE( , 0.956310, AXIS2_PLACEMENT( , #48, #84, 
       DIRECTION( , 0.000000, 1.000000, 0.000000)));
@103 = CIRCLE( , 0.956310, AXIS2_PLACEMENT( , #74, #84, 
       DIRECTION( , 0.000000, 1.000000, 0.000000)));
@104 = CIRCLE( , 1.587500, AXIS2_PLACEMENT( , #74, #84, 
       DIRECTION( , 0.000000, 1.000000, 0.000000)));
@105 = CIRCLE( , 1.587500, AXIS2_PLACEMENT( , #67, #84, 
       DIRECTION( , 0.000000, 1.000000, 0.000000)));
@106 = CIRCLE( , 0.152400, AXIS2_PLACEMENT( , #69, #82, 
       DIRECTION( , 0.000000, -1.000000, 0.000000)));
@107 = CIRCLE( , 1.739900, AXIS2_PLACEMENT( , #64, #84, 
       DIRECTION( , 0.000000, 1.000000, 0.000000)));
@108 = CIRCLE( , 1.900300, AXIS2_PLACEMENT( , #64, #84, 
       DIRECTION( , 0.000000, 1.000000, 0.000000)));
@109 = CIRCLE( , 1.984500, AXIS2_PLACEMENT( , #62, #84, 
       DIRECTION( , 0.000000, 1.000000, 0.000000)));
@110 = CIRCLE( , 1.984500, AXIS2_PLACEMENT( , #60, #84, 
       DIRECTION( , 0.000000, 1.000000, 0.000000)));
@111 = CIRCLE( , 1.900300, AXIS2_PLACEMENT( , #57, #84, 
       DIRECTION( , 0.000000, 1.000000, 0.000000)));
@112 = CIRCLE( , 1.816100, AXIS2_PLACEMENT( , #57, #84, 
       DIRECTION( , 0.000000, 1.000000, 0.000000)));
@113 = CIRCLE( , 1.816100, AXIS2_PLACEMENT( , #54, #84, 
       DIRECTION( , 0.000000, 1.000000, 0.000000)));
@114 = CIRCLE( , 0.304800, AXIS2_PLACEMENT( , #56, #82, 
       DIRECTION( , 0.000000, -1.000000, 0.000000)));
@115 = CIRCLE( , 2.120900, AXIS2_PLACEMENT( , #51, #84, 
       DIRECTION( , 0.000000, 1.000000, 0.000000)));
@116 = CIRCLE( , 2.844800, AXIS2_PLACEMENT( , #51, #84, 
       DIRECTION( , 0.000000, 1.000000, 0.000000)));
@117 = CIRCLE( , 2.844800, AXIS2_PLACEMENT( , #45, #84, 
       DIRECTION( , 0.000000, 1.000000, 0.000000)));
@118 = CIRCLE( , 0.304800, AXIS2_PLACEMENT( , #47, #82, 
       DIRECTION( , 0.000000, -1.000000, 0.000000)));
@119 = CIRCLE( , 3.149600, AXIS2_PLACEMENT( , #32, #84, 
       DIRECTION( , 0.000000, 1.000000, 0.000000)));
@120 = CIRCLE( , 4.927600, AXIS2_PLACEMENT( , #32, #84, 
       DIRECTION( , 0.000000, 1.000000, 0.000000)));
@121 = CIRCLE( , 0.396239, AXIS2_PLACEMENT( , #40, #81, 
       DIRECTION( , 0.000000, -0.447206, 0.894431)));
@122 = CIRCLE( , 0.396242, AXIS2_PLACEMENT( , #33, #81, 
       DIRECTION( , 0.000000, -0.447212, 0.894428)));
@123 = CIRCLE( , 0.396238, AXIS2_PLACEMENT( , #24, #81, 
       DIRECTION( , 0.000000, -0.447205, 0.894431)));
@124 = CIRCLE( , 0.396242, AXIS2_PLACEMENT( , #31, #81, 
       DIRECTION( , 0.000000, -0.447211, 0.894428)));
@125 = CIRCLE( , 0.152400, AXIS2_PLACEMENT( , #21, #83, 
       DIRECTION( , 1.000000, 0.000000, 0.000000)));
@126 = CIRCLE( , 5.080000, AXIS2_PLACEMENT( , #20, #84, 
       DIRECTION( , 0.000000, 1.000000, 0.000000)));
!* Done Curves *!

@127 = CYLINDRICAL_SURFACE( ,  0.396240, AXIS2_PLACEMENT( , #78, #81, ));
@128 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 4.124960, 0.000000, 0.000000), #84, ));
@129 = CYLINDRICAL_SURFACE( ,  0.396240, AXIS2_PLACEMENT( , #71, #81, ));
@130 = CYLINDRICAL_SURFACE( ,  0.396240, AXIS2_PLACEMENT( , #72, #81, ));
@131 = CYLINDRICAL_SURFACE( ,  0.396240, AXIS2_PLACEMENT( , #79, #81, ));
@132 = CYLINDRICAL_SURFACE( ,  2.226310, AXIS2_PLACEMENT( , #74, #84, ));
@133 = TOROIDAL_SURFACE( ,  1.921510, 0.304800, AXIS2_PLACEMENT( , #42, #84, ));
@134 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 3.172460, 0.000000, 0.000000), #84, ));
@135 = CYLINDRICAL_SURFACE( ,  0.956310, AXIS2_PLACEMENT( , #74, #84, ));
@136 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 0.000000, 0.000000, 0.000000), #84, ));
@137 = CYLINDRICAL_SURFACE( ,  1.587500, AXIS2_PLACEMENT( , #74, #84, ));
@138 = TOROIDAL_SURFACE( ,  1.739900, 0.152400, AXIS2_PLACEMENT( , #67, #84, ));
@139 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 1.000760, 0.000000, 0.000000), #84, ));
@140 = CONICAL_SURFACE( ,   60.000317,  0.0, AXIS2_PLACEMENT( , #64, #84, ));
@141 = CYLINDRICAL_SURFACE( ,  1.984500, AXIS2_PLACEMENT( , #74, #84, ));
@142 = CONICAL_SURFACE( ,   60.000248,  0.0, AXIS2_PLACEMENT( , #60, #84, ));
@143 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 1.911350, 0.000000, 0.000000), #84, ));
@144 = CYLINDRICAL_SURFACE( ,  1.816100, AXIS2_PLACEMENT( , #74, #84, ));
@145 = TOROIDAL_SURFACE( ,  2.120900, 0.304800, AXIS2_PLACEMENT( , #54, #84, ));
@146 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 2.546350, 0.000000, 0.000000), #84, ));
@147 = CYLINDRICAL_SURFACE( ,  2.844800, AXIS2_PLACEMENT( , #74, #84, ));
@148 = TOROIDAL_SURFACE( ,  3.149600, 0.304800, AXIS2_PLACEMENT( , #45, #84, ));
@149 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 3.505200, 0.000000, 0.000000), #84, ));
@150 = TOROIDAL_SURFACE( ,  4.927600, 0.152400, AXIS2_PLACEMENT( , #20, #84, ));
@151 = CYLINDRICAL_SURFACE( ,  5.080000, AXIS2_PLACEMENT( , #74, #84, ));
@152 = CYLINDRICAL_SURFACE( ,  0.396240, AXIS2_PLACEMENT( , #80, #81, ));
@153 = CYLINDRICAL_SURFACE( ,  0.396240, AXIS2_PLACEMENT( , #75, #81, ));
@154 = CYLINDRICAL_SURFACE( ,  0.396240, AXIS2_PLACEMENT( , #70, #81, ));
@155 = CYLINDRICAL_SURFACE( ,  0.396240, AXIS2_PLACEMENT( , #73, #81, ));
!* Done Surfaces *!

@156 = VERTEX(  #44);
@157 = VERTEX(  #50);
@158 = VERTEX(  #68);
@159 = VERTEX(  #65);
@160 = VERTEX(  #55);
@161 = VERTEX(  #52);
@162 = VERTEX(  #46);
@163 = VERTEX(  #38);
@164 = VERTEX(  #41);
@165 = VERTEX(  #22);
!* Done Vertices *!

@166 = VERTEX (  #34);      !* This vertex is created by program *!
@167 = EDGE( #166, #166, CURVE_LOGICAL_STRUCTURE(#85, .T.));
@168 = VERTEX (  #13);      !* This vertex is created by program *!
@169 = EDGE( #168, #168, CURVE_LOGICAL_STRUCTURE(#86, .T.));
@170 = VERTEX (  #7);      !* This vertex is created by program *!
@171 = EDGE( #170, #170, CURVE_LOGICAL_STRUCTURE(#87, .T.));
@172 = VERTEX (  #3);      !* This vertex is created by program *!
@173 = EDGE( #172, #172, CURVE_LOGICAL_STRUCTURE(#88, .T.));
@174 = VERTEX (  #1);      !* This vertex is created by program *!
@175 = EDGE( #174, #174, CURVE_LOGICAL_STRUCTURE(#89, .T.));
@176 = VERTEX (  #4);      !* This vertex is created by program *!
@177 = EDGE( #176, #176, CURVE_LOGICAL_STRUCTURE(#90, .T.));
@178 = VERTEX (  #8);      !* This vertex is created by program *!
@179 = EDGE( #178, #178, CURVE_LOGICAL_STRUCTURE(#91, .T.));
@180 = VERTEX (  #14);      !* This vertex is created by program *!
@181 = EDGE( #180, #180, CURVE_LOGICAL_STRUCTURE(#92, .T.));
@182 = VERTEX (  #17);      !* This vertex is created by program *!
@183 = EDGE( #182, #182, CURVE_LOGICAL_STRUCTURE(#93, .T.));
@184 = VERTEX (  #12);      !* This vertex is created by program *!
@185 = EDGE( #184, #184, CURVE_LOGICAL_STRUCTURE(#94, .T.));
@186 = VERTEX (  #19);      !* This vertex is created by program *!
@187 = EDGE( #186, #186, CURVE_LOGICAL_STRUCTURE(#95, .T.));
@188 = VERTEX (  #25);      !* This vertex is created by program *!
@189 = EDGE( #188, #188, CURVE_LOGICAL_STRUCTURE(#96, .T.));
@190 = VERTEX (  #26);      !* This vertex is created by program *!
@191 = EDGE( #190, #190, CURVE_LOGICAL_STRUCTURE(#97, .T.));
@192 = VERTEX (  #35);      !* This vertex is created by program *!
@193 = EDGE( #192, #192, CURVE_LOGICAL_STRUCTURE(#98, .T.));
@194 = EDGE( #156, #156, CURVE_LOGICAL_STRUCTURE(#99, .T.));
@195 = EDGE( #156, #157, CURVE_LOGICAL_STRUCTURE(#100, .T.));
@196 = EDGE( #157, #157, CURVE_LOGICAL_STRUCTURE(#101, .T.));
@197 = VERTEX (  #49);      !* This vertex is created by program *!
@198 = EDGE( #197, #197, CURVE_LOGICAL_STRUCTURE(#102, .T.));
@199 = VERTEX (  #76);      !* This vertex is created by program *!
@200 = EDGE( #199, #199, CURVE_LOGICAL_STRUCTURE(#103, .T.));
@201 = VERTEX (  #77);      !* This vertex is created by program *!
@202 = EDGE( #201, #201, CURVE_LOGICAL_STRUCTURE(#104, .T.));
@203 = EDGE( #158, #158, CURVE_LOGICAL_STRUCTURE(#105, .T.));
@204 = EDGE( #158, #159, CURVE_LOGICAL_STRUCTURE(#106, .T.));
@205 = EDGE( #159, #159, CURVE_LOGICAL_STRUCTURE(#107, .T.));
@206 = VERTEX (  #66);      !* This vertex is created by program *!
@207 = EDGE( #206, #206, CURVE_LOGICAL_STRUCTURE(#108, .T.));
@208 = VERTEX (  #63);      !* This vertex is created by program *!
@209 = EDGE( #208, #208, CURVE_LOGICAL_STRUCTURE(#109, .T.));
@210 = VERTEX (  #61);      !* This vertex is created by program *!
@211 = EDGE( #210, #210, CURVE_LOGICAL_STRUCTURE(#110, .T.));
@212 = VERTEX (  #59);      !* This vertex is created by program *!
@213 = EDGE( #212, #212, CURVE_LOGICAL_STRUCTURE(#111, .T.));
@214 = VERTEX (  #58);      !* This vertex is created by program *!
@215 = EDGE( #214, #214, CURVE_LOGICAL_STRUCTURE(#112, .T.));
@216 = EDGE( #160, #160, CURVE_LOGICAL_STRUCTURE(#113, .T.));
@217 = EDGE( #160, #161, CURVE_LOGICAL_STRUCTURE(#114, .T.));
@218 = EDGE( #161, #161, CURVE_LOGICAL_STRUCTURE(#115, .T.));
@219 = VERTEX (  #53);      !* This vertex is created by program *!
@220 = EDGE( #219, #219, CURVE_LOGICAL_STRUCTURE(#116, .T.));
@221 = EDGE( #162, #162, CURVE_LOGICAL_STRUCTURE(#117, .T.));
@222 = EDGE( #162, #163, CURVE_LOGICAL_STRUCTURE(#118, .T.));
@223 = EDGE( #163, #163, CURVE_LOGICAL_STRUCTURE(#119, .T.));
@224 = EDGE( #164, #164, CURVE_LOGICAL_STRUCTURE(#120, .T.));
@225 = VERTEX (  #39);      !* This vertex is created by program *!
@226 = EDGE( #225, #225, CURVE_LOGICAL_STRUCTURE(#121, .T.));
@227 = VERTEX (  #30);      !* This vertex is created by program *!
@228 = EDGE( #227, #227, CURVE_LOGICAL_STRUCTURE(#122, .T.));
@229 = VERTEX (  #23);      !* This vertex is created by program *!
@230 = EDGE( #229, #229, CURVE_LOGICAL_STRUCTURE(#123, .T.));
@231 = VERTEX (  #29);      !* This vertex is created by program *!
@232 = EDGE( #231, #231, CURVE_LOGICAL_STRUCTURE(#124, .T.));
@233 = EDGE( #164, #165, CURVE_LOGICAL_STRUCTURE(#125, .T.));
@234 = EDGE( #165, #165, CURVE_LOGICAL_STRUCTURE(#126, .T.));
!* Done Edges *!

@235 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#167, .T.) ));
@236 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#169, .T.) ));
@237 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#169, .F.) ));
@238 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#171, .T.) ));
@239 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#173, .T.) ));
@240 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#175, .T.) ));
@241 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#177, .T.) ));
@242 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#179, .T.) ));
@243 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#181, .T.) ));
@244 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#183, .T.) ));
@245 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#185, .T.) ));
@246 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#187, .T.) ));
@247 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#189, .T.) ));
@248 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#173, .F.) ));
@249 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#191, .T.) ));
@250 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#177, .F.) ));
@251 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#193, .T.) ));
@252 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#181, .F.) ));
@253 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#185, .F.) ));
@254 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#194, .T.) ));
@255 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#195, .T.), 
       EDGE_LOGICAL_STRUCTURE(#196, .T.), 
       EDGE_LOGICAL_STRUCTURE(#195, .F.), 
       EDGE_LOGICAL_STRUCTURE(#194, .F.) ));
@256 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#198, .T.) ));
@257 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#196, .F.) ));
@258 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#198, .F.) ));
@259 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#200, .T.) ));
@260 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#202, .T.) ));
@261 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#200, .F.) ));
@262 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#202, .F.) ));
@263 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#203, .T.) ));
@264 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#204, .T.), 
       EDGE_LOGICAL_STRUCTURE(#205, .T.), 
       EDGE_LOGICAL_STRUCTURE(#204, .F.), 
       EDGE_LOGICAL_STRUCTURE(#203, .F.) ));
@265 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#207, .T.) ));
@266 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#205, .F.) ));
@267 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#207, .F.) ));
@268 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#209, .T.) ));
@269 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#209, .F.) ));
@270 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#211, .T.) ));
@271 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#211, .F.) ));
@272 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#213, .T.) ));
@273 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#215, .T.) ));
@274 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#213, .F.) ));
@275 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#215, .F.) ));
@276 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#216, .T.) ));
@277 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#217, .T.), 
       EDGE_LOGICAL_STRUCTURE(#218, .T.), 
       EDGE_LOGICAL_STRUCTURE(#217, .F.), 
       EDGE_LOGICAL_STRUCTURE(#216, .F.) ));
@278 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#220, .T.) ));
@279 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#218, .F.) ));
@280 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#220, .F.) ));
@281 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#221, .T.) ));
@282 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#222, .T.), 
       EDGE_LOGICAL_STRUCTURE(#223, .T.), 
       EDGE_LOGICAL_STRUCTURE(#222, .F.), 
       EDGE_LOGICAL_STRUCTURE(#221, .F.) ));
@283 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#224, .T.) ));
@284 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#223, .F.) ));
@285 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#226, .T.) ));
@286 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#193, .F.) ));
@287 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#228, .T.) ));
@288 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#191, .F.) ));
@289 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#230, .T.) ));
@290 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#189, .F.) ));
@291 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#232, .T.) ));
@292 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#167, .F.) ));
@293 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#233, .T.), 
       EDGE_LOGICAL_STRUCTURE(#234, .T.), 
       EDGE_LOGICAL_STRUCTURE(#233, .F.), 
       EDGE_LOGICAL_STRUCTURE(#224, .F.) ));
@294 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#234, .F.) ));
@295 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#187, .F.) ));
@296 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#226, .F.) ));
@297 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#183, .F.) ));
@298 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#228, .F.) ));
@299 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#179, .F.) ));
@300 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#230, .F.) ));
@301 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#175, .F.) ));
@302 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#232, .F.) ));
@303 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#171, .F.) ));
!* Done Loops *!

@304 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#235, .T.),
       LOOP_LOGICAL_STRUCTURE(#236, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#127, .T.));
@305 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#237, .T.),
       LOOP_LOGICAL_STRUCTURE(#238, .T.),
       LOOP_LOGICAL_STRUCTURE(#239, .T.),
       LOOP_LOGICAL_STRUCTURE(#240, .T.),
       LOOP_LOGICAL_STRUCTURE(#241, .T.),
       LOOP_LOGICAL_STRUCTURE(#242, .T.),
       LOOP_LOGICAL_STRUCTURE(#243, .T.),
       LOOP_LOGICAL_STRUCTURE(#244, .T.),
       LOOP_LOGICAL_STRUCTURE(#245, .T.),
       LOOP_LOGICAL_STRUCTURE(#246, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#128, .T.));
@306 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#247, .T.),
       LOOP_LOGICAL_STRUCTURE(#248, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#129, .T.));
@307 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#249, .T.),
       LOOP_LOGICAL_STRUCTURE(#250, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#130, .T.));
@308 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#251, .T.),
       LOOP_LOGICAL_STRUCTURE(#252, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#131, .T.));
@309 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#253, .T.),
       LOOP_LOGICAL_STRUCTURE(#254, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#132, .T.));
@310 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#255, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#133, .T.));
@311 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#256, .T.),
       LOOP_LOGICAL_STRUCTURE(#257, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#134, .T.));
@312 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#258, .T.),
       LOOP_LOGICAL_STRUCTURE(#259, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#135, .T.));
@313 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#260, .T.),
       LOOP_LOGICAL_STRUCTURE(#261, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#136, .F.));
@314 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#262, .T.),
       LOOP_LOGICAL_STRUCTURE(#263, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#137, .F.));
@315 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#264, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#138, .T.));
@316 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#265, .T.),
       LOOP_LOGICAL_STRUCTURE(#266, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#139, .F.));
@317 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#267, .T.),
       LOOP_LOGICAL_STRUCTURE(#268, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#140, .F.));
@318 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#269, .T.),
       LOOP_LOGICAL_STRUCTURE(#270, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#141, .F.));
@319 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#271, .T.),
       LOOP_LOGICAL_STRUCTURE(#272, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#142, .F.));
@320 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#273, .T.),
       LOOP_LOGICAL_STRUCTURE(#274, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#143, .T.));
@321 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#275, .T.),
       LOOP_LOGICAL_STRUCTURE(#276, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#144, .F.));
@322 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#277, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#145, .T.));
@323 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#278, .T.),
       LOOP_LOGICAL_STRUCTURE(#279, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#146, .F.));
@324 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#280, .T.),
       LOOP_LOGICAL_STRUCTURE(#281, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#147, .F.));
@325 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#282, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#148, .T.));
@326 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#283, .T.),
       LOOP_LOGICAL_STRUCTURE(#284, .T.),
       LOOP_LOGICAL_STRUCTURE(#285, .T.),
       LOOP_LOGICAL_STRUCTURE(#286, .T.),
       LOOP_LOGICAL_STRUCTURE(#287, .T.),
       LOOP_LOGICAL_STRUCTURE(#288, .T.),
       LOOP_LOGICAL_STRUCTURE(#289, .T.),
       LOOP_LOGICAL_STRUCTURE(#290, .T.),
       LOOP_LOGICAL_STRUCTURE(#291, .T.),
       LOOP_LOGICAL_STRUCTURE(#292, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#149, .F.));
@327 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#293, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#150, .F.));
@328 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#294, .T.),
       LOOP_LOGICAL_STRUCTURE(#295, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#151, .F.));
@329 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#296, .T.),
       LOOP_LOGICAL_STRUCTURE(#297, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#152, .T.));
@330 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#298, .T.),
       LOOP_LOGICAL_STRUCTURE(#299, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#153, .T.));
@331 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#300, .T.),
       LOOP_LOGICAL_STRUCTURE(#301, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#154, .T.));
@332 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#302, .T.),
       LOOP_LOGICAL_STRUCTURE(#303, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#155, .T.));
!* Done Faces *!

@333 = CLOSED_SHELL( (
        FACE_LOGICAL_STRUCTURE(#304,.T.),
        FACE_LOGICAL_STRUCTURE(#305,.T.),
        FACE_LOGICAL_STRUCTURE(#306,.T.),
        FACE_LOGICAL_STRUCTURE(#307,.T.),
        FACE_LOGICAL_STRUCTURE(#308,.T.),
        FACE_LOGICAL_STRUCTURE(#309,.T.),
        FACE_LOGICAL_STRUCTURE(#310,.T.),
        FACE_LOGICAL_STRUCTURE(#311,.T.),
        FACE_LOGICAL_STRUCTURE(#312,.T.),
        FACE_LOGICAL_STRUCTURE(#313,.T.),
        FACE_LOGICAL_STRUCTURE(#314,.T.),
        FACE_LOGICAL_STRUCTURE(#315,.T.),
        FACE_LOGICAL_STRUCTURE(#316,.T.),
        FACE_LOGICAL_STRUCTURE(#317,.T.),
        FACE_LOGICAL_STRUCTURE(#318,.T.),
        FACE_LOGICAL_STRUCTURE(#319,.T.),
        FACE_LOGICAL_STRUCTURE(#320,.T.),
        FACE_LOGICAL_STRUCTURE(#321,.T.),
        FACE_LOGICAL_STRUCTURE(#322,.T.),
        FACE_LOGICAL_STRUCTURE(#323,.T.),
        FACE_LOGICAL_STRUCTURE(#324,.T.),
        FACE_LOGICAL_STRUCTURE(#325,.T.),
        FACE_LOGICAL_STRUCTURE(#326,.T.),
        FACE_LOGICAL_STRUCTURE(#327,.T.),
        FACE_LOGICAL_STRUCTURE(#328,.T.),
        FACE_LOGICAL_STRUCTURE(#329,.T.),
        FACE_LOGICAL_STRUCTURE(#330,.T.),
        FACE_LOGICAL_STRUCTURE(#331,.T.),
        FACE_LOGICAL_STRUCTURE(#332,.T.)   ));
!* Done Shells *!

ENDSEC;

ENDSTEP;
