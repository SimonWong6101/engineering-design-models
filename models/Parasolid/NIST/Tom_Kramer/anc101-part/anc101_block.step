STEP;

HEADER;
 FILE_IDENTIFICATION
   ('STEP_POLISH',
    'some date',
    ('Noman'),
    ('NIST'),
    '1.0',
    '1.0',
    'originating system');
 FILE_DESCRIPTION
   ('This file was produced by the NIST parasolid_to_step tool.');
 IMP_LEVEL
   ('1.0');
ENDSEC;

DATA;
@1 = CARTESIAN_POINT (, 0.0, 0.0, 0.0);
@2 = CARTESIAN_POINT (, 0.0, 0.0, 5.0);
@3 = CARTESIAN_POINT (, 0.0, 2.5, 0.0);
@4 = CARTESIAN_POINT (, 0.0, 2.5, 5.0);
@5 = CARTESIAN_POINT (, 0.0, 5.0, 0.0);
@6 = CARTESIAN_POINT (, 0.0, 5.0, 5.0);
@7 = CARTESIAN_POINT (, 5.375, 0.0, 0.0);
@8 = CARTESIAN_POINT (, 5.375, 0.0, 5.0);
@9 = CARTESIAN_POINT (, 5.375, 2.5, 0.0);
@10 = CARTESIAN_POINT (, 5.375, 2.5, 5.0);
@11 = CARTESIAN_POINT (, 5.375, 5.0, 0.0);
@12 = CARTESIAN_POINT (, 5.375, 5.0, 5.0);
@13 = CARTESIAN_POINT (, 10.75, 0.0, 0.0);
@14 = CARTESIAN_POINT (, 10.75, 0.0, 5.0);
@15 = CARTESIAN_POINT (, 10.75, 2.5, 0.0);
@16 = CARTESIAN_POINT (, 10.75, 2.5, 5.0);
@17 = CARTESIAN_POINT (, 10.75, 5.0, 0.0);
@18 = CARTESIAN_POINT (, 10.75, 5.0, 5.0);
@19 = DIRECTION (, -1.0, 0.0, 0.0);
@20 = DIRECTION (, 0.0, -1.0, 0.0);
@21 = DIRECTION (, 0.0, 0.0, -1.0);
@22 = DIRECTION (, 0.0, 0.0, 1.0);
@23 = DIRECTION (, 0.0, 1.0, 0.0);
@24 = DIRECTION (, 1.0, 0.0, 0.0);
@25 = AXIS2_PLACEMENT (, #3, #19, );
@26 = AXIS2_PLACEMENT (, #7, #20, );
@27 = AXIS2_PLACEMENT (, #9, #21, );
@28 = AXIS2_PLACEMENT (, #10, #22, );
@29 = AXIS2_PLACEMENT (, #11, #23, );
@30 = AXIS2_PLACEMENT (, #15, #24, );
@31 = LINE (, #1, #22);
@32 = LINE (, #3, #20);
@33 = LINE (, #4, #23);
@34 = LINE (, #5, #22);
@35 = LINE (, #7, #24);
@36 = LINE (, #8, #19);
@37 = LINE (, #11, #19);
@38 = LINE (, #12, #24);
@39 = LINE (, #13, #22);
@40 = LINE (, #15, #23);
@41 = LINE (, #16, #20);
@42 = LINE (, #17, #22);
@43 = PLANE (, #25);
@44 = PLANE (, #26);
@45 = PLANE (, #27);
@46 = PLANE (, #28);
@47 = PLANE (, #29);
@48 = PLANE (, #30);
@49 = VERTEX (#1);
@50 = VERTEX (#2);
@51 = VERTEX (#5);
@52 = VERTEX (#6);
@53 = VERTEX (#13);
@54 = VERTEX (#14);
@55 = VERTEX (#17);
@56 = VERTEX (#18);
@57 = CURVE_LOGICAL_STRUCTURE (#31, .T.);
@58 = CURVE_LOGICAL_STRUCTURE (#32, .T.);
@59 = CURVE_LOGICAL_STRUCTURE (#33, .T.);
@60 = CURVE_LOGICAL_STRUCTURE (#34, .T.);
@61 = CURVE_LOGICAL_STRUCTURE (#35, .T.);
@62 = CURVE_LOGICAL_STRUCTURE (#36, .T.);
@63 = CURVE_LOGICAL_STRUCTURE (#37, .T.);
@64 = CURVE_LOGICAL_STRUCTURE (#38, .T.);
@65 = CURVE_LOGICAL_STRUCTURE (#39, .T.);
@66 = CURVE_LOGICAL_STRUCTURE (#40, .T.);
@67 = CURVE_LOGICAL_STRUCTURE (#41, .T.);
@68 = CURVE_LOGICAL_STRUCTURE (#42, .T.);
@69 = EDGE (#49, #50, #57);
@70 = EDGE (#49, #53, #61);
@71 = EDGE (#50, #52, #59);
@72 = EDGE (#51, #49, #58);
@73 = EDGE (#51, #52, #60);
@74 = EDGE (#52, #56, #64);
@75 = EDGE (#53, #54, #65);
@76 = EDGE (#53, #55, #66);
@77 = EDGE (#54, #50, #62);
@78 = EDGE (#55, #51, #63);
@79 = EDGE (#55, #56, #68);
@80 = EDGE (#56, #54, #67);
@81 = EDGE_LOGICAL_STRUCTURE (#69, .T.);
@82 = EDGE_LOGICAL_STRUCTURE (#69, .F.);
@83 = EDGE_LOGICAL_STRUCTURE (#70, .T.);
@84 = EDGE_LOGICAL_STRUCTURE (#70, .F.);
@85 = EDGE_LOGICAL_STRUCTURE (#71, .T.);
@86 = EDGE_LOGICAL_STRUCTURE (#71, .F.);
@87 = EDGE_LOGICAL_STRUCTURE (#72, .T.);
@88 = EDGE_LOGICAL_STRUCTURE (#72, .F.);
@89 = EDGE_LOGICAL_STRUCTURE (#73, .T.);
@90 = EDGE_LOGICAL_STRUCTURE (#73, .F.);
@91 = EDGE_LOGICAL_STRUCTURE (#74, .T.);
@92 = EDGE_LOGICAL_STRUCTURE (#74, .F.);
@93 = EDGE_LOGICAL_STRUCTURE (#75, .T.);
@94 = EDGE_LOGICAL_STRUCTURE (#75, .F.);
@95 = EDGE_LOGICAL_STRUCTURE (#76, .T.);
@96 = EDGE_LOGICAL_STRUCTURE (#76, .F.);
@97 = EDGE_LOGICAL_STRUCTURE (#77, .T.);
@98 = EDGE_LOGICAL_STRUCTURE (#77, .F.);
@99 = EDGE_LOGICAL_STRUCTURE (#78, .T.);
@100 = EDGE_LOGICAL_STRUCTURE (#78, .F.);
@101 = EDGE_LOGICAL_STRUCTURE (#79, .T.);
@102 = EDGE_LOGICAL_STRUCTURE (#79, .F.);
@103 = EDGE_LOGICAL_STRUCTURE (#80, .T.);
@104 = EDGE_LOGICAL_STRUCTURE (#80, .F.);
@105 = EDGE_LOOP ((#81, #85, #90, #87));
@106 = EDGE_LOOP ((#89, #91, #102, #99));
@107 = EDGE_LOOP ((#93, #97, #82, #83));
@108 = EDGE_LOOP ((#95, #101, #103, #94));
@109 = EDGE_LOOP ((#96, #84, #88, #100));
@110 = EDGE_LOOP ((#98, #104, #92, #86));
@111 = LOOP_LOGICAL_STRUCTURE (#105, .T.);
@112 = LOOP_LOGICAL_STRUCTURE (#106, .T.);
@113 = LOOP_LOGICAL_STRUCTURE (#107, .T.);
@114 = LOOP_LOGICAL_STRUCTURE (#108, .T.);
@115 = LOOP_LOGICAL_STRUCTURE (#109, .T.);
@116 = LOOP_LOGICAL_STRUCTURE (#110, .T.);
@117 = SURFACE_LOGICAL_STRUCTURE (#43, .T.);
@118 = SURFACE_LOGICAL_STRUCTURE (#44, .T.);
@119 = SURFACE_LOGICAL_STRUCTURE (#45, .T.);
@120 = SURFACE_LOGICAL_STRUCTURE (#46, .T.);
@121 = SURFACE_LOGICAL_STRUCTURE (#47, .T.);
@122 = SURFACE_LOGICAL_STRUCTURE (#48, .T.);
@123 = FACE (#111, (#111), #117);
@124 = FACE (#112, (#112), #121);
@125 = FACE (#113, (#113), #118);
@126 = FACE (#114, (#114), #122);
@127 = FACE (#115, (#115), #119);
@128 = FACE (#116, (#116), #120);
@129 = FACE_LOGICAL_STRUCTURE (#123, .T.);
@130 = FACE_LOGICAL_STRUCTURE (#124, .T.);
@131 = FACE_LOGICAL_STRUCTURE (#125, .T.);
@132 = FACE_LOGICAL_STRUCTURE (#126, .T.);
@133 = FACE_LOGICAL_STRUCTURE (#127, .T.);
@134 = FACE_LOGICAL_STRUCTURE (#128, .T.);
@135 = CLOSED_SHELL ((#134, #131, #129, #130, #133, #132));
ENDSEC;

ENDSTEP;
