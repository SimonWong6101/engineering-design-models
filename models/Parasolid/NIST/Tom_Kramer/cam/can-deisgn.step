!* The file structure of this STEP file is based on the
   Document 284 of ISO TC184/SC4/WG1 -Oct. 27, 1988.  and
   Document Title: ISO STEP Baseline Requirements Document (IPIM).
   This STEP file has been presented in a line-oriented or 
   record-oriented manner in order to aid readability.
   Unnecessary spaces have also been added to aid readability. 
   Note that an ordinary STEP file is not aligned in this
   manner, but is instead a continuous stream of characters.
*!

STEP;

HEADER;
 FILE_IDENTIFICATION(
 'CAMCLEVIS_FV',
 '19890117.085437',
 'Tina Lee & Sandy Ressler, (301)-975-3550 or 3549',
 'National Bureau of Standards, Factory Automation Systems Division',
 'STEP VERSION 1.0',
 'AMRF Part Model to Step File Translator, Version 1.0',
 'AMRF PART MODEL');
 FILE_DESCRIPTION('THIS FILE IS TRANSLATED FROM AN AMRF PART MODEL FILE');
 IMP_LEVEL('1.0');
ENDSEC;

DATA;
@1 = CARTESIAN_POINT( , 0.250000, 0.250000, 0.000000);
@2 = CARTESIAN_POINT( , 0.250000, 1.125000, 0.000000);
@3 = CARTESIAN_POINT( , 1.125000, 0.250000, 0.000000);
@4 = CARTESIAN_POINT( , 1.125000, 1.125000, 0.000000);
@5 = CARTESIAN_POINT( , 0.250000, 0.250000, 0.323750);
@6 = CARTESIAN_POINT( , 1.125000, 1.125000, 0.323750);
@7 = CARTESIAN_POINT( , 0.250000, 0.250000, 0.110500);
@8 = CARTESIAN_POINT( , 0.250000, 0.250000, 0.110500);
@9 = CARTESIAN_POINT( , 0.187500, 0.375000, 0.859000);
@10 = CARTESIAN_POINT( , 0.250000, 0.000000, 0.000000);
@11 = CARTESIAN_POINT( , 1.125000, 0.000000, 0.000000);
@12 = CARTESIAN_POINT( , 1.375000, 0.250000, 0.000000);
@13 = CARTESIAN_POINT( , 1.375000, 1.125000, 0.000000);
@14 = CARTESIAN_POINT( , 1.125000, 1.375000, 0.000000);
@15 = CARTESIAN_POINT( , 0.250000, 1.375000, 0.000000);
@16 = CARTESIAN_POINT( , 0.000000, 1.125000, 0.000000);
@17 = CARTESIAN_POINT( , 0.000000, 0.250000, 0.000000);
@18 = CARTESIAN_POINT( , 0.250000, 0.139500, 0.000000);
@19 = CARTESIAN_POINT( , 0.250000, 1.046880, 0.000000);
@20 = CARTESIAN_POINT( , 1.125000, 0.171880, 0.000000);
@21 = CARTESIAN_POINT( , 1.125000, 1.014500, 0.000000);
@22 = CARTESIAN_POINT( , 0.250000, 0.250000, 0.032370);
@23 = CARTESIAN_POINT( , 0.250000, 0.171880, 0.032370);
@24 = CARTESIAN_POINT( , 1.125000, 1.125000, 0.032370);
@25 = CARTESIAN_POINT( , 1.125000, 1.046880, 0.032370);
@26 = CARTESIAN_POINT( , 0.250000, 0.250000, 0.375000);
@27 = CARTESIAN_POINT( , 0.250000, 1.125000, 0.375000);
@28 = CARTESIAN_POINT( , 1.125000, 0.250000, 0.375000);
@29 = CARTESIAN_POINT( , 1.125000, 1.125000, 0.375000);
@30 = CARTESIAN_POINT( , 0.250000, 0.171880, 0.375000);
@31 = CARTESIAN_POINT( , 0.250000, 1.046880, 0.375000);
@32 = CARTESIAN_POINT( , 1.125000, 0.171880, 0.375000);
@33 = CARTESIAN_POINT( , 1.125000, 1.046880, 0.375000);
@34 = CARTESIAN_POINT( , 0.250000, 0.000000, 0.859000);
@35 = CARTESIAN_POINT( , 0.187500, 0.007940, 0.935750);
@36 = CARTESIAN_POINT( , 0.187500, 0.007940, 0.500000);
@37 = CARTESIAN_POINT( , 0.000000, 0.250000, 0.500000);
@38 = CARTESIAN_POINT( , 1.375000, 0.250000, 0.500000);
@39 = CARTESIAN_POINT( , 1.187500, 0.007940, 0.500000);
@40 = CARTESIAN_POINT( , 1.187500, 0.007940, 0.935750);
@41 = CARTESIAN_POINT( , 1.125000, 0.000000, 0.859000);
@42 = CARTESIAN_POINT( , 0.250000, 1.375000, 0.375000);
@43 = CARTESIAN_POINT( , 0.000000, 1.125000, 0.375000);
@44 = CARTESIAN_POINT( , 1.375000, 1.125000, 0.375000);
@45 = CARTESIAN_POINT( , 1.125000, 1.375000, 0.375000);
@46 = CARTESIAN_POINT( , 0.437500, 1.375000, 0.375000);
@47 = CARTESIAN_POINT( , 0.437500, 1.375000, 0.250000);
@48 = CARTESIAN_POINT( , 0.937500, 1.375000, 0.250000);
@49 = CARTESIAN_POINT( , 0.937500, 1.375000, 0.375000);
@50 = CARTESIAN_POINT( , 1.375000, 0.750000, 0.375000);
@51 = CARTESIAN_POINT( , 1.375000, 0.750000, 0.500000);
@52 = CARTESIAN_POINT( , 0.437500, 0.000000, 0.859000);
@53 = CARTESIAN_POINT( , 0.437500, 0.000000, 0.250000);
@54 = CARTESIAN_POINT( , 0.937500, 0.000000, 0.250000);
@55 = CARTESIAN_POINT( , 0.937500, 0.000000, 0.859000);
@56 = CARTESIAN_POINT( , 0.000000, 0.750000, 0.375000);
@57 = CARTESIAN_POINT( , 0.000000, 0.750000, 0.500000);
@58 = CARTESIAN_POINT( , 1.187500, 0.750000, 0.500000);
@59 = CARTESIAN_POINT( , 1.187500, 0.750000, 0.859000);
@60 = CARTESIAN_POINT( , 1.187500, 0.375000, 0.859000);
@61 = CARTESIAN_POINT( , 1.187500, 0.276700, 0.859000);
@62 = CARTESIAN_POINT( , 0.187500, 0.750000, 0.500000);
@63 = CARTESIAN_POINT( , 0.187500, 0.750000, 0.859000);
@64 = CARTESIAN_POINT( , 0.187500, 0.276700, 0.859000);
@65 = CARTESIAN_POINT( , 0.937500, 0.750000, 0.375000);
@66 = CARTESIAN_POINT( , 0.937500, 0.750000, 0.859000);
@67 = CARTESIAN_POINT( , 0.437500, 0.750000, 0.375000);
@68 = CARTESIAN_POINT( , 0.437500, 0.750000, 0.859000);
@69 = CARTESIAN_POINT( , 0.937500, 0.375000, 0.859000);
@70 = CARTESIAN_POINT( , 0.437500, 0.375000, 0.859000);
@71 = CARTESIAN_POINT( , 0.937500, 0.276700, 0.859000);
@72 = CARTESIAN_POINT( , 0.437500, 0.276700, 0.859000);
@73 = CARTESIAN_POINT( , 0.250000, 0.250000, 0.500000);
@74 = CARTESIAN_POINT( , 1.125000, 0.250000, 0.500000);
!* Done Points *!

@75 = DIRECTION( , 1.000000, 0.000000, 0.000000);
@76 = DIRECTION( , 0.000000, 1.000000, 0.000000);
@77 = DIRECTION( , 0.000000, 0.000000, 1.000000);
@78 = DIRECTION( , -1.000000, 0.000000, 0.000000);
@79 = DIRECTION( , 0.000000, -1.000000, 0.000000);
@80 = DIRECTION( , 0.000000, 0.000000, -1.000000);
@81 = DIRECTION( , -0.629430, 0.079960, 0.772930);
@82 = DIRECTION( , 0.629430, 0.079960, 0.772930);
!* Done UnitVectors *!

@83 = LINE( , #10, #75);
@84 = CIRCLE( , 0.250000, AXIS2_PLACEMENT( , #3, #77, 
       DIRECTION( , 0.000000, -1.000000, 0.000000)));
@85 = LINE( , #12, #76);
@86 = CIRCLE( , 0.250000, AXIS2_PLACEMENT( , #4, #77, 
       DIRECTION( , 1.000000, 0.000000, 0.000000)));
@87 = LINE( , #15, #75);
@88 = CIRCLE( , 0.250000, AXIS2_PLACEMENT( , #2, #77, 
       DIRECTION( , 0.000000, 1.000000, 0.000000)));
@89 = LINE( , #17, #76);
@90 = CIRCLE( , 0.250000, AXIS2_PLACEMENT( , #1, #77, 
       DIRECTION( , 0.000000, -1.000000, 0.000000)));
@91 = CIRCLE( , 0.110500, AXIS2_PLACEMENT( , #1, #77, 
       DIRECTION( , 0.000000, -1.000000, 0.000000)));
@92 = CIRCLE( , 0.078120, AXIS2_PLACEMENT( , #2, #77, 
       DIRECTION( , 0.000000, -1.000000, 0.000000)));
@93 = CIRCLE( , 0.078120, AXIS2_PLACEMENT( , #3, #77, 
       DIRECTION( , 0.000000, -1.000000, 0.000000)));
@94 = CIRCLE( , 0.110500, AXIS2_PLACEMENT( , #4, #77, 
       DIRECTION( , 0.000000, -1.000000, 0.000000)));
@95 = CIRCLE( , 0.078120, AXIS2_PLACEMENT( , #22, #77, 
       DIRECTION( , 0.000000, -1.000000, 0.000000)));
@96 = CIRCLE( , 0.078120, AXIS2_PLACEMENT( , #24, #77, 
       DIRECTION( , 0.000000, -1.000000, 0.000000)));
@97 = CIRCLE( , 0.078120, AXIS2_PLACEMENT( , #26, #77, 
       DIRECTION( , 0.000000, -1.000000, 0.000000)));
@98 = CIRCLE( , 0.078120, AXIS2_PLACEMENT( , #27, #77, 
       DIRECTION( , 0.000000, -1.000000, 0.000000)));
@99 = CIRCLE( , 0.078120, AXIS2_PLACEMENT( , #28, #77, 
       DIRECTION( , 0.000000, -1.000000, 0.000000)));
@100 = CIRCLE( , 0.078120, AXIS2_PLACEMENT( , #29, #77, 
       DIRECTION( , 0.000000, -1.000000, 0.000000)));
@101 = LINE( , #10, #77);
@102 = LINE( , #34, #81);
@103 = LINE( , #36, #77);
@104 = CIRCLE( , 0.250000, AXIS2_PLACEMENT( , #73, #77, 
       DIRECTION( , -1.000000, 0.000000, 0.000000)));
@105 = LINE( , #17, #77);
@106 = LINE( , #12, #77);
@107 = CIRCLE( , 0.250000, AXIS2_PLACEMENT( , #74, #77, 
       DIRECTION( , 1.000000, 0.000000, 0.000000)));
@108 = LINE( , #39, #77);
@109 = LINE( , #41, #82);
@110 = LINE( , #11, #77);
@111 = LINE( , #16, #77);
@112 = CIRCLE( , 0.250000, AXIS2_PLACEMENT( , #27, #77, 
       DIRECTION( , 0.000000, 1.000000, 0.000000)));
@113 = LINE( , #15, #77);
@114 = LINE( , #13, #77);
@115 = CIRCLE( , 0.250000, AXIS2_PLACEMENT( , #29, #77, 
       DIRECTION( , 1.000000, 0.000000, 0.000000)));
@116 = LINE( , #14, #77);
@117 = LINE( , #42, #75);
@118 = LINE( , #47, #77);
@119 = LINE( , #47, #75);
@120 = LINE( , #48, #77);
@121 = LINE( , #38, #76);
@122 = LINE( , #50, #77);
@123 = LINE( , #50, #76);
@124 = LINE( , #34, #75);
@125 = LINE( , #53, #77);
@126 = LINE( , #53, #75);
@127 = LINE( , #54, #77);
@128 = LINE( , #37, #76);
@129 = LINE( , #56, #77);
@130 = LINE( , #56, #76);
@131 = CIRCLE( , 0.375000, AXIS2_PLACEMENT( , #60, #75, 
       DIRECTION( , 0.000000, 1.000000, 0.000000)));
@132 = LINE( , #39, #76);
@133 = LINE( , #58, #77);
@134 = CIRCLE( , 0.098300, AXIS2_PLACEMENT( , #60, #75, 
       DIRECTION( , 0.000000, -1.000000, 0.000000)));
@135 = LINE( , #36, #76);
@136 = LINE( , #62, #77);
@137 = CIRCLE( , 0.375000, AXIS2_PLACEMENT( , #9, #75, 
       DIRECTION( , 0.000000, 1.000000, 0.000000)));
@138 = CIRCLE( , 0.098300, AXIS2_PLACEMENT( , #9, #75, 
       DIRECTION( , 0.000000, -1.000000, 0.000000)));
@139 = LINE( , #56, #75);
@140 = LINE( , #57, #75);
@141 = LINE( , #63, #75);
@142 = LINE( , #65, #77);
@143 = LINE( , #67, #77);
@144 = CIRCLE( , 0.375000, AXIS2_PLACEMENT( , #69, #75, 
       DIRECTION( , 0.000000, 1.000000, 0.000000)));
@145 = CIRCLE( , 0.375000, AXIS2_PLACEMENT( , #70, #75, 
       DIRECTION( , 0.000000, 1.000000, 0.000000)));
@146 = CIRCLE( , 0.098300, AXIS2_PLACEMENT( , #69, #75, 
       DIRECTION( , 0.000000, -1.000000, 0.000000)));
@147 = CIRCLE( , 0.098300, AXIS2_PLACEMENT( , #70, #75, 
       DIRECTION( , 0.000000, -1.000000, 0.000000)));
@148 = LINE( , #54, #76);
@149 = LINE( , #53, #76);
@150 = LINE( , #65, #76);
@151 = LINE( , #67, #76);
!* Done Curves *!

@152 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 0.000000, 0.000000, 0.000000), #77, ));
@153 = CONICAL_SURFACE( ,   44.999779,  0.0, AXIS2_PLACEMENT( , #7, #80, ));
@154 = CONICAL_SURFACE( ,   44.999779,  0.0, AXIS2_PLACEMENT( , #8, #80, ));
@155 = CYLINDRICAL_SURFACE( ,  0.156250, AXIS2_PLACEMENT( , #1, #77, ));
@156 = CYLINDRICAL_SURFACE( ,  0.156250, AXIS2_PLACEMENT( , #2, #77, ));
@157 = CYLINDRICAL_SURFACE( ,  0.156250, AXIS2_PLACEMENT( , #3, #77, ));
@158 = CYLINDRICAL_SURFACE( ,  0.156250, AXIS2_PLACEMENT( , #4, #77, ));
@159 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 0.000000, 0.000000, 0.375000), #80, ));
@160 = CYLINDRICAL_SURFACE( ,  0.250000, AXIS2_PLACEMENT( , #1, #77, ));
@161 = CYLINDRICAL_SURFACE( ,  0.250000, AXIS2_PLACEMENT( , #2, #77, ));
@162 = CYLINDRICAL_SURFACE( ,  0.250000, AXIS2_PLACEMENT( , #3, #77, ));
@163 = CYLINDRICAL_SURFACE( ,  0.250000, AXIS2_PLACEMENT( , #4, #77, ));
@164 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 0.000000, 1.375000, 0.000000), #76, ));
@165 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 1.375000, 0.000000, 0.000000), #75, ));
@166 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 0.000000, 0.000000, 0.000000), #79, ));
@167 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 0.000000, 0.000000, 0.000000), #78, ));
@168 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 1.187500, 0.000000, 0.000000), #75, ));
@169 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 0.187500, 0.000000, 0.000000), #78, ));
@170 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 0.000000, 0.750000, 0.000000), #76, ));
@171 = CYLINDRICAL_SURFACE( ,  0.375000, AXIS2_PLACEMENT( , #9, #75, ));
@172 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 0.000000, 0.000000, 0.500000), #77, ));
@173 = CYLINDRICAL_SURFACE( ,  0.196600, AXIS2_PLACEMENT( , #9, #75, ));
@174 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 0.000000, 0.000000, 0.250000), #77, ));
@175 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 0.937500, 0.000000, 0.000000), #78, ));
@176 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 0.437500, 0.000000, 0.000000), #75, ));
@177 = PLANE( , AXIS2_PLACEMENT( , 
       CARTESIAN_POINT( , 0.000000, 0.375000, 0.000000), #76, ));
!* Done Surfaces *!

@178 = VERTEX(  #10);
@179 = VERTEX(  #11);
@180 = VERTEX(  #12);
@181 = VERTEX(  #13);
@182 = VERTEX(  #14);
@183 = VERTEX(  #15);
@184 = VERTEX(  #16);
@185 = VERTEX(  #17);
@186 = VERTEX(  #34);
@187 = VERTEX(  #35);
@188 = VERTEX(  #36);
@189 = VERTEX(  #37);
@190 = VERTEX(  #38);
@191 = VERTEX(  #39);
@192 = VERTEX(  #40);
@193 = VERTEX(  #41);
@194 = VERTEX(  #42);
@195 = VERTEX(  #43);
@196 = VERTEX(  #44);
@197 = VERTEX(  #45);
@198 = VERTEX(  #46);
@199 = VERTEX(  #47);
@200 = VERTEX(  #48);
@201 = VERTEX(  #49);
@202 = VERTEX(  #50);
@203 = VERTEX(  #51);
@204 = VERTEX(  #52);
@205 = VERTEX(  #53);
@206 = VERTEX(  #54);
@207 = VERTEX(  #55);
@208 = VERTEX(  #56);
@209 = VERTEX(  #57);
@210 = VERTEX(  #58);
@211 = VERTEX(  #59);
@212 = VERTEX(  #62);
@213 = VERTEX(  #63);
@214 = VERTEX(  #65);
@215 = VERTEX(  #66);
@216 = VERTEX(  #67);
@217 = VERTEX(  #68);
!* Done Vertices *!

@218 = EDGE( #178, #179, CURVE_LOGICAL_STRUCTURE(#83, .T.));
@219 = EDGE( #179, #180, CURVE_LOGICAL_STRUCTURE(#84, .T.));
@220 = EDGE( #180, #181, CURVE_LOGICAL_STRUCTURE(#85, .T.));
@221 = EDGE( #181, #182, CURVE_LOGICAL_STRUCTURE(#86, .T.));
@222 = EDGE( #183, #182, CURVE_LOGICAL_STRUCTURE(#87, .T.));
@223 = EDGE( #183, #184, CURVE_LOGICAL_STRUCTURE(#88, .T.));
@224 = EDGE( #185, #184, CURVE_LOGICAL_STRUCTURE(#89, .T.));
@225 = EDGE( #185, #178, CURVE_LOGICAL_STRUCTURE(#90, .T.));
@226 = VERTEX (  #18);      !* This vertex is created by program *!
@227 = EDGE( #226, #226, CURVE_LOGICAL_STRUCTURE(#91, .T.));
@228 = VERTEX (  #19);      !* This vertex is created by program *!
@229 = EDGE( #228, #228, CURVE_LOGICAL_STRUCTURE(#92, .T.));
@230 = VERTEX (  #20);      !* This vertex is created by program *!
@231 = EDGE( #230, #230, CURVE_LOGICAL_STRUCTURE(#93, .T.));
@232 = VERTEX (  #21);      !* This vertex is created by program *!
@233 = EDGE( #232, #232, CURVE_LOGICAL_STRUCTURE(#94, .T.));
@234 = VERTEX (  #23);      !* This vertex is created by program *!
@235 = EDGE( #234, #234, CURVE_LOGICAL_STRUCTURE(#95, .T.));
@236 = VERTEX (  #25);      !* This vertex is created by program *!
@237 = EDGE( #236, #236, CURVE_LOGICAL_STRUCTURE(#96, .T.));
@238 = VERTEX (  #30);      !* This vertex is created by program *!
@239 = EDGE( #238, #238, CURVE_LOGICAL_STRUCTURE(#97, .T.));
@240 = VERTEX (  #31);      !* This vertex is created by program *!
@241 = EDGE( #240, #240, CURVE_LOGICAL_STRUCTURE(#98, .T.));
@242 = VERTEX (  #32);      !* This vertex is created by program *!
@243 = EDGE( #242, #242, CURVE_LOGICAL_STRUCTURE(#99, .T.));
@244 = VERTEX (  #33);      !* This vertex is created by program *!
@245 = EDGE( #244, #244, CURVE_LOGICAL_STRUCTURE(#100, .T.));
@246 = EDGE( #178, #186, CURVE_LOGICAL_STRUCTURE(#101, .T.));
@247 = EDGE( #186, #187, CURVE_LOGICAL_STRUCTURE(#102, .T.));
@248 = EDGE( #188, #187, CURVE_LOGICAL_STRUCTURE(#103, .T.));
@249 = EDGE( #189, #188, CURVE_LOGICAL_STRUCTURE(#104, .T.));
@250 = EDGE( #185, #189, CURVE_LOGICAL_STRUCTURE(#105, .T.));
@251 = EDGE( #180, #190, CURVE_LOGICAL_STRUCTURE(#106, .T.));
@252 = EDGE( #191, #190, CURVE_LOGICAL_STRUCTURE(#107, .T.));
@253 = EDGE( #191, #192, CURVE_LOGICAL_STRUCTURE(#108, .T.));
@254 = EDGE( #193, #192, CURVE_LOGICAL_STRUCTURE(#109, .T.));
@255 = EDGE( #179, #193, CURVE_LOGICAL_STRUCTURE(#110, .T.));
@256 = EDGE( #184, #195, CURVE_LOGICAL_STRUCTURE(#111, .T.));
@257 = EDGE( #194, #195, CURVE_LOGICAL_STRUCTURE(#112, .T.));
@258 = EDGE( #183, #194, CURVE_LOGICAL_STRUCTURE(#113, .T.));
@259 = EDGE( #181, #196, CURVE_LOGICAL_STRUCTURE(#114, .T.));
@260 = EDGE( #196, #197, CURVE_LOGICAL_STRUCTURE(#115, .T.));
@261 = EDGE( #182, #197, CURVE_LOGICAL_STRUCTURE(#116, .T.));
@262 = EDGE( #194, #198, CURVE_LOGICAL_STRUCTURE(#117, .T.));
@263 = EDGE( #199, #198, CURVE_LOGICAL_STRUCTURE(#118, .T.));
@264 = EDGE( #199, #200, CURVE_LOGICAL_STRUCTURE(#119, .T.));
@265 = EDGE( #200, #201, CURVE_LOGICAL_STRUCTURE(#120, .T.));
@266 = EDGE( #201, #197, CURVE_LOGICAL_STRUCTURE(#117, .T.));
@267 = EDGE( #190, #203, CURVE_LOGICAL_STRUCTURE(#121, .T.));
@268 = EDGE( #202, #203, CURVE_LOGICAL_STRUCTURE(#122, .T.));
@269 = EDGE( #202, #196, CURVE_LOGICAL_STRUCTURE(#123, .T.));
@270 = EDGE( #186, #204, CURVE_LOGICAL_STRUCTURE(#124, .T.));
@271 = EDGE( #205, #204, CURVE_LOGICAL_STRUCTURE(#125, .T.));
@272 = EDGE( #205, #206, CURVE_LOGICAL_STRUCTURE(#126, .T.));
@273 = EDGE( #206, #207, CURVE_LOGICAL_STRUCTURE(#127, .T.));
@274 = EDGE( #207, #193, CURVE_LOGICAL_STRUCTURE(#124, .T.));
@275 = EDGE( #189, #209, CURVE_LOGICAL_STRUCTURE(#128, .T.));
@276 = EDGE( #208, #209, CURVE_LOGICAL_STRUCTURE(#129, .T.));
@277 = EDGE( #208, #195, CURVE_LOGICAL_STRUCTURE(#130, .T.));
@278 = EDGE( #211, #192, CURVE_LOGICAL_STRUCTURE(#131, .T.));
@279 = EDGE( #191, #210, CURVE_LOGICAL_STRUCTURE(#132, .T.));
@280 = EDGE( #210, #211, CURVE_LOGICAL_STRUCTURE(#133, .T.));
@281 = VERTEX (  #61);      !* This vertex is created by program *!
@282 = EDGE( #281, #281, CURVE_LOGICAL_STRUCTURE(#134, .T.));
@283 = EDGE( #188, #212, CURVE_LOGICAL_STRUCTURE(#135, .T.));
@284 = EDGE( #212, #213, CURVE_LOGICAL_STRUCTURE(#136, .T.));
@285 = EDGE( #213, #187, CURVE_LOGICAL_STRUCTURE(#137, .T.));
@286 = VERTEX (  #64);      !* This vertex is created by program *!
@287 = EDGE( #286, #286, CURVE_LOGICAL_STRUCTURE(#138, .T.));
@288 = EDGE( #214, #202, CURVE_LOGICAL_STRUCTURE(#139, .T.));
@289 = EDGE( #210, #203, CURVE_LOGICAL_STRUCTURE(#140, .T.));
@290 = EDGE( #215, #211, CURVE_LOGICAL_STRUCTURE(#141, .T.));
@291 = EDGE( #214, #215, CURVE_LOGICAL_STRUCTURE(#142, .T.));
@292 = EDGE( #208, #216, CURVE_LOGICAL_STRUCTURE(#139, .T.));
@293 = EDGE( #216, #217, CURVE_LOGICAL_STRUCTURE(#143, .T.));
@294 = EDGE( #213, #217, CURVE_LOGICAL_STRUCTURE(#141, .T.));
@295 = EDGE( #209, #212, CURVE_LOGICAL_STRUCTURE(#140, .T.));
@296 = EDGE( #215, #207, CURVE_LOGICAL_STRUCTURE(#144, .T.));
@297 = EDGE( #217, #204, CURVE_LOGICAL_STRUCTURE(#145, .T.));
@298 = VERTEX (  #71);      !* This vertex is created by program *!
@299 = EDGE( #298, #298, CURVE_LOGICAL_STRUCTURE(#146, .T.));
@300 = VERTEX (  #72);      !* This vertex is created by program *!
@301 = EDGE( #300, #300, CURVE_LOGICAL_STRUCTURE(#147, .T.));
@302 = EDGE( #206, #200, CURVE_LOGICAL_STRUCTURE(#148, .T.));
@303 = EDGE( #205, #199, CURVE_LOGICAL_STRUCTURE(#149, .T.));
@304 = EDGE( #214, #201, CURVE_LOGICAL_STRUCTURE(#150, .T.));
@305 = EDGE( #216, #198, CURVE_LOGICAL_STRUCTURE(#151, .T.));
!* Done Edges *!

@306 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#218, .F.), 
       EDGE_LOGICAL_STRUCTURE(#225, .F.), 
       EDGE_LOGICAL_STRUCTURE(#224, .T.), 
       EDGE_LOGICAL_STRUCTURE(#223, .F.), 
       EDGE_LOGICAL_STRUCTURE(#222, .T.), 
       EDGE_LOGICAL_STRUCTURE(#221, .F.), 
       EDGE_LOGICAL_STRUCTURE(#220, .F.), 
       EDGE_LOGICAL_STRUCTURE(#219, .F.) ));
@307 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#227, .T.) ));
@308 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#229, .T.) ));
@309 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#231, .T.) ));
@310 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#233, .T.) ));
@311 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#227, .F.) ));
@312 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#235, .T.) ));
@313 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#233, .F.) ));
@314 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#237, .T.) ));
@315 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#235, .F.) ));
@316 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#239, .T.) ));
@317 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#229, .F.) ));
@318 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#241, .T.) ));
@319 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#231, .F.) ));
@320 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#243, .T.) ));
@321 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#237, .F.) ));
@322 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#245, .T.) ));
@323 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#239, .F.) ));
@324 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#243, .F.) ));
@325 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#225, .T.), 
       EDGE_LOGICAL_STRUCTURE(#246, .T.), 
       EDGE_LOGICAL_STRUCTURE(#247, .T.), 
       EDGE_LOGICAL_STRUCTURE(#248, .F.), 
       EDGE_LOGICAL_STRUCTURE(#249, .F.), 
       EDGE_LOGICAL_STRUCTURE(#250, .F.) ));
@326 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#223, .T.), 
       EDGE_LOGICAL_STRUCTURE(#256, .T.), 
       EDGE_LOGICAL_STRUCTURE(#257, .F.), 
       EDGE_LOGICAL_STRUCTURE(#258, .F.) ));
@327 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#219, .T.), 
       EDGE_LOGICAL_STRUCTURE(#251, .T.), 
       EDGE_LOGICAL_STRUCTURE(#252, .F.), 
       EDGE_LOGICAL_STRUCTURE(#253, .T.), 
       EDGE_LOGICAL_STRUCTURE(#254, .F.), 
       EDGE_LOGICAL_STRUCTURE(#255, .F.) ));
@328 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#221, .T.), 
       EDGE_LOGICAL_STRUCTURE(#261, .T.), 
       EDGE_LOGICAL_STRUCTURE(#260, .F.), 
       EDGE_LOGICAL_STRUCTURE(#259, .F.) ));
@329 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#222, .F.), 
       EDGE_LOGICAL_STRUCTURE(#258, .T.), 
       EDGE_LOGICAL_STRUCTURE(#262, .T.), 
       EDGE_LOGICAL_STRUCTURE(#263, .F.), 
       EDGE_LOGICAL_STRUCTURE(#264, .T.), 
       EDGE_LOGICAL_STRUCTURE(#265, .T.), 
       EDGE_LOGICAL_STRUCTURE(#266, .T.), 
       EDGE_LOGICAL_STRUCTURE(#261, .F.) ));
@330 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#220, .T.), 
       EDGE_LOGICAL_STRUCTURE(#259, .T.), 
       EDGE_LOGICAL_STRUCTURE(#269, .F.), 
       EDGE_LOGICAL_STRUCTURE(#268, .T.), 
       EDGE_LOGICAL_STRUCTURE(#267, .F.), 
       EDGE_LOGICAL_STRUCTURE(#251, .F.) ));
@331 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#218, .T.), 
       EDGE_LOGICAL_STRUCTURE(#255, .T.), 
       EDGE_LOGICAL_STRUCTURE(#274, .F.), 
       EDGE_LOGICAL_STRUCTURE(#273, .F.), 
       EDGE_LOGICAL_STRUCTURE(#272, .F.), 
       EDGE_LOGICAL_STRUCTURE(#271, .F.), 
       EDGE_LOGICAL_STRUCTURE(#270, .F.), 
       EDGE_LOGICAL_STRUCTURE(#246, .F.) ));
@332 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#224, .F.), 
       EDGE_LOGICAL_STRUCTURE(#250, .T.), 
       EDGE_LOGICAL_STRUCTURE(#275, .T.), 
       EDGE_LOGICAL_STRUCTURE(#276, .F.), 
       EDGE_LOGICAL_STRUCTURE(#277, .T.), 
       EDGE_LOGICAL_STRUCTURE(#256, .F.) ));
@333 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#279, .T.), 
       EDGE_LOGICAL_STRUCTURE(#280, .T.), 
       EDGE_LOGICAL_STRUCTURE(#278, .T.), 
       EDGE_LOGICAL_STRUCTURE(#253, .F.) ));
@334 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#282, .F.) ));
@335 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#283, .F.), 
       EDGE_LOGICAL_STRUCTURE(#248, .T.), 
       EDGE_LOGICAL_STRUCTURE(#285, .F.), 
       EDGE_LOGICAL_STRUCTURE(#284, .F.) ));
@336 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#287, .T.) ));
@337 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#292, .F.), 
       EDGE_LOGICAL_STRUCTURE(#276, .T.), 
       EDGE_LOGICAL_STRUCTURE(#295, .T.), 
       EDGE_LOGICAL_STRUCTURE(#284, .T.), 
       EDGE_LOGICAL_STRUCTURE(#294, .T.), 
       EDGE_LOGICAL_STRUCTURE(#293, .F.) ));
@338 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#274, .T.), 
       EDGE_LOGICAL_STRUCTURE(#254, .T.), 
       EDGE_LOGICAL_STRUCTURE(#278, .F.), 
       EDGE_LOGICAL_STRUCTURE(#290, .F.), 
       EDGE_LOGICAL_STRUCTURE(#296, .T.) ));
@339 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#270, .T.), 
       EDGE_LOGICAL_STRUCTURE(#297, .F.), 
       EDGE_LOGICAL_STRUCTURE(#294, .F.), 
       EDGE_LOGICAL_STRUCTURE(#285, .T.), 
       EDGE_LOGICAL_STRUCTURE(#247, .F.) ));
@340 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#252, .T.), 
       EDGE_LOGICAL_STRUCTURE(#267, .T.), 
       EDGE_LOGICAL_STRUCTURE(#289, .F.), 
       EDGE_LOGICAL_STRUCTURE(#279, .F.) ));
@341 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#282, .T.) ));
@342 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#287, .F.) ));
@343 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#272, .T.), 
       EDGE_LOGICAL_STRUCTURE(#302, .T.), 
       EDGE_LOGICAL_STRUCTURE(#264, .F.), 
       EDGE_LOGICAL_STRUCTURE(#303, .F.) ));
@344 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#273, .T.), 
       EDGE_LOGICAL_STRUCTURE(#296, .F.), 
       EDGE_LOGICAL_STRUCTURE(#291, .F.), 
       EDGE_LOGICAL_STRUCTURE(#304, .T.), 
       EDGE_LOGICAL_STRUCTURE(#265, .F.), 
       EDGE_LOGICAL_STRUCTURE(#302, .F.) ));
@345 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#299, .T.) ));
@346 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#271, .F.), 
       EDGE_LOGICAL_STRUCTURE(#303, .T.), 
       EDGE_LOGICAL_STRUCTURE(#263, .T.), 
       EDGE_LOGICAL_STRUCTURE(#305, .F.), 
       EDGE_LOGICAL_STRUCTURE(#293, .T.), 
       EDGE_LOGICAL_STRUCTURE(#297, .T.) ));
@347 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#301, .F.) ));
@348 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#288, .F.), 
       EDGE_LOGICAL_STRUCTURE(#291, .T.), 
       EDGE_LOGICAL_STRUCTURE(#290, .T.), 
       EDGE_LOGICAL_STRUCTURE(#280, .F.), 
       EDGE_LOGICAL_STRUCTURE(#289, .T.), 
       EDGE_LOGICAL_STRUCTURE(#268, .F.) ));
@349 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#249, .T.), 
       EDGE_LOGICAL_STRUCTURE(#283, .T.), 
       EDGE_LOGICAL_STRUCTURE(#295, .F.), 
       EDGE_LOGICAL_STRUCTURE(#275, .F.) ));
@350 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#299, .F.) ));
@351 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#301, .T.) ));
@352 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#288, .T.), 
       EDGE_LOGICAL_STRUCTURE(#269, .T.), 
       EDGE_LOGICAL_STRUCTURE(#260, .T.), 
       EDGE_LOGICAL_STRUCTURE(#266, .F.), 
       EDGE_LOGICAL_STRUCTURE(#304, .F.) ));
@353 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#245, .F.) ));
@354 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#292, .T.), 
       EDGE_LOGICAL_STRUCTURE(#305, .T.), 
       EDGE_LOGICAL_STRUCTURE(#262, .F.), 
       EDGE_LOGICAL_STRUCTURE(#257, .T.), 
       EDGE_LOGICAL_STRUCTURE(#277, .F.) ));
@355 = EDGE_LOOP( (
       EDGE_LOGICAL_STRUCTURE(#241, .F.) ));
!* Done Loops *!

@356 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#306, .T.),
       LOOP_LOGICAL_STRUCTURE(#307, .T.),
       LOOP_LOGICAL_STRUCTURE(#308, .T.),
       LOOP_LOGICAL_STRUCTURE(#309, .T.),
       LOOP_LOGICAL_STRUCTURE(#310, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#152, .T.));
@357 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#311, .T.),
       LOOP_LOGICAL_STRUCTURE(#312, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#153, .T.));
@358 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#313, .T.),
       LOOP_LOGICAL_STRUCTURE(#314, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#154, .T.));
@359 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#315, .T.),
       LOOP_LOGICAL_STRUCTURE(#316, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#155, .T.));
@360 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#317, .T.),
       LOOP_LOGICAL_STRUCTURE(#318, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#156, .T.));
@361 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#319, .T.),
       LOOP_LOGICAL_STRUCTURE(#320, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#157, .T.));
@362 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#321, .T.),
       LOOP_LOGICAL_STRUCTURE(#322, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#158, .T.));
@363 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#323, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#159, .T.));
@364 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#324, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#159, .T.));
@365 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#325, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#160, .F.));
@366 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#326, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#161, .F.));
@367 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#327, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#162, .F.));
@368 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#328, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#163, .F.));
@369 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#329, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#164, .T.));
@370 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#330, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#165, .T.));
@371 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#331, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#166, .T.));
@372 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#332, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#167, .T.));
@373 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#333, .T.),
       LOOP_LOGICAL_STRUCTURE(#334, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#168, .T.));
@374 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#335, .T.),
       LOOP_LOGICAL_STRUCTURE(#336, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#169, .T.));
@375 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#348, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#170, .T.));
@376 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#337, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#170, .T.));
@377 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#338, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#171, .F.));
@378 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#339, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#171, .F.));
@379 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#340, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#172, .T.));
@380 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#349, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#172, .T.));
@381 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#341, .T.),
       LOOP_LOGICAL_STRUCTURE(#350, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#173, .T.));
@382 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#342, .T.),
       LOOP_LOGICAL_STRUCTURE(#351, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#173, .T.));
@383 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#343, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#174, .T.));
@384 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#344, .T.),
       LOOP_LOGICAL_STRUCTURE(#345, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#175, .T.));
@385 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#346, .T.),
       LOOP_LOGICAL_STRUCTURE(#347, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#176, .T.));
@386 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#352, .T.),
       LOOP_LOGICAL_STRUCTURE(#353, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#177, .T.));
@387 = FACE( , (
       LOOP_LOGICAL_STRUCTURE(#354, .T.),
       LOOP_LOGICAL_STRUCTURE(#355, .T.)  ),
       SURFACE_LOGICAL_STRUCTURE(#177, .T.));
!* Done Faces *!

@388 = CLOSED_SHELL( (
        FACE_LOGICAL_STRUCTURE(#356,.T.),
        FACE_LOGICAL_STRUCTURE(#357,.T.),
        FACE_LOGICAL_STRUCTURE(#358,.T.),
        FACE_LOGICAL_STRUCTURE(#359,.T.),
        FACE_LOGICAL_STRUCTURE(#360,.T.),
        FACE_LOGICAL_STRUCTURE(#361,.T.),
        FACE_LOGICAL_STRUCTURE(#362,.T.),
        FACE_LOGICAL_STRUCTURE(#363,.T.),
        FACE_LOGICAL_STRUCTURE(#364,.T.),
        FACE_LOGICAL_STRUCTURE(#365,.T.),
        FACE_LOGICAL_STRUCTURE(#366,.T.),
        FACE_LOGICAL_STRUCTURE(#367,.T.),
        FACE_LOGICAL_STRUCTURE(#368,.T.),
        FACE_LOGICAL_STRUCTURE(#369,.T.),
        FACE_LOGICAL_STRUCTURE(#370,.T.),
        FACE_LOGICAL_STRUCTURE(#371,.T.),
        FACE_LOGICAL_STRUCTURE(#372,.T.),
        FACE_LOGICAL_STRUCTURE(#373,.T.),
        FACE_LOGICAL_STRUCTURE(#374,.T.),
        FACE_LOGICAL_STRUCTURE(#375,.T.),
        FACE_LOGICAL_STRUCTURE(#376,.T.),
        FACE_LOGICAL_STRUCTURE(#377,.T.),
        FACE_LOGICAL_STRUCTURE(#378,.T.),
        FACE_LOGICAL_STRUCTURE(#379,.T.),
        FACE_LOGICAL_STRUCTURE(#380,.T.),
        FACE_LOGICAL_STRUCTURE(#381,.T.),
        FACE_LOGICAL_STRUCTURE(#382,.T.),
        FACE_LOGICAL_STRUCTURE(#383,.T.),
        FACE_LOGICAL_STRUCTURE(#384,.T.),
        FACE_LOGICAL_STRUCTURE(#385,.T.),
        FACE_LOGICAL_STRUCTURE(#386,.T.),
        FACE_LOGICAL_STRUCTURE(#387,.T.)   ));
!* Done Shells *!

ENDSEC;

ENDSTEP;
