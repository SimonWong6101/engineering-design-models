%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 216 308 384 549 
%%LanguageLevel: 1
%%Creator: CorelDRAW 9
%%Title: \\Edge\gicl\data1\repository\...
%%CreationDate: Sun Oct 29 09:42:43 2000
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 1 def
%Build: CorelDRAW 9 Version 9.337
%Color profile: Disabled
%%BeginResource: procset wCorel9Dict 9.0 0
/wCorel9Dict 300 dict def wCorel9Dict begin
% Copyright (c)1992-1999 Corel Corporation
% All rights reserved.     v9.0 r0.5
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CurrentInkName_5 where{pop}{/CurrentInkName_5(Composite)def}
ifelse/$ink_5 where{pop}{/$ink_5 -1 def}ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0
def/$t 1 def/$n _ def/$o 0 def/$fil 0 def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def
/$T 1 def/$N _ def/$O 0 def/$PF false def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0
def/s1t 0 def/s1n _ def/$bkg false def/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op
false def matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm
matrix def/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve
16#6/dotaccent 16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def/Comp?{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{1 0 0 0 @gs
setcmykcolor currentcmykcolor @gr add add add 0 ne 0 1 0 0 @gs setcmykcolor
currentcmykcolor @gr add add add 0 ne 0 0 1 0 @gs setcmykcolor currentcmykcolor
@gr add add add 0 ne 0 0 0 1 @gs setcmykcolor currentcmykcolor @gr add add add
0 ne and and and}ifelse}ifelse}bd/@PL{/LV where{pop LV 2 ge L2? not and{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/p{/$pm xd 7 rp/$pyf xd/$pxf xd/$pn xd/$fil 1 def}
bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}ifelse}bd
/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp}bd
/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}bd
/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld/GetRgb
/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2 systemdict
/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def/SetHsb
systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get def
/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop/SetCmyk_5{LumSepsDict
/setcmykcolor get exec}def}{/AldusSepsDict where{pop/SetCmyk_5{AldusSepsDict
/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld}ifelse}ifelse}{
/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk
/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where
{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where{pop}{
/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll
mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0 4 $ink_5 sub index exch pop 5 1
roll pop pop pop pop SepsColor true eq{$ink_5 3 gt{1 sub neg SetGry}{0 0 0 4
$ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/setcustomcolor where{pop}{/setcustomcolor{exch aload pop SepMode_5 0 eq{pop
@tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll 5 rp 1
sub neg SetGry}ifelse}bd}ifelse/@scc_5{dup type/booleantype eq{setoverprint}{1
eq setoverprint}ifelse dup _ eq{pop setprocesscolor_5 pop}{findcmykcustomcolor
exch setcustomcolor}ifelse SepMode_5 0 eq{true}{GetGry 1 eq currentoverprint
and not}ifelse}bd/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{
/ncolors xd/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop
pop exch pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd
/daqC xd pop pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}
ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub
{dup 3 mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div $dat 3 index
2 add get 255 div rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat
length 3 idiv getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4
mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add
get 255 div $dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop
$dat 3 1 roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}
image}ifelse}bd}ifelse/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5
/$ffpnt xd}bd/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/@sft{$tllx
$pxf add dup $tllx gt{$pwid sub}if/$tx xd $tury $pyf sub dup $tury lt{$phei
add}if/$ty xd}bd/@stb{pathbbox/$ury xd/$urx xd/$lly xd/$llx xd}bd/@ep{{cvx exec
}forall}bd/@tp{@sv/$in true def 2 copy dup $lly le{/$in false def}if $phei sub
$ury ge{/$in false def}if dup $urx ge{/$in false def}if $pwid add $llx le{/$in
false def}if $in{@np 2 copy m $pwid 0 rl 0 $phei neg rl $pwid neg 0 rl 0 $phei
rl clip @np $pn cvlit load aload pop 7 -1 roll 5 index sub 7 -1 roll 3 index
sub Tl matrix currentmatrix/$ctm xd @ep pop pop pop pop}{pop pop}ifelse @rs}bd
/@th{@sft 0 1 $tly 1 sub{dup $psx mul $tx add{dup $llx gt{$pwid sub}{exit}
ifelse}loop exch $phei mul $ty exch sub 0 1 $tlx 1 sub{$pwid mul 3 copy 3 -1
roll add exch @tp pop}for pop pop}for}bd/@tv{@sft 0 1 $tlx 1 sub{dup $pwid mul
$tx add exch $psy mul $ty exch sub{dup $ury lt{$phei add}{exit}ifelse}loop 0 1
$tly 1 sub{$phei mul 3 copy sub @tp pop}for pop pop}for}bd/$fm 0 def/wfill{1
$fm eq{fill}{eofill}ifelse}bd/wclip{1 $fm eq{clip}{eoclip}ifelse}bd/@pf{@gs
$ctm setmatrix $pm concat @stb wclip @sv Bburx Bbury $pm itransform/$tury xd
/$turx xd Bbllx Bblly $pm itransform/$tlly xd/$tllx xd newpath $tllx $tlly m
$tllx $tury l $turx $tury l $turx $tlly l $tllx $tlly m @cp pathbbox @rs/$tury
xd/$turx xd/$tlly xd/$tllx xd/$wid $turx $tllx sub def/$hei $tury $tlly sub def
@gs $vectpat{1 0 0 0 0 _ $o @scc_5{wfill}if}{$t $c $m $y $k $n $o @scc_5{
SepMode_5 0 eq $pfrg or{$tllx $tlly Tl $wid $hei scale <00> 8 1 false[8 0 0 1 0
0]{}imagemask}{/$bkg true def}ifelse}if}ifelse @gr $wid 0 gt $hei 0 gt and{$pn
cvlit load aload pop/$pd xd 3 -1 roll sub/$phei xd exch sub/$pwid xd $wid $pwid
div ceiling 1 add/$tlx xd $hei $phei div ceiling 1 add/$tly xd $psx 0 eq{@tv}{
@th}ifelse}if @gr @np/$bkg false def}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm setmatrix 72
1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{@pf}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$t $c $m $y $k $n $o @scc_5{wfill}
{@np}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp
F}bd/S{matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if $T $C $M
$Y $K $N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}
{@np}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}
bd/b{@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat
readhexstring pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd
/Bblly xd/Bbllx xd}bd/@c{@cp}bd/@p{/$fil 1 def 1 eq dup/$vectpat xd{/$pfrg true
def}{@gs $t $c $m $y $k $n $o @scc_5/$pfrg xd @gr}ifelse/$pm xd/$psy xd/$psx xd
/$pyf xd/$pxf xd/$pn xd}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd
}bd/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/tcc{@cc}def/@i{@sm @gs @ii 6 index 1 ne
{/$frg true def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg
false def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd
/$lly xd/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi
string def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub
$ury $lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts
1 eq{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load
$bts 1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]$msimage false eq $ncl 1 eq or{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl
3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def
/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq
{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5
(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{
CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}
ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000 -72000
l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec
cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}
bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}
ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd/@daq{dup type
/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq MaskedImage true eq and
{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq UseLevel 3 eq or and{7 -2
roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{7 -2 roll pop pop @I}
ifelse}ifelse}ifelse}bd systemdict/pdfmark known not{/pdfmark/cleartomark ld}
if
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel9Dict begin
@BeginSysCorelDict
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
217.04400 308.84400 383.50800 548.53200 @E
1 J 1 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.56693 0.56693 90.00000 @w
/$fm 0 def
217.04400 365.22000 m
217.40400 334.69200 L
372.85200 524.84400 m
357.94800 539.02800 L
304.66800 479.12400 m
306.61200 477.46800 L
240.87600 378.32400 m
240.94800 374.36400 L
299.70000 312.15600 m
347.00400 369.03600 L
287.46000 309.34800 m
291.99600 308.84400 L
296.31600 309.78000 L
299.70000 312.15600 L
279.03600 311.86800 m
287.46000 309.34800 L
217.40400 334.69200 m
219.20400 330.58800 L
223.23600 328.28400 L
223.23600 328.28400 m
231.51600 325.83600 L
302.65200 393.30000 m
302.43600 392.29200 L
301.64400 390.99600 L
301.64400 390.99600 m
288.75600 376.16400 L
288.75600 376.16400 m
286.02000 374.07600 L
281.84400 372.42000 L
276.73200 371.62800 L
271.40400 371.84400 L
266.58000 372.99600 L
262.90800 374.86800 L
260.89200 376.95600 L
260.46000 378.54000 L
245.05200 388.62000 m
242.82000 385.45200 L
241.38000 381.99600 L
240.87600 378.32400 L
268.38000 414.68400 m
245.05200 388.62000 L
347.58000 377.24400 m
359.17200 464.22000 L
298.04400 486.46800 m
254.91600 408.85200 L
335.84400 386.10000 m
347.65200 474.15600 L
353.62800 519.80400 m
349.02000 520.52400 L
344.26800 520.30800 L
339.58800 519.15600 L
335.19600 517.14000 L
331.16400 514.33200 L
327.70800 510.80400 L
324.97200 506.77200 L
322.95600 502.23600 L
321.94800 498.06000 L
321.66000 493.81200 L
322.09200 489.63600 L
323.24400 485.67600 L
313.66800 490.42800 m
310.28400 494.02800 L
307.83600 498.34800 L
306.32400 503.10000 L
305.89200 508.21200 L
349.88400 496.62000 m
346.35600 492.51600 L
342.18000 489.27600 L
337.42800 486.90000 L
332.46000 485.46000 L
327.34800 485.17200 L
322.38000 485.89200 L
317.77200 487.69200 L
313.66800 490.42800 L
347.79600 528.73200 m
350.82000 525.20400 L
353.12400 521.10000 L
354.49200 516.49200 L
354.92400 511.66800 L
310.93200 523.18800 m
314.46000 527.29200 L
318.78000 530.60400 L
323.60400 533.05200 L
328.78800 534.34800 L
333.97200 534.56400 L
339.01200 533.70000 L
343.69200 531.75600 L
347.79600 528.73200 L
363.42000 493.02000 m
349.88400 496.62000 L
353.62800 495.61200 m
355.78800 499.86000 L
357.15600 504.46800 L
357.66000 509.07600 L
313.81200 520.59600 m
311.14800 515.98800 L
309.42000 510.94800 L
308.77200 505.69200 L
305.89200 508.21200 m
292.57200 511.74000 L
308.77200 505.69200 m
305.89200 508.21200 L
354.92400 511.66800 m
368.46000 508.06800 L
357.66000 509.07600 m
371.19600 505.54800 L
357.66000 509.07600 m
354.92400 511.66800 L
300.49200 524.12400 m
313.81200 520.59600 L
297.54000 526.64400 m
310.93200 523.18800 L
310.93200 523.18800 m
313.81200 520.59600 L
347.65200 474.15600 m
359.17200 464.22000 L
347.65200 474.15600 m
343.04400 472.14000 L
338.29200 470.62800 L
333.39600 469.76400 L
328.50000 469.54800 L
323.67600 469.90800 L
319.06800 470.91600 L
314.60400 472.57200 L
310.42800 474.73200 L
306.61200 477.46800 L
371.19600 505.54800 m
370.18800 500.36400 L
368.53200 495.32400 L
366.15600 490.50000 L
368.46000 508.06800 m
371.19600 505.54800 L
357.94800 539.02800 m
353.91600 542.34000 L
349.38000 544.93200 L
344.48400 546.87600 L
339.37200 548.10000 L
334.04400 548.53200 L
328.64400 548.17200 L
323.24400 547.02000 L
318.06000 545.22000 L
313.09200 542.62800 L
308.48400 539.46000 L
304.30800 535.71600 L
300.63600 531.39600 L
297.54000 526.64400 L
368.46000 508.06800 m
368.74800 513.03600 L
368.46000 518.00400 L
367.52400 522.75600 L
365.94000 527.36400 L
363.85200 531.61200 L
361.11600 535.57200 L
357.94800 539.02800 L
300.49200 524.12400 m
297.54000 526.64400 L
295.74000 510.87600 m
296.82000 515.41200 L
298.40400 519.87600 L
300.49200 524.12400 L
304.66800 479.12400 m
308.77200 476.17200 L
313.23600 473.94000 L
318.06000 472.28400 L
323.10000 471.34800 L
328.28400 471.13200 L
333.46800 471.63600 L
338.65200 472.86000 L
343.69200 474.73200 L
348.44400 477.32400 L
352.90800 480.49200 L
356.94000 484.23600 L
360.46800 488.41200 L
363.42000 493.02000 L
292.57200 511.74000 m
292.21200 506.41200 L
292.57200 501.15600 L
293.65200 496.04400 L
295.45200 491.22000 L
297.90000 486.68400 L
300.99600 482.65200 L
304.66800 479.12400 L
366.15600 490.50000 m
363.42000 493.02000 L
372.85200 524.84400 m
376.23600 521.17200 L
379.04400 516.99600 L
381.20400 512.38800 L
382.64400 507.49200 L
383.43600 502.38000 L
383.50800 497.19600 L
382.86000 491.94000 L
381.56400 486.75600 L
381.56400 486.75600 m
379.69200 482.14800 L
377.31600 477.75600 L
374.43600 473.72400 L
371.05200 469.98000 L
367.30800 466.66800 L
363.20400 463.86000 L
358.81200 461.55600 L
335.84400 386.10000 m
325.62000 388.98000 L
217.04400 365.22000 m
217.69200 363.27600 L
219.56400 361.54800 L
222.37200 360.32400 L
218.12400 367.88400 m
217.33200 366.58800 L
217.04400 365.22000 L
254.91600 408.85200 m
218.12400 367.88400 L
261.54000 407.05200 m
254.91600 408.85200 L
305.82000 365.79600 m
302.94000 362.98800 L
299.19600 360.46800 L
294.80400 358.38000 L
289.90800 356.72400 L
284.50800 355.57200 L
278.89200 354.92400 L
273.13200 354.85200 L
267.44400 355.35600 L
261.97200 356.36400 L
256.86000 357.87600 L
252.32400 359.82000 L
248.36400 362.26800 L
245.19600 364.93200 L
242.82000 367.95600 L
241.38000 371.12400 L
240.94800 374.36400 L
327.78000 395.46000 m
325.62000 388.98000 L
305.82000 365.79600 L
305.89200 369.82800 L
299.05200 388.04400 m
295.38000 389.84400 L
290.98800 390.78000 L
286.23600 390.92400 L
281.70000 390.20400 L
277.81200 388.62000 L
275.00400 386.46000 L
300.34800 344.12400 m
335.84400 386.10000 L
347.58000 377.24400 m
335.84400 386.10000 L
287.10000 341.60400 m
290.84400 340.95600 L
294.66000 341.24400 L
298.04400 342.39600 L
300.34800 344.12400 L
300.34800 344.12400 m
300.13200 313.38000 L
222.37200 360.32400 m
222.66000 329.72400 L
222.37200 360.32400 m
287.10000 341.60400 L
286.95600 310.78800 L
272.98800 321.51600 m
277.16400 313.66800 L
236.41200 332.24400 m
272.98800 321.51600 L
S

@rax %Note: Object
217.40400 309.34800 347.58000 415.90800 @E
1 J 1 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.56693 0.56693 90.00000 @w
/$fm 0 def
232.23600 326.84400 m
236.41200 332.24400 L
347.43600 370.26000 m
300.13200 313.38000 L
300.13200 313.38000 m
297.75600 311.58000 L
294.44400 310.50000 L
290.62800 310.21200 L
286.95600 310.78800 L
300.13200 313.38000 m
299.98800 312.73200 L
299.70000 312.15600 L
277.16400 313.66800 m
277.74000 312.80400 L
278.38800 312.15600 L
279.03600 311.86800 L
286.95600 310.78800 m
277.16400 313.66800 L
286.95600 310.78800 m
286.95600 310.06800 L
287.17200 309.63600 L
287.46000 309.34800 L
347.00400 369.03600 m
347.36400 369.61200 L
347.43600 370.26000 L
347.58000 377.24400 m
347.43600 370.26000 L
237.06000 332.10000 m
232.09200 326.41200 L
222.66000 329.72400 m
219.92400 330.94800 L
218.05200 332.67600 L
217.40400 334.69200 L
231.51600 325.83600 m
231.58800 325.98000 L
231.87600 326.34000 L
232.23600 326.84400 L
232.09200 326.41200 m
231.73200 325.98000 L
231.51600 325.83600 L
223.23600 328.28400 m
222.94800 328.50000 L
222.73200 329.00400 L
222.66000 329.72400 L
232.23600 326.84400 m
222.66000 329.72400 L
275.00400 386.46000 m
275.00400 397.11600 L
275.00400 386.46000 m
264.20400 374.07600 L
262.04400 375.66000 m
261.97200 382.28400 L
275.00400 397.11600 m
278.38800 399.56400 L
283.21200 401.14800 L
288.68400 401.58000 L
294.08400 400.86000 L
298.54800 399.06000 L
301.57200 396.39600 L
302.65200 393.30000 L
272.12400 400.57200 m
273.27600 400.06800 L
274.21200 399.20400 L
274.78800 398.19600 L
275.00400 397.11600 L
261.97200 382.28400 m
275.00400 397.11600 L
301.64400 390.99600 m
302.29200 391.50000 L
303.15600 391.71600 L
304.09200 391.57200 L
259.09200 385.81200 m
260.17200 385.30800 L
261.18000 384.44400 L
261.75600 383.36400 L
261.97200 382.28400 L
260.46000 378.54000 m
260.82000 380.48400 L
261.97200 382.28400 L
288.75600 376.16400 m
289.40400 376.59600 L
290.26800 376.81200 L
291.20400 376.66800 L
271.40400 415.90800 m
326.26800 400.57200 L
291.20400 376.66800 m
304.09200 391.57200 L
305.67600 394.59600 L
305.60400 397.76400 L
303.80400 400.71600 L
300.42000 403.23600 L
295.88400 405.03600 L
290.62800 405.97200 L
285.08400 405.97200 L
279.82800 404.96400 L
275.36400 403.09200 L
272.12400 400.57200 L
259.09200 385.81200 L
257.36400 382.78800 L
257.43600 379.54800 L
259.16400 376.52400 L
262.47600 373.93200 L
267.08400 372.06000 L
272.48400 371.12400 L
278.10000 371.12400 L
283.42800 372.13200 L
287.96400 374.07600 L
291.20400 376.66800 L
302.94000 373.35600 m
299.98800 370.54800 L
296.17200 368.10000 L
291.56400 366.15600 L
286.45200 364.64400 L
280.90800 363.78000 L
275.14800 363.42000 L
269.38800 363.78000 L
263.84400 364.64400 L
258.66000 366.15600 L
254.12400 368.17200 L
250.23600 370.62000 L
247.28400 373.35600 L
245.26800 376.45200 L
244.26000 379.62000 L
244.26000 382.93200 L
245.41200 386.10000 L
247.50000 389.12400 L
240.87600 378.32400 m
241.38000 375.08400 L
242.82000 371.98800 L
245.19600 368.96400 L
248.36400 366.22800 L
252.25200 363.85200 L
256.86000 361.90800 L
261.97200 360.39600 L
267.44400 359.38800 L
273.13200 358.88400 L
278.89200 358.95600 L
284.50800 359.60400 L
289.90800 360.75600 L
294.87600 362.41200 L
299.26800 364.50000 L
302.94000 367.02000 L
305.89200 369.82800 L
326.26800 400.57200 m
327.27600 399.92400 L
327.92400 398.70000 L
328.06800 397.18800 L
327.78000 395.46000 L
305.89200 369.82800 m
327.78000 395.46000 L
305.89200 369.82800 m
305.67600 370.90800 L
305.02800 371.98800 L
304.09200 372.78000 L
302.94000 373.35600 L
326.26800 400.57200 m
302.94000 373.35600 L
268.38000 414.68400 m
269.89200 415.76400 L
271.40400 415.90800 L
247.50000 389.12400 m
271.40400 415.90800 L
247.50000 389.12400 m
246.56400 389.19600 L
245.70000 389.05200 L
245.05200 388.62000 L
S

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel9Dict 9.0 0
%%EOF
