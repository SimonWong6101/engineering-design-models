%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{1 dict dup /PageSize [paperwidth paperheight]put setpagedevice}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 {1 dict dup /ManualFeed manualfeed put setpagedevice } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 4 FMDOCUMENT
0 0 /Times-Roman FMFONTDEFINE
1 0 /Times-Italic FMFONTDEFINE
2 0 /Times-Bold FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "15" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 0 0 0 1 1 1]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(9-15) 72 36 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(PTC Confidential) 270.58 36 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(PICKS) 512.22 36 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(CL DA) 108 712 T
(T) 142.33 712 T
(A / OPERA) 148.7 712 T
(TION / CHUCK_END / DONE CL /) 204.71 712 T
2 F
(mapkey "rr") 385.69 712 T
0 F
( / DONE-) 453.34 712 T
(RETURN) 108 698 T
({retrieve drawing to show changes in tool path views and bom}) 108 670 T
(MODE / DRA) 108 656 T
(WING / SEARCH/RETR / IN SESSION / SHAFT) 177.04 656 T
(.DR) 420.49 656 T
(W / SET MODEL /) 439.5 656 T
2 F
(mapkey "zz") 108 642 T
0 F
( / {zoom in on the BOM and the toolpath} / QUIT WINDOW /) 175.64 642 T
(CHANGEWINDOW / {change to the ????? window} / QUIT WINDOW /) 108 628 T
({retreive mold model to show changes}) 108 600 T
(MODE / MOLD / SEARCH/RETR / HOUSING_MOLD.MFG /) 108 586 T
2 F
(mapkey "ra") 421.67 586 T
0 F
( / ENVI-) 489.98 586 T
(RONMENT / NO HIDDEN / DONE-RETURN /) 108 572 T
({retrieve housing core manufacturing model to show changes}) 108 544 T
(MODE / MANUF) 108 530 T
(ACTURE / SEARCH/RETR / HOUSING_CORE_MFG.MFG /) 195.11 530 T
2 F
(map-) 505.46 530 T
(key "zz") 108 516 T
0 F
( / {zoom in on model} /) 152.98 516 T
2 F
(mapkey \322ra\323) 270.17 516 T
0 F
(/ DONE) 340.16 516 T
({output cl data to show change}) 108 488 T
(CL DA) 108 474 T
(T) 142.33 474 T
(A /) 148.7 474 T
2 F
(mapkey \322ncc\323) 166.7 474 T
0 F
( / CHANGE / DONE/RETURN / CONFIRM / DONE/) 239.7 474 T
(RETURN) 108 460 T
({retrieve drawing to show changes in tool path views and bom}) 108 432 T
(MODE / DRA) 108 418 T
(WING / SEARCH/RETR / DRILL_CORE_FIXTURE.DR) 177.04 418 T
(W / VIEWS /) 458.71 418 T
(DISP MODE / T) 108 404 T
(OOL P) 188.78 404 T
(A) 222.01 404 T
(TH / SHOW P) 229.34 404 T
(A) 298.57 404 T
(THS / SEL BY MENU / CORE_WORK.PR) 305.9 404 T
(T /) 518.2 404 T
(NAME / 10: VOLUME MILLING, OPERA) 108 390 T
(TION: OP010 /) 319.98 390 T
2 F
(mapkey "zz") 397.64 390 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "15" 1
%%Page: "14" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 0 0 0 1 1 1]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(9-14) 72 36 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(PTC Confidential) 270.58 36 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(PICKS) 512.22 36 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
(SYNCHRONIZE THE NC SEQUENCES) 72 698 T
0 F
({synchronize the two turning sequences}) 108 684 T
(SYNCHRONIZE / DONE / Area T) 108 670 T
(urning 1, Operation: CHUCK_END / DONE SEL /) 277.88 670 T
(#Area T) 108 656 T
(urning 2, Operation: CHUCK_END / DONE SEL / SYNCH POINTS / SYN-) 147.23 656 T
(CHRONIZE #1 / ADD /) 108 642 T
2 F
(mapkey \322zz\323) 228.32 642 T
0 F
( / {zoom in on tool path} / DONE-RETURN /) 294.65 642 T
({select on the toolpath for the position of sync point 1 see Figure 3} / {select on the tool-) 108 628 T
(path for the position of sync point 2 see Fig. 3} / DONE/REUTRN /) 108 614 T
2 F
(mapkey "rr") 438.08 614 T
(Figur) 284.61 367.67 T
(e 3) 313.06 367.67 T
0 F
(CL DA) 108 325.67 T
(T) 142.33 325.67 T
(A / OPERA) 148.7 325.67 T
(TION / CHUCK_END / TIME INCREMENT / .05 / DONE CL /) 204.71 325.67 T
(DONE OUTPUT /) 108 311.67 T
2 F
(mapkey "rr") 200.99 311.67 T
0 F
( / DONE/RETURN) 268.63 311.67 T
2 F
(BIG CHANGE OF DRILL T) 72 283.67 T
(O COMMERCIAL SPECIFICA) 221.14 283.67 T
(TIONS) 387.58 283.67 T
0 F
({regenerate drill assembly for design change}) 108 269.67 T
-0.11 (ASSEMBL) 108 255.67 P
-0.11 (Y / SEARCH/RETR / DRILL.ASM /) 162.14 255.67 P
2 F
-0.11 (mapkey "sd") 343.82 255.67 P
0 F
-0.11 ( /) 412.03 255.67 P
2 F
-0.11 (mapkey "ra") 421.14 255.67 P
0 F
-0.11 ( / ENTER) 489.34 255.67 P
(/ MOT) 108 241.67 T
(OR_TYPE / DONE /) 140.78 241.67 T
2 F
(2) 245.45 241.67 T
0 F
( / QUIT WINDOW) 251.45 241.67 T
({retreive drill assembly into sub window}) 108 213.67 T
(P) 108 199.67 T
(AR) 113.57 199.67 T
(T / CREA) 129.52 199.67 T
(TE / {return} / MODE / ASSEMBL) 176.86 199.67 T
(Y / RETRIEVE / {return} /) 349.18 199.67 T
2 F
(mapkey) 484.02 199.67 T
("zz") 108 185.67 T
0 F
( / {zoom in on the drill} /) 131.98 185.67 T
2 F
(mapkey "sd") 256.84 185.67 T
0 F
({retreive shaft manufacturing model}) 108 157.67 T
-0.02 (MODE / MANUF) 108 143.67 P
-0.02 (ACTURE / SEARCH/RETR / SHAFT) 195.07 143.67 P
-0.02 (.MFG / VIEW / NAMES / SIDE) 380.13 143.67 P
(/) 108 129.67 T
2 F
(mapkey \322sd\323) 114.34 129.67 T
0 F
( / PROGRAM / EDIT DESIGN / FROM FILE / {show Pro/Program and) 181.34 129.67 T
(exit = :wq} / {return} / CURRENT V) 108 115.67 T
(ALS / DONE /) 287.5 115.67 T
({output cl data to show change}) 108 87.67 T
72 72 540 720 C
192.48 391.67 419.52 582 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 X
0 0 0 1 0 0 0 K
%%BeginBinary:  12512    
896 756 219 207 0 201.48 391.67 BEGINBITMAPBWc
































































































































J,
OHFBB83EF8FEFFFBBE7BD81FJ%8%
OIBBFEFB7EBDBBDBFFJ#8":$
OFFBFDFCBBBB9BJ#8$9"
OFFDFBFD7BBED9J#=$
OFFEF7B7D95BJ.
OFFF6FF838FB7BDEFFF837D9587FJz(:&
O21DD800000001FFBBBFBB7D95BFFJS"c&8$8$
O2F8FFFFFFFF9FF87BBEBBDADBJ#b"S:"8$9"
O1FEC00F6FFBBB3E9AJ"c"SA#8$8#
O)FC7FFEF7F7BB7EBDBBJ"b"TI.
O!E007FDFBFBB837B8FEF83BBE7BD81FJc"SJ#V
G3F<FBFDJ"b"TE"J#
>F001FE4FFFFJ&SJ"
:C00000001F8FFJP
:J"
:DFJ"
O1FEJ"J"
:FFDFFJ"
:DF
J"J"
:FFDFEJ"J"
:DFDFF
J"
:FFJ"J"
:DFDFEJ"
O1FF
J"
:FFJ"J"
:DFDFEJ"
O1FF
J"
:FFJ"J"
:DFDFEJ"
O1FF
J"
:FFJ"J"
:DFDFEJ"
O1FF

J"J"
:FFDFEJ"J"
:DFDFF

J"
O1FEJ"
O1FFJ"
:FFJ"
:DFJ"
O1FEJ"
O1FF

J"J"
:FFDFEJ"J"
:DFDFF

J"
O1FEJ"
O1FFJ"
:FFJ"
:DFJ"
O1FEJ"
O1FF

J"J"
:FFDFEJ"J"
:DFDFF

J"
O1FEJ"
O1FFJ"
:FFJ"
:DFJ"
O1FEJ"
O1FF

J"J"
:FFDFEJ"J"
:DFDFF

J"
O1FEJ"
O1FFJ"
:FFJ"
:DFJ"
O1FEJ"
O1FF

J"J"
:FFDFEJ"J"
:DFDFF

J"
O1FEJ"
O1FFJ"
:FFJ"
:DFJ"j
:DCEJ"Z"
:DFDFEJ"J"
:DDBEFz#J$
9AAABFDBFFFFFFZ#J$
9FDDFBEFFFFEJ#
9FFDDJ"J"
9FDCFFJ#J"
9FFDFBEFJ#
9FDFDJ#J$
9FFDDBFFFFFFJ#J$
9FDDFBEFFFFEJ#
9FFDDJ5
9GFDDC49249249249249249249249249249249249249249249249249249249249249249248124924JZ$
9DEFFFFEJ#J"
9FDDDDFFJ"J"
9FFEFEJ"J"
9FDCFFJ#J"
9FFFDBEFJ#
9FDDFJ#
9FFDDJ#j%
9FDDCA22480009J#Z$
9FFDFBEFFFFEJ#
9FDFDJ#J"
9FFDFBFFJ#z&
9FDDC@555488055522J#Z$
9FFDDBEFFFFEJ#
9FDDFJ#
9FFDDJ#J"
9FDFDDFFJ#J$
9FFDDBFFFFFEJ"J"
9FDCEFJ"
9FFJ#j%
9FDFDA24900002J#Z$
9FFDFBEFFFFEJ"J";"
9FD=FDFFJ#J";"
9FFFF<FFEFJ#z#="
9FDC4;AAFFFDFFJZ"<$
9=BFFFFFFEJ"J#;"
9FD<EFFFEFJ#
O(FFFDJ"z"<"
9FF<55FBFFJ%z$;"
9FDFFFFFE8AAAB7DFFEFJ%Z$="
9FFDFFFFD8FB7EFDFFJ%J$;$
9FDFFFFFF8FF7F7DFFFFFEJ%J,
9FFDFFFFD8FABFBD2492492000012488J%J,
9FDFFFFFF8FEDFDFFFE9108555548822J%J,
9FFDFFFFD8FB6FEFFFEFFFFFFFEFFFFEJ#J$
9FDFF:FEF7F7J%J$
9FFDFFFFF8FAFBFBJ%J$="
9FDFFFFFD8FF7DFDFFJ%J&9$
9FFDFFFFF8FAFEFEFFFFFFFFFEJ%J&9"
9FDFFFFFD8FEFF7F7FEFEFJ%J%
9FFDFFFFF8FB7FBFBF7"z%J%
D575554AAAAA98FEFFDFDF7"Z$J%
BF8DFFFFF8FB7FEFEF7"J%J%<"
FF7FDFFFFFD8FEFFF7F7FF7"J%J$9$
BF7FFDFFFFF:FBF7FFFFFFFE7"J%J,
FF7FDFFFFFD8FB7FFDFBE00000008000107"J%J%Q"
BF7FFDFFFFF8FEFFFEFDFE7"J%J'8"
FF7FDFFFFFD8FB7FFF7EFFFEEF7"J%J':"
BF7FFDFFFFF8FEFFFFBF7FFFFF7"J%J'8$
FF7FDFFFFFD8FB7FFFDFFFFEFFFFFE7"J%J&9"
BF7FFDFFFFF8FEFFFFEFDFEF7"J%J'
FF7FDFFFFFD8FB7FFFF7FFFF7"J%J'8"
BF7FFDFFFFF8FEFFFFFAF7FEFF7"J%J&9"
7F7FDFFFFFD8FB7FFFFFFFEF#J%J':"
FDBF7FFDFFFFF8FEFFFFFEBDFFFF#J%J'8$
F5FF7FDFFFFFD8FB7FFFFFFEFEFFFFFE#J%J#8#8"
DFBF7FFDFFFFF8FEFFAF7EEF#J%J#8(
7DFF7FDFFFFFD8FB7FFFBF2440092444#J%J#8(
FFBF7FFDFFFFF8FEFFEFDFFFFFEFFFFE#J%J#8%8"
FDFF7FDFFFFFD8FB7FF7EFFFF7FF#J%J#8%8"
FFBF7FFDFFFFF8FEFFFBF7FFFFFE#J%J#8&
FDFF7FDFFFFFD8FB7FFDFBFFF7FF#J%J#8#8"
FFBF7FFDFFFFF8FEFFFEFDEF#J%C#?#8%
FDFF7FDFFFFFDFEABFB7FFF7EFFFF#J%C$>#9$
FFBF7FFDFFFFFABFD5FFEFFBF7FF7#J%B%>#9#9"
FDFF7FDFFFFFDFAFFFFF5FB7FDFBFFF#J%B"8#=#9#9"
FFBF7FFDFFFFFEFFF7FFEFFEFDFFE#J%B"9"=#9%
FDFF7FDFFFFFDBFEFFB7FF7EFFFFF7"J%A#9"=#9%
BF7FFDFFFFFFEFFF7FEFFFBF7F7EF#J%A":"=#9#
FFFF7FDFFFFFDFBFDFB7FFDFB#J%A":"=#:&
FDBF7FFDFFFFFFFFFFEFFFDF9100002#J%A";"<#9'
FFFF7FDFFFFFDEFBFFB7FFFFEFFEFFFFE#J%A";"<#9%
FDBF7FFDFFFFFBFFFFEFFFDFF7FFF#J%A";"<#;#
FFFF7FDFFFFFDFFEFFB7FBFEF#J%@"<"<#9$8"
FDBF7FFDFFFFFFEFFFEFFFFFFDFFF#J%@"<"<#9'
FFFF7FDFFFFFDFFF7FB7FFDFFEFFFFFFE#J%@"<"<#;#
FDBF7FFDFFFFFFDFFFEFFF7EF#J%@"<"<#9'
FFFF7FDFFFFFDFFFDFB7FFFFFFBE55524#J%@"<"<#9'
FDBF7FFDFFFFFFBFFFEFFFDFFFCFFFFFE7"J%@"<"<#;%
FF7FDFFFFFDFFFEFB7FFF7FFFFF#J%@"<"<#9"8$
FFBF7FFDFFFFFF7FFFEFFFFBFFFFE#J%@"<"<#9"8$
FDFF7FDFFFFFDFFFEFB7FFDE00000#J%@"<"<#9"8$
FFBF7FFDFFFFFEFFFFEFFFFFFFFFF#J%@"=";#9"
FDFF7FDFFFFFDFF7FFB7FFD#J%@"=";#
FFBF7FFDFFFFFEFFFFEFF#J%@"=";#9"8"
FDFF7FDFFFFFDFF7FFB7FFF5B#J%@"=";#9"8"
FFBF7FFDFFFFFEFFFFEFFFDFE#J%@"=";#9"8"
FDFF7FDFFFFFDFFBFFB7FFF7F#J%@"=";#9"8"
FFBF7FFDFFFFFDFFFFEFFFDFF#J%@"=";#9"8"
FDFF7FDFFFFFDFFBFFB7FFF7E#J%@"=";#9"8"
FFBF7FFDFFFFFCF7FFEFFFDFF#J%@"=";#<"
FDFF7FDFFFFFDFFBFFB7F7E7"J%@"8#9";#9"8"
BF7FFDFFFFFCFFD557FFEFFFFFF#J%@"8$8";#9"8"
FFFF7FDFFFFFDFF57FEAFBFFB7FFD7F#J%@'8";#9"8"
FDBF7FFDFFFFFCFFFFDFFFFF77FFEFFFFFE#J%@$8"8";#9"8"
FFFF7FDFFFFFDFFFFF7FEBFFB7FFD7F#J%@$8%;#<"
FDBF7FFDFFFFFD7FFDFFF7FFEFFFEFFFE#J%@$9$;#9"8"
FFFF7FDFFFFFDFFFF7FEFFFBFFB7FFF7F#J%@$9$;#9"8"
FDBF7FFDFFFFFD7FFFFF7FEFFFEFFFDFE#J%@#:$;#9"8"
FFFF7FDFFFFFDFBFDFEFFBFFB7FFF7F#J%:/w8"
FDBF7FFDFFFFFFEAAAAAAAAAA96A95555555554A955FE#J%:Q#P#P"P8"
FFFF7FDFFFFFDFDEFBFBFFA7F#J%:";#;#;#9"8"
FDBF7FFDFFFFFFEDFFFF7FFFF7FFDFE7"J%:";#;#;#<"
FF7FDFFFFFDFFFEBFDFBFFAFF7F#J%:";#;#;#9"8"
FFBF7FFDFFFFFFEDF7FEFFFFF7FFFFE#J%:";#;#;#9"8"
FDFF7FDFFFFFDFFFFBFDFBFFAFFFD7F#J%:";#;#;#9"8"
FFBF7FFDFFFFFFEDFDFF7FFFF7FFFFE#J%:";#;#;#9"8"
FDFF7FDFFFFFDFFFDFFFFBFFAFFFD7F#J%:";#:$;#9"8"
FFBF7FFDFFFFFFEDFF7FEFBFFFF7FFFFE#J%:";#:$;#9"8"
FDFF7FDFFFFFDFFFBFFFFFFBFFAFFFD7F#J%:";#:$;#9"8"
FFBF7FFDFFFFFFEDFFDFBFEFFFF7FFFFE#J%:";$9$;#9"8"
FDFF7FDFFFFFDFFD7FF7FEFFFBFFAFFFD7F#J%:";$9$;#9"8"
FFBF7FFDFFFFFFEFFFFFFFFFF7FFF7FFFFE#J%:";$9$;#9"8"
FDFF7FDFFFFFDFFCFFFDFBFFFBFFAFFFD7F#J%:";$8%;#9"8#
FFBF7FFDFFFFFFEDFFFF7FEFFFF7FFF7FFFFA7F#J%:";'8";#9"8"
FDFF7FDFFFFFDFFEFFFFD7FFFEBBFFAFFFD7B7"J%:";'8";#9"8#
BF7FFDFFFFFFEDFFFFFD5FEBFFFFF7FFFFCFF#J%:";"8$8";#9"8"
FFFF7FDFFFFFDFFFFFEABFFBFFAFFFD7D#J%:";"8#9";#9"8"
FDBF7FFDFFFFFFEDFFFFFFFFF7FFFFC#J%:";"=";#9"8"
FFFF7FDFFFFFDFFFFBFFAFFFD7D#J%:";"=";#9"8#
FDBF7FFDFFFFFFEDFFFFF7FFFFA7F#J%:";"=";#9"8"
FFFF7FDFFFFFDFFFFBFFAFFFD7B#J%:";"=";#9"8#
FDBF7FFDFFFFFFEDFFFFF7FFFFEFF#J%:";"=";#9"8"
FFFF7FDFFFFFDFFEF7FFAFFFD7F#J%:";"=";#9"8"
FDBF7FFDFFFFFFEFFFFFF7FFFFE#J%:";"=";#9"8"
FFFF7FDFFFFFDFFEF7FFAFFFD7F#J%:";"=";#9"8"
FDBF7FFDFFFFFFEFFFFFF7FFFFE7"J%:";"<"<#9"8"
FF7FDFFFFFDFFF7FEFAFFFD7F#J%:";"<"<#9"8"
FFBF7FFDFFFFFFEFFFFFF7FFFFE#J%:";"<"<#9"8"
FDFF7FDFFFFFDFFFBFDFAFFFD7F#J%:";"<"<#9"8'
FFBF7FFDFFFFFFEFFFFFF7FFFFEFFBDF7F3DD#J%:";"<"<#9"8"9"
FDFF7FDFFFFFDFFFDFBFAFFFD7FED#J%:";"<"<#9"8&
FFBF7FFDFFFFFFEFFFFFF7FFFFEFF99EBDD#J%:";"<"<#9"8"9"
FDFF7FDFFFFFDFFFEF7FAFFFD7FDF#J%:";"<"<#9"8"9"
FFBF7FFDFFFFFFEFFFFFF7FFFFEBF#J%:"<";"<#9"8'
FDFF7FDFFFFFDFFBFDFFAFFFD7FFFA9DBBFC1#J%:"<";"<#9"8'
FFBF7FFDFFFFFFEFFFFFF7FFFFEFFA5DDBFDD#J%:"<";"<#9"8&
FDFF7FDFFFFFDFFEFBFFAFFFD7FFFB5C1DF#J%:"<";"<#9"8"8#
FFBF7FFDFFFFFFEFFFFFF7FFFFEDDDD#J%:"<":"=#9"8&
FDFF7FDFFFFFDFFFDFEFAFFFD7FFFBDBEED7"J%:"<":"=#9"8"9"
BF7FFDFFFFFFEFFFBFF7FFFFEF3#J%:"="9"=#9"8"P
FFFF7FDFFFFFDFFBFEFFAFFFD7F#J%:"="9"=#9"8"
FDBF7FFDFFFFFFEDFBFFF7FFFFE#J%:"="8#=#9"8"
FFFF7FDFFFFFDFFFBFEFFFAFFFD7F#J%:"="8">#9"8"
FDBF7FFDFFFFFFEFDFBFF7FFFFE#J%:"=%>#9"8#8"
FFFF7FDFFFFFDFFFF2BFEAFFAFFFD7BBFF0#J%:">$>#9"8"9"
FDBF7FFDFFFFFFEFEABFFFF7FFFFAFE#J%:">#?#9%j"
FFFF7FDFFFFFDFFFFFFFAFF0000000171F#J%:"I#9)Z"
FDBF7FFDFFFFFFEFF7FFFFFFDFD7FFFFFFD3DF#J%:"I#9&8"
FFFF7FDFFFFFDFFFAFFFDDFFDFC77FB#J%:"I#9&J"
FDBF7FFDFFFFFFEFF7FFFDFFF7FFF6FF7"J%:"I#9&8"I"
FF7FDFFFFFDFFFAFFFDFFFDFEF7F7DF#J%:"I#9%9"
FFBF7FFDFFFFFFEFF7FFFDFFD7FF0#J%:"I#9"8#8"
FDFF7FDFFFFFDFFFAFFFDFCFFFF#J%:"I#9&
FFBF7FFDFFFFFFEFF7FFFFFFF7DF7#J%:"I#9%
FDFF7FDFFFFFDFFFAFFFDDFFDFA#J%:"I#9"8#J"
FFBF7FFDFFFFFFEFF7FFF73FF6FF#J%:"I#9&J"
FDFF7FDFFFFFDFFFAFFFDFFFDFEF76DF#J%:"I#9%
FFBF7FFDFFFFFFEFF7FFFDFFF7F#J%:"I#9%
FDFF7FDFFFFFDFFFAFFFDDFFDFE#J%:"I#9"8#
FFBF7FFDFFFFFFEFF7FFF7FFF#J%:"I#9&
FDFF7FDFFFFFDFFFAFFFDFFFDFEF7#J%:"I#9%J"
FFBF7FFDFFFFFFEFF7FFFDFFD7F7FF#J%:"I#9"8"J"
FDFF7FDFFFFFDFFFAFFFDFE7DF7"J%:"I#9&
BF7FFDFFFFFFEFF7FFFDFFF7FFF#J%:"I#9&
FFFF7FDFFFFFDFFFAFFFDDFFDFEF7#J%:"I#9%
FDBF7FFDFFFFFFEFF7FFFFFFD7F#J%:"I#9%
FFFF7FDFFFFFDFFFAFFFDDFFDFE#J%:"I#9"8#J"
FDBF7FFDFFFFFFEFF7FFF7FFF6FF#J%:"I#9"8#J"
FFFF7FDFFFFFDFFFAFFFDFEF76DF#J%:"I#9%
FDBF7FFDFFFFFFEFF7FFFDFFF7F#J%:"I#9%
FFFF7FDFFFFFDFFFAFFFDDFFDFE#J%:"I#9%
FDBF7FFDFFFFFFEFF7FFFFFFD7F#J%:"I#9&
FFFF7FDFFFFFDFFFAFFFDDFFDFEFF#J%:"I#9"8#J"
FDBF7FFDFFFFFFEFF7FFF7FF76FF7"J%:"I#9"8"J"
FF7FDFFFFFDFFFAFFFDFE7DF#J%:"I#9%
FFBF7FFDFFFFFFEFF7FFFDFFF7F#J%:"I#9%
FDFF7FDFFFFFDFFFAFFFDDFFDFE#J%:"I#9%
FFBF7FFDFFFFFFEFF7FFFFFFD7F#J%:"I#9&
FDFF7FDFFFFFDFFFAFFFDDFFDFEFF#J%:"I#9"8#J"
FFBF7FFDFFFFFFEFF7FFF7FF76FF#J%:"I#9"8"J"
FDFF7FDFFFFFDFFFAFFFDFE7DF#J%:"I#9%
FFBF7FFDFFFFFFEFF7FFFDFFF7F#J%:"I#9%
FDFF7FDFFFFFDFFFAFFFDDFFDFE#J%:"I#9%
FFBF7FFDFFFFFFEFF7FFFFFFD7F#J%:"I#9&
FDFF7FDFFFFFDFFFAFFFDDFFDFEFF#J%:"I#9"8#J"
FFBF7FFDFFFFFFEFF7FFF7FF76FF#J%:"I#9"8"J"
FDFF7FDFFFFFDFFFAFFFDFE7DF7"J%:"I#9%
BF7FFDFFFFFFEFF7FFFDFFF7F#J%:"I#9%
FFFF7FDFFFFFDFFFAFFFDDFFDFE#J%:"I#9%
FDBF7FFDFFFFFFEFF7FFFFFFD7F#J%:"I#9&
FFFF7FDFFFFFDFFFAFFFDDFFDFEFF#J%:"I#9"8#J"
FDBF7FFDFFFFFFEFF7FFF7FF76FF#J%:"I#9"8"J"
FFFF7FDFFFFFDFFFAFFFDFE7DF#J%:"z%
FDBF7FFDFFFFFFE8AAABDFFF7F#J%:Z*
FFFF7FDFFFFFD4FB7FFFFFFFFDDFFDFE#J%J#9%
FDBF7FFDFFFFF8FEFFFFFFFD7F#J%J#9&
FFFF7FDFFFFFD8FB7FFDDFFDFEFF#J%J#9"8#J"
FDBF7FFDFFFFF8FEFFFF7FF76FF7"J%J#9"8"J"
FF7FDFFFFFD8FB7FFDFE7DF#J%J#9%
FFBF7FFDFFFFF8FEFFFFDFFF7F#J%J#9%
FDFF7FDFFFFFD8FB7FFDDFFDFE#J%J#9%
FFBF7FFDFFFFF8FEFFFFFFFD7F#J%@"r";#9&
FDFF7FDFFFFFDEAAABFFB7FFDDFFDFEFF#J%@"S;#9"8#J"
FFBF7FFDFFFFFDFFEFFFF7FF76FF#J%@"=";#9"8"J"
FDFF7FDFFFFFDFFBFFB7FFDFE7DF#J%@"=";#9%
FFBF7FFDFFFFFDFFFFEFFFFDFFF7F#J%@"=";#9%
FDFF7FDFFFFFDFFBFFB7FFDDFFDFE#J%@"=";#9%
FFBF7FFDFFFFFDFFFFEFFFFFFFD7F#J%@"=";#9&
FDFF7FDFFFFFDFFBFFB7FFDDFFDAAFF#J%@"=";#9"8#J"
FFBF7FFDFFFFFDFFFFEFFFFFFF76FF#J%@"=";#9"J"
FDFF7FDFFFFFDFFBFFB7FFD:DF7"J%@"=";#9"
BF7FFDFFFFFDFFFFEFFFF#J%@"=";#9"
FFFF7FDFFFFFDFFBFFB7FFD#J%@"=";#9$
FDBF7FFDFFFFFDFFFFEFFFFFFED#J%@"=";#9&
FFFF7FDFFFFFDFFBFFB7FFDDFFDFFFF#J%@"=";#9&J"
FDBF7FFDFFFFFDFFFFEFFFFDFBDFFF76FF#J%@"=";#9$J"
FFFF7FDFFFFFDFFBFFB7FFDDFFF8DF#J%@"=";#9$
FDBF7FFDFFFFFDFFFFEFFFFDEFD#J%@"=";#9#
FFFF7FDFFFFFDFFBFFB7FFDDF#J%@"=";#9#
FDBF7FFDFFFFFDFFFFEFFFFFB#J%@"=";#9#8"
FFFF7FDFFFFFDFFBFFB7FFDDFFF#J%@"=";#9#8"J"
FDBF7FFDFFFFFDFFFFEFFFFCFF76FF7"J%@"=";#9$J"
FF7FDFFFFFDFFBFFB7FFDFFFF8DF#J%@"=";#9$
FFBF7FFDFFFFFDFFFFEFFFF9FFD#J%@"=";#9#
FDFF7FDFFFFFDFFBFFB7FFDDF#J%@"=";#
FFBF7FFDFFFFFDFFFFEFF#J%@"=";#9"9"
FDFF7FDFFFFFDFFBFFB7FFBFF#J%@"=";#9#8"J"
FFBF7FFDFFFFFDFFFFEFFF7FFF76FF#J%@"=";#9$J"
FDFF7FDFFFFFDFFBFFB7FEFDFFF8DF#J%@"=";#9$
FFBF7FFDFFFFFDFFFFEFFDFDFFD#J%@"=";#9"
FDFF7FDFFFFFDFFBFFB7FBF#J%@"=";#9"
FFBF7FFDFFFFFDFFFFEFF7F#J%@"=";#8#9"
FDFF7FDFFFFFDFFBFFB7FFEFFFF#J%@"=";#8$8"J"
FFBF7FFDFFFFFDFFFFEFFFDFFFFF76FF#J%@"=";#8%J"
FDFF7FDFFFFFDFFBFFB7FFBFFDFFF8DF7"J%@"=";#8(
BF7FFDFFFFFDFFFFEFFF7FFC010000800#J%@"=";#8"Q
BFFF7FDFFFFFDFFBFFB7FEF#J%@"=";#8"<"
DDBF7FFDFFFFFDFFFFEFFDFBF#J%@"=";#8"<"
FBFF7FDFFFFFDFFBFFB7FBFFF#J%@"=";#8"J"
FEBF7FFDFFFFFDFFFFEFF7F;FF#J%@"=";&J"
FF7F7FDFFFFFDFFBFFB7FFFFEFF;DF7"J%@"=";%="
BF7FFDFFFFFDFFFFEFFFFFDBF7"J%@"=";%="
FF7FDFFFFFDFFBFFB7FFFFBFF7"J%@"=";%
BF7FFDFFFFFDFFFFEFFFFF77"J%@"=";%
FF7FDFFFFFDFFBFFB7FFFEF7"J%@"=";#?"J"
BF7FFDFFFFFDFFFFEFFBF4FF7"J%@"=";%="J"
FF7FDFFFFFDFFBFFB7FFF5FFF4DF7"J%@"=";%
BF7FFDFFFFFDFFFFEFFFFFF7"J%@"=";%
FF7FDFFFFFDFFBFFB7FFD7F7"J%@"=";%="
BF7FFDFFFFFDFFFFEFFFFFFBF7"J%@"=";$>"
FF7FDFFFFFDFFBFFB7FF5FF7"J%@"=";$J"
BF7FFDFFFFFDFFFFEFFFF=FF7"z%@"=";$J"
D575554AAAAA9FFBFFB7FD7=DF7Z$@"=";$>"
9DFFFFFDFFFFEFFFFBFJ%@"=";$>"
9FDFFFFFDFFBFFB7F5FFFJ%@"=";$
9FFDFFFFFDFFFFEFFFFJ%@"=";$
9FDFFFFFDFFBFFB7D7FJ%@"=";$>"J"
9FFDFFFFFDFFFFEFFFFBF4FFJ%@"=";#?"J"
9FDFFFFFDFFBFFB75FF4DFJ%@"=";#
9FFDFFFFFDFFFFEFFJ%@"8$8";#
9FDFFFFFDFF555557BFFB57J%@*<"?"
9FFDFFFFFDFFF55FFFFFD5FFFFF7FBFJ%@$8%;#?"
9FDFFFFFDFFF5FFFFF57FBFFEDFFFJ%@#:$;#J"
9FFDFFFFFDD5FFFD7FFFB7F>FFJ%u#;)J"
9FDFFFFFE5557FFFC95555555555555?DFJ%@r*?"
9FFCAAAA95556AAAAAAAAAAAAABFFBFJ#Z@"
9FD7F;FFJ"
:FFJ"
9FFJ"J"J"
9FDFBF4FFJ"J"J"
9FFFFF4DFJ"
9FDJ"
9FFJ"J"
9FDFBFJ"J"
9FFFFFJ"J"
9FDO-FFJ"J"
9FFO-DFJ"J"
9FDFBFJ"J"
9FFFFFJ"
9FDJ"
9FFJ"J"J"
9FDFBF4FFJ"J"J"
9FFFFF4DFJ"
9FDJ"
9FFJ"J"
9FDFBFJ"J"
9FFFFFJ"J"
9FDO-FFJ"J"
9FFO-DFJ"J"
9FDFBFJ"J"
9FFFFFJ"
9FDJ"
9FFJ"J"J"
9FDFBF4FFJ"J"J"
9FFFFF4DFJ"
9FDJ"
9FFJ"J"
9FDFBFJ"J"
9FFFFFJ"J"
9FDO-FFJ"J"
9FFO-DFJ"J"
9FDFBFz"J"
9AAABFFFZ
:
J"J"
O2BF4FFJ"J"
O2FF4DF

J"
O2BFJ"
O2FFJ"
OGFFJ"
OGDFJ"
O2BFJ"
O2FF

J"J"
O2BF4FFJ"J"
O2FF4DF

J"
O2BFJ"
O2FFJ"
OGFFJ"
OGDFJ"
O2BFJ"
O2FF

J"J"
O2BF4FFJ"J"
O2FF4DF

J"
O2BFJ"
O2FFJ"
OGFFJ"
OGDFJ"
O2BFJ"
O2FF

J"J"
O2BF4FFJ"J"
O2FF4DF

J"
O2BFJ"
O2FFJ"
OGFFJ"
OGDFJ"
O2BFJ"
O2FF

J"J"
O2BF4FFJ"J"
O2FF4DF

J"
O2BFJ"
O2FFJ"
OGFFJ"
OGDFJ"
O2BFJ"
O2FF

J"J"
O2BF4FFJ"J"
O2FF4DF

J"
O2BFJ"
O2FFJ"
OGFFJ"
OGDFJ"
O2BFJ"
O2FF

J"J"
O2BF4FFJ"J"
O2FF4DF

J"
O2BFJ"
O2FFJ"
OGFFJ"
OGDFJ"
O2BFJ"
O2FF

J"J-
O2BF4FFFBB83EF8FE7FFBBE7BD81FJ"J-
O2FF4DFFBBBFEFB7DBFFBBDBBDBFFJ#8$8$
OFFBDDFCFB7BBBBB9BJ#8$9"
OFFDDBFD7BBFD9J"I#=$
O2BFFED7B7D95BJ"I.
O2FFFF4FF838FB7BDF7FF837D9587FJz$8(
O25DDBFFBBBDEFFFBB7D95BFFJZ"8$8$
O259FF87BBDBBDADBJ"8$9"
OG6FFBBB3D9AJ#8$8#
OFFEF7F7BB7BBDBBJ.
OFFDFBFBB837B8F8383BBE7BD81FJ#V
OFFBFDJ#
OFFFFF





















































































































ENDBITMAP
%%EndBinary
361.89 424.54 367.73 425.92 366 420.17 363.94 422.36 4 Y
V
342.5 402.17 363.95 422.36 2 L
0.5 H
2 Z
N
314.52 509.41 318.75 513.67 320.32 507.88 317.42 508.64 4 Y
V
298.25 436.17 317.42 508.64 2 L
N
0 12 Q
(synch point 1) 233 431.42 T
0 10 Q
(\050highlight this leg\051) 276 410.67 T
348.13 424.42 354 425.67 352.15 419.96 350.14 422.19 4 Y
V
343.75 416.42 350.14 422.19 2 L
N
0 12 Q
(synch point 2) 276 398.67 T
72 72 540 720 C
0 0 612 792 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "14" 2
%%Page: "13" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 0 0 0 1 1 1]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(9-13) 72 36 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(PTC Confidential) 270.58 36 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(PICKS) 512.22 36 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
(Figur) 284.61 504.56 T
(e 2) 313.06 504.56 T
0 F
(DONE / DONE / PERPEND / DONE / DONE/RETURN /) 108 476.56 T
2 F
(mapkey \322rr\323) 392.65 476.56 T
0 F
( / {select) 458.98 476.56 T
(HEAD1_HOME as the start point} / PLA) 108 462.56 T
(Y P) 307.31 462.56 T
(A) 324.54 462.56 T
(TH / TIME INCREMENT / ENTER .05 /) 331.87 462.56 T
(DONE CL / DONE / ST) 108 448.56 T
(AR) 224.7 448.56 T
(T / SPECIFY / DONE / OFFSET PLANE /) 240.65 448.56 T
2 F
(mapkey \322vn\323) 451.67 448.56 T
0 F
( /) 520.01 448.56 T
-0.2 (ISO / {pick end face of workpiece as shown in Figure 2} / .03 /) 108 434.56 P
2 F
-0.2 (mapkey \322vn\323) 411.85 434.56 P
0 F
-0.2 ( / 2D / END) 479.99 434.56 P
-0.12 (/ SPECIFY / DONE / EXT LENGTH / .125 / DONE/RETURN /) 108 420.56 P
2 F
-0.12 (mapkey \322rr\323) 420.92 420.56 P
0 F
-0.12 ( / SEL BY) 487.13 420.56 P
(MENU / SEL BY MENU / SHAFT) 108 406.56 T
(.ASM / HEAD_1_HOME / PLA) 278.45 406.56 T
(Y P) 434.34 406.56 T
(A) 451.57 406.56 T
(TH / TIME) 458.9 406.56 T
(INCR / ENTER / .05 / DONE CL) 108 392.56 T
2 F
(MA) 72 364.56 T
(TERIAL REMOV) 91.1 364.56 T
(AL OF ROUGHING SEQUENCE) 184.56 364.56 T
(mapkey \322vn\323) 108 350.56 T
0 F
( / 2D / MA) 176.34 350.56 T
(TRL REMOVE / #1: Area T) 227.68 350.56 T
(urning, Operation: CHUCK_END /) 364.91 350.56 T
(DONE / AUT) 108 336.56 T
(O SEL / CONFIRM / DONE /) 175.1 336.56 T
2 F
(mapkey \322sd\323) 324.11 336.56 T
0 F
( / DONE-RETURN / QUIT) 391.12 336.56 T
(WINDOW /) 108 322.56 T
2 F
(PLACE T) 72 294.56 T
(OOLP) 123.46 294.56 T
(A) 156.58 294.56 T
(TH ON DRA) 164.35 294.56 T
(WING) 230.35 294.56 T
0 F
(DRA) 108 280.56 T
(WING / RETRIEVE / {return} / VIEWS / DISP MODE / T) 132.37 280.56 T
(OOL P) 419.32 280.56 T
(A) 452.54 280.56 T
(TH / SHOW) 459.88 280.56 T
(P) 108 266.56 T
(A) 113.57 266.56 T
(THS / {query select the material removal on the detailed view to place the toolpath} /) 120.9 266.56 T
2 F
(mapkey "rr") 108 252.56 T
0 F
( / DONE-RETURN / DONE/RETURN / QUIT WINDOW /) 175.64 252.56 T
2 F
(PLACE THE F) 72 224.56 T
(ACING UDF ON THE SHAFT) 150.46 224.56 T
0 F
(MANUF) 108 210.56 T
(ACTURE / RETRIEVE / {return} /) 150.44 210.56 T
2 F
(mapkey \322vn\323) 324.62 210.56 T
0 F
( / ZOOM / MACHINING /) 392.96 210.56 T
2 F
(mapkey \322gg\323) 108 196.56 T
0 F
( / face / DONE / DONE / DONE / {select HEAD2_HOME as the start) 175.67 196.56 T
(point} / {select the face of the part as the edge to cut, see Figure 2} / DONE/RETURN /) 108 182.56 T
(DONE / DONE/RETURN /) 108 168.56 T
2 F
(mapkey \322vn\323) 244.66 168.56 T
0 F
( / SIDE) 313 168.56 T
(CL DA) 108 140.56 T
(T) 142.33 140.56 T
(A / NC CHECK /) 148.7 140.56 T
2 F
(mapkey \322ck\323) 236.38 140.56 T
0 F
( / #2: Area T) 304.04 140.56 T
(urning, Operation: CHUCK_END /) 364.94 140.56 T
({return} / {hit the stop sign as soon as it appears}) 108 126.56 T
-0.1 (CLIP PLANE / MOVE PLANE / CLIP / FLIP / OKA) 108 98.56 P
-0.1 (Y / CONTINUOUS / CONTINUE /) 364.6 98.56 P
(DONE/RETURN / CONFIRM /) 108 84.56 T
2 F
(mapkey \322rr\323) 266 84.56 T
72 72 540 720 C
192.48 514.56 419.52 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 X
0 0 0 1 0 0 0 K
%%BeginBinary:  8142     
896 756 215.04 181.44 0 198.48 520.56 BEGINBITMAPBWc



















J"
O/FE








































J"
O/FF



J"
O/FEJ"
O/FF




J"
O/FEJ"
O/FF



J"
O/FE
















J"
O/FF
















J"
O/FE











J,
OHFBB83EF8FEFFFBBE7BD81FJ%8%
OIBBFEFB7EBDBBDBFFJ#8":$
OFFBFDFCBBBB9BJ#8$9"
OFFDFBFD7BBED9J#=$
OFFEF7B7D95BJ.
OFFF6FF838FB7BDEFFF837D9587FJ$:&
OG9FFBBBFBB7D95BFFJ$8$
OJF87BBEBBDADBJ"8$9"
OG6FFBBB3E9AJ#8$8#
OFFEF7F7BB7EBDBBJ.
OFFDFBFBB837B8FEF83BBE7BD81FJ#V
OFFBFDJ#
OFFFFF















J"
O/FF
















J"
O/FE
















J"
O/FF











J"
O/FEJ"
O/FF


J"
O/FE














z"
O/5554Z"
O/FE























J"
O/FF

J"
O/FEJ"
O/FFJ"
O/FEJ"
O/FFJ"
O/FEJ"
O/FFJ"
O/FEJ"
O/FFJ"
O/FEJ"z="
<FD955FFJZ"
=8FBJ"J#
<FF8FE7FJ"J#
<FD8FBFFJ"J#<"
<FF8FEDFFEJ"J#<"
<FD8FBFFFFJ"J#<"
<FF8FEF7FEJ"J#
<FD8FBFFJ"J#
<FF8FEFDJ"J#
<FD8FBFFJ"J$
<FF8FEFF7FJ"J$
<FD8FBFFFF7z"J$
;AAAB8FEFFDF7Z"J$
;FD8FBFFFF7"J"J$
BF:FF8FEFFF77"J"J$
FF:FD8FBFFFF7"J"J$
BF:FF8FEFFFD7"J"J$
FF:FD8FBFFFF7"J"J"8"
BF:FF8FE7F7"J"J"8"
FF:FD8FBFF7"J"J"8"
BF:FF8FEDF7"J"J"8"
FF:FD8FBFF7"J"J"8"
BF:FF8FEF77"J"J"8"
FF:FD8FBFF7"J"J"8":"
3F:FF8FEFDFF#J"J"8"
FDFF:FD8FBFF#J"J"9"
F5BF:FF8FE7F#J"J"9"
DFFF:FD8FBFF#J"J"9"
7DBF:FF8FEDF#J"J"9"9"
FFFF:FD8FBFFFE#J"J"9"9"
FDBF:FF8FEF7FF#J"J"9"
FFFF:FD8FBFF#J"J"9"
FDBF:FF8FEFD#J"J"9"
FFFF:FD8FBFF#J"C#?":"
FDBF:FFFEABFE7F#J"C$>":"
FFFF:FDABFD5FFBFF#J"B%>":"8"
FDBF:FFFAFFFFF5FEDFFE#J"B"8#=":"8"
FFFF:FDEFFF7FFBFFFF#J"B"9"=":"
FDBF:FFBFEFFEF77"J"A#9"=":"
FF:FDFEFFF7FBFF#J"A":"=":"
FFBF:FFFBFDFEFD#J"A":"=":"
FDFF:FDFFFFFBFF#J"A";"<":"8"
FFBF:FFEFBFFEFDFE#J"A";"<":"
FDFF:FDBFFFFBFF#J"A";"<":"
FFBF:FFFFEFFEFD#J"@"<"<":"
FDFF:FDFEFFFBFF#J"@"<"<":"
FFBF:FFFFF7FEFD#J"@"<"<":"
FDFF:FDFDFFFBFF#J"@"<"<":"
FFBF:FFFFFDFEFD#J"@"<"<":"
FDFF:FDFBFFFBFF#J"@"<"<":"
FFBF:FFFFFEFEFD#J"@"<"<":"
FDFF:FDF7FFFBFF#J"@"<"<":"
FFBF:FFFFFEFEFD#J"@"<"<":"
FDFF:FDEFFFFBFF#J"@"=";":"
FFBF:FFFF7FFEFD#J"@"=";":"
FDFF:FDEFFFFBFF#J"@"=";":"
FFBF:FFFF7FFEFD#J"@"=";":"
FDFF:FDEFFFFBFF#J"@"=";":"
FFBF:FFFFBFFEFD#J"@"=";":"
FDFF:FDDFFFFBFF#J"@"=";":"
FFBF:FFFFBFFEFD#J"@"=";":"
FDFF:FDCF7FFBFF#J"@"=";":"
FFBF:FFFFBFFEFD#J"@"8#9";":"
FDFF:FDCFFD557FFBFF#J"@"8$8";":"
FFBF:FFFF57FEAFBFFEFD#J"@'8";":"
FDFF:FDCFFFFDFFFFF77FFBFF#J"@$8"8";":"
FFBF:FFFFFFF7FEBFFEFD#J"@$8%;":"
FDFF:FDD7FFDFFF7FFEFFFBFF#J"@$9$;":"
FFBF:FFFFFF7FEFFFBFFEFD#J"@$9$;":"
FDFF:FDD7FFFFF7FEFFFBFF#J"@#:$;":"
FFBF:FFFBFDFEFFBFFEFD#J":5
FDFF:FD:FEAAAAAAAAAA96A95555555554A955555555555552AAAAAAAAAB#J":Q#P#P'
FFBF:FFFDEFBFBFFEFFFFFFFFFD#J":";#;#;":"
FDFF:FDFEDFFFF7FFFBFF#J":";#;#;":"
FFBF:FFFFFEBFDFBFFEFD#J":";#;#;":"
FDFF:FDFEDF7FEFFFFBFF#J":";#;#;":"
FFBF:FFFFFFBFDFBFFEFD#J":";#;#;":"
FDFF:FDFEDFDFF7FFFBFF#J":";#;#;":"
FFBF:FFFFFDFFFFBFFEFD#J":";#:$;":"
FDFF:FDFEDFF7FEFBFFFBFF#J":";#:$;":"
FFBF:FFFFFBFFFFFFBFFEFD#J":";#:$;":"
FDFF:FDFEDFFDFBFEFFFBFF#J":";$9$;":"
FFBF:FFFFD7FF7FEFFFBFFEFD#J":";$9$;":"
FDFF:FDFEFFFFFFFFFF7FFBFF#J":";$9$;":"8"
FFBF:FFFFCFFFDFBFFFBFFEFDFF#J":";$8%;":"8#
FDFF:FDFEDFFFF7FEFFFF7FFBFFFB7F#J":";'8";":"8"
FFBF:FFFFEFFFFD7FFFEBBFFEFDFA#J":";'8";":"8#
FDFF:FDFEDFFFFFD5FEBFFFFBFFFDFF#J":";"8$8";":"8"
FFBF:FFFFFFFEABFFBFFEFDFC#J":";"8#9";":"8"
FDFF:FDFEDFFFFFFFFBFFFD#J":";"=";":"8"
FFBF:FFFFFFBFFEFDFC#J":";"=";":"8#
FDFF:FDFEDFFFFBFFFB7F#J":";"=";":"8"
FFBF:FFFFFFBFFEFDFA#J":";"=";":"8#
FDFF:FDFEDFFFFBFFFFFF#J":";"=";":"8"
FFBF:FFFFEF7FFEFDFE#J":";"=";":"8"
FDFF:FDFEFFFFFBFFFF#J":";"=";":"
FFBF:FFFFEF7FFEFD#J":";"=";":"
FDFF:FDFEFFFFFBFF#J":";"<"<":"
FFBF:FFFFF7FEFEFD#J":";"<"<":"8"
FDFF:FDFEFFFFFBFFFE#J":";"<"<":"8"
FFBF:FFFFFBFDFEFDFF#J":";"<"<":":%
FDFF:FDFEFFFFFBFFBDF7F3DD#J":";"<"<":"8"9"
FFBF:FFFFFDFBFEFDFEED#J":";"<"<":":$
FDFF:FDFEFFFFFBFF99EBDD#J":";"<"<":"<"
FFBF:FFFFFEF7FEFDDF#J":";"<"<":"<"
FDFF:FDFEFFFFFBFFBF#J":"<";"<":":%
FFBF:FFFFBFDFFEFDA9DBBFC1#J":"<";"<":":%
FDFF:FDFEFFFFFBFFA5DDBFDD#J":"<";"<":":$
FFBF:FFFFEFBFFEFDB5C1DF#J":"<";"<":";#
FDFF:FDFEFFFFFBFFDDDD#J":"<":"=":":$
FFBF:FFFFFDFEFEFDBDBEED#J":"<":"=":"<"
FDFF:FDFEFFFBFBFFF3#J":"="9"=":":%
FFBF:FFFFBFEFFEFDFFFFFFFF#J":"="9"=":"
FDFF:FDFEDFBFFBFF#J":"="8#=":"
FFBF:FFFFFBFEFFFEFD#J":"="8">":"
FDFF:FDFEFDFBFBFF#J":"=%>":"8#8"
FFBF:FFFFFF2BFEAFFEFDFABFF0#J":">$>":"<"
FDFF:FDFEFEABFFFBFFFE7,8+8+8+8-`&8+8+8+8#
BFC0000000000FFFFC0000C0000000000FFFFC0000C0000000000FFFFC0000C0000000000FFFFC0000C0000000000FFFFC0000003E0FFFFC0000C0000000000FFFFC0000C0000000000FFFFC0000C0000000000FFFFC0000C001#U8U8$R8U81Q8U8U8U8#
FFBFFFFFFDFFFFFFFEFFFFFFFFFDFFFFFC7FFFFFFDFFFF#J":"I":"8"9"
FDFF:FFFEFBFFFDFB#J":"I":"8#
FFBF:FDFFFEFDFFFF"J":"I":"<"
FD;FFFEFBFFF7#J":"I":"<"
FFFF:FDFFFEFDF0#J":"I":"8"9"
FDBF:FFFEFBFFFDFF#J":"I":"
FFFF:FDFFFEFD#J":"I":"8"
FDBF:FFFEFBFFFA#J":"I":"8"
FFFF:FDFFFEFDF3#J":"I":"8"
FDBF:FFFEFBFFFF#J":"I":"
FFFF:FDFFFEFD#J":"I":"
FDBF:FFFEFBFF#J":"I":"
FFFF:FDFFFEFD#J":"I":"
FDBF:FFFEFBFF#J":"I":"8"
FFFF:FDFFFEFDFE#J":"I":"8"
FDBF:FFFEFBFFFF7"J":"I":"
FF:FDFFFEFD#J":"I":"8"
FFBF:FFFEFBFFFE#J":"I":"8"
FDFF:FDFFFEFDFF#J":"I":"8"
FFBF:FFFEFBFFFE#J":"I":"
FDFF:FDFFFEFD#J":"I":"
FFBF:FFFEFBFF#J":"I":"
FDFF:FDFFFEFD#J":"I":"
FFBF:FFFEFBFF#J":"I":"
FDFF:FDFFFEFD#J":"I":"
FFBF:FFFEFBFF#J":"I":"
FDFF:FDFFFEFD#J":"I":"
FFBF:FFFEFBFF#J":"I":"
FDFF:FDFFFEFD#J":"I":"
FFBF:FFFEFBFF#J":"I":"
FDFF:FDFFFEFD#J":"I":"
FFBF:FFFEFBFF#J":"I":"
FDFF:FDFFFEFD#J":"I":"
FFBF:FFFEFBFF#J":"I":"
FDFF:FDFFFEFD#J":"I":"
FFBF:FFFEFBFF#J":"I":"
FDFF:FDFFFEFD#J":"I":"
FFBF:FFFEFBFF#J":"I":"
FDFF:FDFFFEFD#J":"I":"
FFBF:FFFEFBFF#J":"I":"
FDFF:FDFFFEFD#J":"I":"
FFBF:FFFEFBFF#J":"I":"
FDFF:FDFFFEFD#J":"I":"
FFBF:FFFEFBFF#J":"I":"
FDFF:FDFFFEFD#J":"I":"
FFBF:FFFEFBFF#J";z&
FDFF:FD4AA5555555555#J":Z'
FFBF:FF4FBFFFFFFFFFD#J"J":"
FDFF:FD8FEFF#J"J":"
FFBF:FF8FBFD#J"J":"
FDFF:FD8FEFF#J"J":"
FFBF:FF8FBFD#J"J":"
FDFF:FD8FEFF#J"J":"
FFBF:FF8FBFD#J"J":"
FDFF:FD8FEFF#J"@"r";":"
FFBF:FFEAAABFFBFD#J"@"S;":"
FDFF:FDDFFEFF#J"@"=";":"
FFBF:FFFFBFFBFD#J"@"=";":"
FDFF:FDDFFFFEFF#J"@"=";":"
FFBF:FFFFBFFBFD#J"@"=";":"
FDFF:FDDFFFFEFF#J"@"=";":"8"
FFBF:FFFFBFFBFDFF#J"@"=";":"
FDFF:FDDFFFFEFF#J"@"=";":"
FFBF:FFFFBFFBFD#J"@"=";":"
FDFF:FDDFFFFEFF#J"@"=";":"
FFBF:FFFFBFFBFD#J"@"=";":"8"
FDFF:FDDFFFFEFFFE#J"@"=";":"8"
FFBF:FFFFBFFBFDFF#J"@"=";":"
FDFF:FDDFFFFEFF#J"@"=";":"
FFBF:FFFFBFFBFD#J"@"=";":"
FDFF:FDDFFFFEFF#J"@"=";":"
FFBF:FFFFBFFBFD#J"@"=";":"
FDFF:FDDFFFFEFF#J"@"=";":"8"
FFBF:FFFFBFFBFDFE#J"@"=";":"8"
FDFF:FDDFFFFEFFFF#J"@"=";":"
FFBF:FFFFBFFBFD#J"@"=";":"
FDFF:FDDFFFFEFF#J"@"=";":"
FFBF:FFFFBFFBFD#J"@"=";":"
FDFF:FDDFFFFEFF#J"@"=";":"8"
FFBF:FFFFBFFBFBFE#J"@"=";":"
FDFF:FDDFFFFEF7#J"@"=";":"
FFBF:FFFFBFFBFF#J"@"=";":"
FDFF:FDDFFFFEDF#J"@"=";":"
FFBF:FFFFBFFBFF#J"@"=";":"
FDFF:FDDFFFFE7F#J"@"=";":"
FFBF:FFFFBFFBFF#J"@"=";"9"
FDFF:FDDFFFFEFD#J"@"=";"9"
FFBF:FFFFBFFBFF#J"@"=";"9"
FDFF:FDDFFFFEF7#J"@"=";"9"
BFBF:FFFFBFFBEF#J"@"=";"9"
EDFF:FDDFFFFEFF#J"@"=";"9"
FBBF:FFFFBFFBBF#J"@"=";"9"
FEFF:FDDFFFFEFF#J"@"=";"8"
FFBF:FFFFBFFBFE7"J"@"=";"8"
FF:FDDFFFFEFF7"J"@"=";"8"
BF:FFFFBFFBFB7"J"@"=";"8"
FF:FDDFFFFEFF7"J"@"=";"8"
BF:FFFFBFFBEF7"J"@"=";"8":"
FF:FDDFFFFEBFFF7"J"@"=";"8":"
BF:FFFFBFFBFFFE7"J"@"=";$;"
FF:FDDFFFFEFFFEFF7"J"@"=";$;"
BF:FFFFBFFBFFFFFE7"J"@"=";$;"
FF:FDDFFFFEFFFBFF7"J"@"=";$;"
BF:FFFFBFFBFFFFFE7"J"@"=";$;"
FF:FDDFFFFEFFEFFF7z"@"=";$;"
;AAABFFBFFBFFFFFE7Z"@"=";$;"
;FDDFFFFEFFBFFFJ"@"=";$
<FFFFBFFBFFFFJ"@"=";#
<FDDFFFFEFEJ"@"=";#
<FFFFBFFBFFJ"@"=";#
<FDDFFFFEFBJ"@"=";#<"
<FFFFBFFBFFFEJ"@"=";#<"
<FDDFFFFEEFFFJ"@"8$8";#<"
<FFFF555557BFFBFFFEJ"@*;#<"
<FDDFFF55FFFFFD5FFFFFFEBFFFJ"@$8%;#<"
<FFFFF5FFFFF57FBFFAFFFEJ"@#:$;"
<FDDD5FFFD7FFFFJu#;)
=5557FFFD2AAAAAAAAAAAA9JW<S
<



































z"
O/5554Z"
O/FEJ"
O/FF




J"
O/FEJ"
O/FF




J"
O/FEJ"
O/FF


J"
O/FE
















J"
O/FF
















J"
O/FE





























J,
OHFBB83EF8FE7FFBBE7BD81FJ+
OIBBFEFB7DBFFBBDBBDBFFJ#8$8$
OFFBFDFCFB7BBBBB9BJ#8$9"
OFFDFBFD7BBFD9J#=$
OFFEF7B7D95BJ.
OFFF6FF838FB7BDF7FF837D9587FJ$8(
OG9FFBBBDEFFFBB7D95BFFJ$8$
OJF87BBDBBDADBJ"8$9"
OG6FFBBB3D9AJ#8$8#
OFFEF7F7BB7BBDBBJ.
OFFDFBFBB837B8F8383BBE7BD81FJ"J#V
O/FF6FBFDJ#
OFFFFF















J"
O/FE
















J"
O/FF











J"
O/FEJ"
O/FF


J"
O/FE








































J"
O/FF
















J"
O/FE




ENDBITMAP
%%EndBinary
0 10 Q
(turn pro\336le start) 327.48 683.18 T
(surface) 327.48 674.18 T
(turn pro\336le end) 210.48 683.18 T
(surface) 242.86 674.18 T
(select this edge) 345.48 584.17 T
(for the facing) 345.61 575.18 T
(UDF \050Seq #2\051) 345.48 566.17 T
316.51 639.32 307 632 311.18 643.25 313.84 641.29 4 Y
V
336.48 672 313.84 641.29 2 L
0.5 H
2 Z
N
288.06 650.46 289 638.5 281.86 648.15 284.96 649.31 4 Y
V
273.5 680 284.96 649.31 2 L
N
320.34 594.38 311.5 602.5 323.3 600.3 321.82 597.34 4 Y
V
343 586.75 321.82 597.34 2 L
N
(select this face) 347.38 647.18 T
(as the of) 347.51 638.19 T
(fset) 381.21 638.19 T
(plane for ends) 347.38 629.18 T
327.62 630.82 316.75 625.75 323.28 635.82 325.45 633.32 4 Y
V
325.46 633.32 343.5 649 2 L
N
72 72 540 720 C
0 0 612 792 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "13" 3
%%Page: "12" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 0 0 0 1 1 1]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(9-12) 72 36 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(PTC Confidential) 270.58 36 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(PICKS) 512.22 36 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
(Figur) 302.61 411 T
(e 1) 331.06 411 T
0 F
-0.08 (ADD VIEW / DONE / {select view 2 center point in the upper right corner of the screen}) 108 383 P
-0.14 (/ ADD VIEW / DET) 108 369 P
-0.14 (AILED / DONE / {select the detailed view center point in the bottom) 205.79 369 P
(center of the screen} / 2.5 / {select a center point and sketch a spline around the detailed) 108 355 T
(area} / a / {select the location of the note} / DONE/RETURN /) 108 341 T
(T) 108 313 T
(ABLE / BOM BALLOON / {select on the BOM table} / SHOW / {select on view 1} /) 114.37 313 T
(DONE/RETURN / {clean up drawing by moving balloons and their attach point to simu-) 108 299 T
(late Figure 1} / MOVE / MOD A) 108 285 T
(TT) 266.75 285 T
(ACH / CHANGE REF /) 280.45 285 T
2 F
(mapkey \322rr\323) 399.46 285 T
0 F
(/ DONE/) 468.78 285 T
(RETURN / QUIT WINDOW) 108 271 T
2 F
(ROUGH THE OUTER DIAMETER OF THE SHAFT) 72 243 T
0 F
-0.21 (MANUF) 108 229 P
-0.21 (ACTURE / SEARCH/RETR / SHAFT) 150.44 229 P
-0.21 (.MFG / VIEW / NAMES / 2D / MACHIN-) 334.72 229 P
(ING / OPERA) 108 215 T
(TION / CHUCK_END / ACTIV) 176.66 215 T
(A) 331.76 215 T
(TE / DONE OPER / DONE RETURN) 339.1 215 T
(NC SEQUENCE / #1: Area T) 108 187 T
(urning, Operation: CHUCK_END / ENDS / ST) 251.23 187 T
(AR) 478.6 187 T
(T /) 494.54 187 T
(DONE / SPECIFY T) 108 173 T
(OOL /) 208.79 173 T
2 F
(mapkey \322rt\323) 242.78 173 T
0 F
( / CCLNL16_4DX.PR) 307.78 173 T
(T / SHOW / DONE /) 414.73 173 T
(RETRIEVE / ROUGH / DONE / PROFILE / CREA) 108 159 T
(TE PRFOFILE / rough_od_tp /) 358.67 159 T
-0.22 (SELECT SURF) 108 145 P
-0.22 (ACE / DONE / {select the start and end surfaces to de\336ne the cut, see Fig.) 183.9 145 P
(2}) 108 131 T
72 72 540 720 C
127.88 421 484.12 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 X
0 0 0 1 0 0 0 K
%%BeginBinary:  33926    
896 756 351 291 0 130.47 425 BEGINBITMAPBWc
















































"z"
FAP0AAAF$Z"W"Z"V"Z
F7FFF7EF77F7DFF74$B"B"A"B"A"A"A"?"?"
FFFFFFEFFBFFFFBFFFFFFBDF$B"B"A"B"A"A"A"?"?"
F7FFF7FFFFF77FFFDFF7FFFF$;"<"<";"A"B":#;":#;"A":#9"?"
FFFFFFFBEFF9FBFFFFFE3FBFFE7FFFFFFC7FFBDF$B"<";"<":"<";";";":#;";#:":":";"9"
F7FFF7FFF2FF1FF7FB7FFFFFFDBFDFFC3FF7FBFFE7FF$B"<";"<":"<";";";";";";#:":":";"9"
FFFFFFEFFEFBEFFFF3FF3FBFFFFFFFBFFFFCFBDBDF$B"<";"<":"<";":#;":#;"A":":"?"
F7FFF7FFFCFF9FF7EB7FFFBFFFFC3FDFF7F9FFFF$B"<";"<":"B";";":#;"<":":#9";"9"
FFFFFFEFFBFBCFFFFFDFBFFDBFFF7FFFFBBFFBC3DF$B"B"<":"<";":#;"A"A":#9";"9"
F7FFF7FFFFEFF7C17FFCBFFFDFF7F97FFFFBFF$B"<";"<":"<";":#;":#;"A":#9";"9"
FFFFFFEFF0FB6FFFFBFFFE7FBFFE7FFFFFFCFFFBDBDF$;"<"<";"<":"B":#;":#;"A":":";"9"
F7FFF7FFFFFFFF1FF77FFFFFFFFFFFDFF7FFFFE7FF$B"B"<":"<";"A"A"<":"?";"9"
FFFFFFEFFBFFFFFFFFBFFFFFFFFBFFDF$B"B"A"B"A"A"A"?"?"
F7FFF7FFFFF77FFFDFF7FFFF"y"w"z"z"t"
F5554AAAA9D552AAAAA9555FZ#Z
/FEBFP!$B#A"A"J"
F7FFF7FFFFFBF7O6DF$J"A"J"
FFFFFF9FFFFO6FF$J"
F7FFF7P.DF$J"
FFFFFFP.FF$J"
F7FFF7P.DF$J"
FFFFFFP.FF$@"fJ&J"
F7FFF7F0O+F00000000F6DF$@"U"J(J"
FFFFFFF7FEO*F00FFFFFFFF00F5FF$J$9$J"
F7FFF7O?FC0FFFFFF07F4DF$J"J#;#J"
FFFFFF>E3O C3FFFF874FF$J#J#=#I"
F7FFF7>9C1FLFE3FF87FDF$J$J#=#I"
FFFFFF=FE7FEFLE1FFFF87FF$J$J"?"I"
F7FFF7=F9FFF7L1FF8DF$J$J#?#H"
FFFFFF=F7FFFBKF8FFFF3FFF$J$J"A"H"
F7FFF7=EFFFFDKE7CFDF$J"A"H"
FFFFFFO=1FF1FF$J$J#A#G"
F7FFF7=DFFFFEJFCFFFE7FDF$J"B#G"
FFFFFFO<F3FF9FFF$J$J"C"G"
F7FFF7>F1FF7FICFE7DF$J#J"C"G"
FFFFFF=BFFDK3FF9FF$J"J#C#F"
F7FFF7>F1JFCFFFE7FDF$J"J"D#F"
FFFFFF>FDJF3FF9FFF$J"E"F"
F7FFF7O;EFEFDF$J"J"E"F"
FFFFFF>EDJ9FF3FF$J%J#E"F"
F7FFF7=DFF1FEFFGFE7FFCDF$J"J#E#E"
FFFFFF>FFIF9FFFF3FFF$J$J"G"E"
F7FFF7=EFFFFDHF7DFDF$J"G"E"
FFFFFFO:CFE7FF$J$J"G"E"
F7FFF7=F7FFFBH3FF9DF$J"J#G#D"
FFFFFF=F3IFCFFFE7FFF$J$J"H#D"
F7FFF7=ECFFF7GFBFFBFDF$J$J"I"D"
FFFDFF=DF3FCFGF7DFFF$J$J"I"D"
F7FDF7=BFC03FGCFE7DF$J%J"I"D"
FFFAFF<FE7FFFFFGBFFBFF$J#J"I"D"
F7FAF7<FDFFI7FFDDF$J"J#I"D"
FFF0FF<FBIFEFFFEFF$J"J"J#C"
F7F777<F7IFD4FF7FDF$J"J"J"C"
FFF77F<EFIF359FFF$J"J"J"C"
F7FFF7<DFIEF5EFDF$J"J"J"C"
FFFFFF<BFIDF5F7FF$J"J"J"C"
F7FFF7<7FIBF5FBDF$J#J"J"C"
FFFFFF;FCFFI7F5FDFF$J"J#J"C"
F7FFF7;FBIFEFF5FEDF$J"J"J#B"
FFFFFF;F7IFD6FF7FFF$J"J"J"B"
F7FFF7;EFIFB7BFDF$J"J"J"B"
FFFFFF;DFIF77DFFF$J"J*8"J"B"
F7FFF7;BF>E3187E30877BBFFFBFEF7EFDF$J"J&<"J"B"
FFFFFF;7F>EB7BFE97EFDF7F7FF$J#J"8#9"8"J"B"
F7FFF7:FCFF>E7D7EE9FBF7FBDF$J"J':"8"J"B"
FFFFFF:FB=FE001318FED15F7F7FDFF$J"J)8%J"B"
F7FFF7:F7=F9FFEB7BFED7EE3B1FFFFEFF7FEDF$J"J":$8$J#A"
FFFFFF:EF=F7B7EDBB6FFFFD8FF7FFF$J"J'8"9"J"A"
F7FFF7:DF=EFFFE3187E308FFB9BFDF$J"J"V"J"A"
FFFFFF:BF=9FF79DFFF$J"J"A"J"
F7FFF7:7F=7FEFEDF$J#J#J"A"
FFFFFF9FEFF<FEFFEEFFF$J"J"B"J"A"
F7FFF79F9=F9DF9F7DF$E$8#9"J"B"J"A"
FFFFFF8000038000F7=F7BF9FBFF$E$8#9"J"B"J"A"
F7FFF7BFFFFBBFFEEF=EF0F9E1DF$J"J"B"J"A"
FFFFFF9DF=9F7399CFF$J"J"A#J"A"
F7FFF79BF=7FFE7D93EDF$J"J#A$J$@"
FFFFFF97F<FEFFFCFE7F7FCFF7FFF$G%9#J"B$J$@"
F7FFF7F800003FFEFF<F9F9FFBF7F9FF3FDF$G%9"J"B$J#A"
FFFFFFFBFFFFBFFD=F7F8FFCF7E7FEFF$J"J"B$J$@"
F7FFF78F3=EFF33FF378FF9DFDF$E$8&J"B$J%@"
FFFFFF800003800001FFEF=9FF7DFF96FEBFF7EFFF$E$8&8"C#A"B%?$?%@"
F7FFF7BFFFFBBFFFFDFFDEBFF8007FEFE7FA7FDFFFF7FA1FCFE7DF$J"8%B&>#B%?$?%@"
FFFFFF5FEBF7FFF7FFC07FF007FFEFFDFFBF39FEFFFEFE9DFBFF7FF$J"8%B&>"D$?$?%@"
F7FFF75FF7FBFFEFF83FFFFFF83F9FCE7E7F7FFDFE7EE7FF3DF$J'B#9#="C%?$?%@"
FFFFFF5FEFDFEFFDFFDFE7FFC3FF7BFFF0FF9FBFFBF9FE1FFFBFF$G+B#9#="C%?$>&@"
F55557F800003FFFFDFDFFEFFBF1FFFFC3EF3FFFDFFCFDFF7FFC3FF3FFFDDF$G+;#;";"="C&>$>$B"
F7FFFFFBFFFFBFFEFDF3FFF7F7FC7F8FFC9F7FFF97FF3FFEFEFFF5FFDBFF$G"8/:#;#<"B"8$>';&@"
FFFFF7FFFFFFFDEFFFFBEFEE1B8C3FFFF383FE7FFF3F7FFE3DFFCFFF7DFCC3B983F3FF7DFFFEDF$G"8/:#<";#C&?&;'?"
F7FFFFFBBFFEFDDFFFFDDFD77BA6FFFFCFFDF9FFCFFEFFFFFF7F7FF3BBF977BAEF8FFDFDFFFF7FFF$G"8+8#:"=";"C'?%<$B"
FFFFF7FFFFFFFDBFFFFEBFDF79B63FFEE7F3F9FDFFFE7FFFF9D7F9F73A3FFFFEDF$G"809"=";"E&>#=(?"
F7FFFFFBBFFEFD7FFFFF7FEF79AEFFFEFFFF7F9FFCF7FCFFDFFE3FEFFDF8FFF7FE7FFFBFFF$G"8-8"8#=#:"C(>%;(?"
FFFFF7FFFFFFFC3FFFFEBFE7758EFFFDBFFE7FFF7FEFFBFFFDFFF7FF9FD7FE7759F1FFDFFF3FFF9FDF$G"8+=#>":"C(>%;(?"
F7FFFFFBBFFEF5BFFFFDDFB771AEFDFFBF9FF7FFF87FFDFFE7BBFB7719EFFF7FFCBFFFDFFF$G"8$8(8"8"?":"E&>%;(?"
FFFFF7FFFFFFEBFBEFD776B6FFFBDFF3CF7FFB9FFF7FF97DF976DA1FFDFFF39FFFCFDF$G"8$8$?"?"9#C(=%;)?"
F7FFFFFBBFFEC5F7F7EFCFF7FEFFEFFFF7EFFFBFFEFEFEFCF6FE3FF7FFEFDFFFEFFF$G"8$8&9#8"?"9"F'<'9'A"
FFFFF7FFFFFF91EFFBFFFFFFBFEFBFFBF9E7F3FFEFFF3FFDFF7FFFFFFFF9FFDFFF9FCFDF$G'8#:$9"?"9"D)<$<)?"
F7FFFFFBFFFEAAAA8BDFFDF7FF3F7FFDF7CFFFEFFC81FBFFCFFBFFBFE7FF7F027FEFFFF7FF$G'8#;#8#?"9"D)<$<'A"
FFFFF7FFFFFDFFFE3EBFFEFEBFFEFFFEEFDFFFCFFE7C7EFFF3F7FFDF8FFFFC7C7FF7DF$G'8$>"@#8"D)<$<)?"
F7FFFFF800003FFE557FFF7FFDFF3F9F9FFFDFFCFF3FBFF9EFFFEF7FFDF9FF3FF3FFFBFF$G,:#8"A"8"D*;$;*?"
FFFFF7FBFFFFBFFFFC3FFEFFFFBFFC3FFBDF7F8FFF9FFBFF9FEFFA7FDFFFF7FC3FF7F3FF9FFBFFE3DF$I"8$8":#8"A%D*;$;*?"
F7FFFFFD7DBFFFFFFFBFF7EFFFFEFF33FF8FF3FFCFFBFBBFFFFFFFF3BFDFF7FFDFE1FF99FF$I%>"8$A$E*C*?"
FFFFF7FFBFFEFDFBDFFFEFF7FFF97DFF33F7FFEFFBF7CFE7DF7FE7FFCF9DFF7DDF$I%>$8"A$E%8$C*?"
F7FFFFFDBFFF7DF3FFFFDFFBFFF77E7F7DE7FEF7F39FDDFFEFFFEF7CFCFCFF$I%>"8$A$D+C#9%?"
FFFFF7FFBFFEFC8DBFFFBFFDFF6FFEFFBEFE6FFFE7FFAFFD3FE7ECFEFBFEDF$E)=#:"A$F*A*@"
F7FFFF800003FFFD80007DFC7D7FFEFE9FCEFF8FFFF3FFCFFE7FF8FFEFFF8FFFE3FE67FF$EQ$<#8$B#D,A+?"
FFFFF7FEFC3FF3FE7FFEFFFD5FFD3FF0FFEFFFE4FFDBFF9FFBFFD7FE6FFFEFFF1FF8DF$E*<$8"B$E+A&9$>"
F7FFFFBFFFFAAAAABFFEFDBF8FFF7FFDFF7A3FCFFDFFE7FFEF3FBEFFCFE7FF7BF9EF3FE77FFF$E)<'D#E%8%A%8&>"
FFFFF7FFFFFFFFFDFFFE55FC7FFF9FFEFFB8FFF3F8FFF7DFBFBFF39FFDFBF7CFFDBF9FBFDF$E)<(C"E%8&@,?"
F7FFFFBFFFFBFFFFBFFEFDE3FFFFE7F9FFFBD3FBFCFBBFCFE77FEFE8FE2FF7FDCFF7FFDFF7BF7FFF$E)<"8%C"F(8#?,?"
FFFFF7FFFFFFFFFDFFFE7D1FF807FFF7EFFF33EFFBFFDFF9EE3FF8EFDFFD3FF3FF9FDFDCFFDF$E);#8%C"G+?->"
F7FFFFBFFFFBFFFFBFFEFCF8FFFFFFFFEFF787FBFDFFBFFEFFFBDF9FF3F77FFEFFF9FF3FBFD3FFDFFF$E);"J"E-?+@"
FFFFF7D55557FFFDD55401E74FBF7FFF7FDFE7E7FFDFFFEDFE78FF9FFFF7FFCFC7EFFCFDF$EP%:"<"J&8$>$9&@"
F7FFFF5ADA543F1FDF?F9FF7F00FFFFBFF9FEBFFBFF01FBFF9FFF$E$8%9#<"<$:"E)8$8$9#8)>"
FFFFF7BFFFFBFFFEFDBFF8FFBFBFFFEFFDEFFFFE7FDFFE7FFB9FFC7FDFFFF77FEDBFFCFFEFFE7FFFEFDF$E$8$:"="<$J&9$8$8$9&@"
F7FFFFFFFFFFBFFE7DC77FDFFFDF6FFBFF7FF9F7BFF3FEFFFEFF9FFBDF3FFDFFDFFFF$E$8$9#D$:"H&8$8$8$8&A"
FFFFF7BFFFFBFFFEFDFE3FEFFFBFFECFFBFFE7F77DFFCFF7FFDFC7FEFEDFCFFF7FF3DF$E$8$9#<#<$J"8%8%8$8%8%A"
F7FFFFFFFFFFBFFE7DF1FFFEFFF7FF7F4DFF3FEFFFBFEFF7FF3FBFFBF5FFFFF7FBFFDFFCFFF$E$8$9"E$:#G&9#8$8#9&8">"
FFFFF7BFFFFBFFFEFDCFFBFEFFFF7FFDFFBFFCEFBFF8FDFF7F3FFBEE7FF7FFBFF7DF$E$8$8#="=#J5A"
F7FFFFFFFFFFBFFE7CFE3FFDFDFD8;FE7FEFFF2FFFFDFFEFFE3FFFFEFEFFFFF8FFEFFFBFFFE9FFEFFE7FFF$E$8(E#<"G/8,A"
FFFFF7BFFFFBFFFEFC3FFFF1FFFEFBBFFF9FF7FFDFFFFA7FFBFF9FFFFF7DF3FFBFFE5FFFF7FFBFF9FFDF$@1>"=*H59">"
F7FFFFF2AAAAAAAAD55556AAAAAAAA7DBFFF8FFBFF77F68771DFEB1B039E7FDFFBFFFFB9FFEFFE7FFFE00FB4388EEF58981FFFBFEFFE7FBFF$@"Q*G%8#D"9$808$B"
FFFFF7F7FBFFFFFFFEFDBFFC7FAFF6BF756B5FBFFBFF7FF7E7FF7FFBFFC1D7035FBAEBF5A5AFFDFFDFDF$E$8(C"8$8#I5B"
F7FFFFBFFFFFBFFE7DBFE3FDBF6FDFF6BEEAEA9FCFFDF7FFFEFFBFFDFFCFF3FCBF95C3AEFF5552FFFFDFBFF3FFF$E$8(=";"8)H$949">"
FFFFF7FFFFFBFFFEFDBE1FFD7FF75FAFF08E76DFE2E847FF3FEFFCFFF7FF38FFC7F8013AAFF13423FFFED7FCFFFDDF$E,D"8)D":48#C"
F7FFFFD5556FFFFEAAAA55B87FFE9F77F6BE35DFEAE94F7FDFFAFFFFDFFF33FDFFC7FFA3FB471AEF9474A77FFBFF$E+G*I#84C"
FFFFF7ADB6ABFFFDADB4D4A03FFEFBF6BDB5DFEB6957E7FEBFFF843EFFA7FF6DFB56D8EC61B4ABFFFD7FE7DF$EQ%?"=*I$83C"
F7FFFFFE7D87FFEFFDFDF685B1DC6B1B43F9FDBFFE3F9FDFB7FEE6FB40D8E2348DA1FFFA7F9FFF$E,D%Q"I5C"
FFFFF7BFFFFBFFFDBFFEFC3FFFFD5FFFFBFEF77FCFDDFFF7FFCFFCFF6F7FDC77FDF6FF7FE7FFDFFEFBE7FDF$E*8"=";&;"I5:">"
F7E1FFFFFFFD55577FFE7DBF3FDF4FFFF7FF7FFB7FF3BF7FE9FFDFFE7FDF7FBCBBFDF7FEFFF3FF2FFBFDCFFFEFF$E)8#C(G#;5D"
FFEDF7BFFFFFFFFDFFFEFDFF7FDFFFEFFFBFE01FFEFF5CBFDFEE7F9FFF7FBF7F7EFDFDFDFDFFFBFCEFF7FD3DF$E)I&J/9%D"
F7EDFFFFFFFBFFFFBFFE01DFFFDF9FE78F3FF7DF9FBFFF3F7B7EFEFEFDDF73F7DFFEFFF$E)I&J/8&D"
FFE1F7BFFFFFFFFDFFFE7CBFFFEF7FF98F9FFBDFE7BFFFBDFD7DFEFF7D7FF9EFF77FF1FDF$E)A"=&9"J5D"
F7EEFFFFFFFD5556BFFE7DBFFFFFFEFFFEFD45FE7FEBFF9BFFF8BFF7FFEFFFDFFF1FFFD9FF9FFE7FFF$E'J#J););#="
FFEEF7BFFFFBFFFDFF9FF7F7FF9FFBFFE3FFFB3FFC9FFFC7FFBFF9FFFF7FDF$E)j"9"8"F"=(8"8(E"
F7E1FFFFFFFFB5AAAAAA2811FFDBFFDEFF5FFFBFFFADF83F1DFFFDFFEDFE7FF$E-R"P"9";"J$8/E"
FFFFF7BFFFFBFFFFBFFE7DBFFFFF7FBFDFFBFE5F3F77FF3E7F7F86C3FDFCF5FFFBFFBDF9FDF$E'C"?"8"J/8$E"
F7FFFFFFFFFFBFFDFF7FF7DF8FCEFDFF9FFF5F9F787EFC3DFBFDFEFEE7FFF$E'J#J4E"
FFFFF7BFFFFBFFFFBF8FE7F9FF2FF7FDFFE7FEF77FEFFDDE7F6FFF3FFFE8FFDF$E)J#J2F"
F7FFFFFFFFFFBFFDFFFE016FD3F:9FFBFCFFCBFF36FFEFFED9FFA7FE7FBFF7FF$E)C%;#J2F"
FFFFF7BFFFFBFFFFBFFEFD5555557FFFBF:E7FEFE7F97FFC4FF4BFF47FFF3FCFEFFCFDF$E*B%<#8#J2>"="
F7FFFFEAAAAD55556AAA543FFFFFFFDF7FEFFF7F5F9FFBF8E3FFFF3FAED7F9FFFD8F3FBFF1FBFFF$E*9#9%9)J2F"
FFFFF7BFFFFFFFFEAD5A69BFEEB1EAAAAAAAEFDFF6DE6C07FEFF:FEFFEFE197FFE7EEA5D8523AF90FEFFEFFDF$E):#9%9"8'F">&8*G"
F7FFFFFFFFFBBFFFBFFEFDD6B5FFFEFFFFBBC001F7FDFFDFFBFF3FFBFFE7FB4AB1425AE7FFBFF9FF$E"P<":"8"9)J0G"
FFFFF7BFDEDFFEFFC0000DEDF7FC3F;CFFDFFFBFFDFDDA55942DA97FEFFE7DF$E'<#9"8-J0G"
F7FFFFFFFFFBBFFFBFEEB17FFFFFFAFFBE01F4CDE1F7FFFF;F7FF7FECFF9FB34BD842187FFBFFCFFF$E"P<#8#8*J0G"
FFFFF7BFF6B5FEDFFEFFEFBFFEC1F08DED>F9FFDFDF3F9EAEA57042D8F7FFFF3FDF$E'<"9#8+8"J0G"
F7FFFFFFFFFBBFFFBFB6FDFFFFFFFFDFBFDFF2ADEDFBBF:FE7FEFFFDF3DAAEEAA48D2F7EFFCFFFF$E"P<"9#8&8$<"J/H"
FFFFF7BFD6EADFFEFFDFFFFEB52DFDBF6FF9FFBDFE77FBBA750484AFBBFF3DF$E'<#8#8+8"J.H"
F7FFFFFFFFFBBFFFBFEF71FDFFFFFFFADFBFDFF6B66DFE7F;EFFEBFF97B76ADD8003AFEFFE7FF$E*9#8#8.J.H"
FFFFF7AAAAAB75556AAA543FFFFFEFDFFEF556B56ADFFFFFFFFF7FFCFF;F3FFFFFE7D9DCAEDBEFFFBFF9FDF$E*8(8&;#J.H"
F7FFFFFFFFFFBFFFBFFEFDFF55AAAAAAAABEFFFFFFF75FBFBFF3<FCFF9FF8F56B2576DE3FEFFE7FFF$E';(8&;#J.H"
FFFFF7BFFFFBFFFFFF7EFFFFDFFFEDDFFEF7DDFFFEC3CF<FF7FF7E6FDBACABF7ECFBBFCFFDF$E';(8&;#J,I"
F7FFFFFFFFFFBFFFBF5F5FFFEFFF7EFFFFFFFFDFBFFC3F=9FFD9EF6DAAB5ADEF2FDF3FF$E)8)8'8%J,I"
FFFFF7BFFFFAD556FFFC3DFD5EFFFFDFFFEDDFFEF7FFFFFE57FE1FFFFF=E79D7EFBB502AABEFD7BCFDF$E)9#9#8&9#<"J,I"
F7FFFFFFFFFBBFFFBFFEBD1EDF7DFFFFFFE6BFBFFFDF7F8F3DCFEFABAA55EAEFE75BFFF$E"P"c$8#b"J#b#I"
FFFFF7BFFEFFFEDFFEC03F?FCA0167FDF$E$8.8P&J,I"
F7FFFFEAAAABAAAA7DFFFFFE3EFFFFDFFF6DFF8FFFFFFFBF?FF23FEF6F5EDAD5EFF89FFFF$E)9(8#8":"J*J"
FFFFF7D5B5B7BFFFD6D4011F5FFFEFFFFFDFFEF7BE7F@8BFEFBB68ABABEFFA54DF$EQ#8)8#8#J*J"
F7FFFFFEFFFF7EFFFFDFFF6EFFFFFFFFDFDB7FEFD594D5BDEFFDB4FF$H"8":#9#8#8"9#J&J"
FFFFF7BFFC5B5FDDDFFEF7BEFEFFBF6DE8B767E6DF$H"9"8-8#9"J(J"
F7FFFFFF3FFE7FDAAB75556EFFFF7FFFFFFF9F1F@AFFEF56D056EDE6FF$H"8#:'8&9#;#J'J"
FFFFF7BFFEFFFFFFFFFFFDDFFEFAAAAAAAFFFFFEFF:FF7B56CAF5BE6DF$H"<";#8'J*J"
F7FFFFFFFDF5FFFFFFF5BFBF5FDDFFF7EEAA2DAFDFFBB4FF$H"<";#8&J*J"
FFFFF7BFF9FEDFFEFFDFDFFEE9FFF7D7BEEB77DFF3B4DF$H"<";#8'J*J"
F7FFFFFFFFFDFFFFFFFFFFBEDFDDFFF7FAEA76EFBFFF74FF$H"C)J"D%J"
FFFFF7BFDFFFBFFEFFDFFFFF8FDBEDAAADB7DF$H"B#8&@"J&J"
F7FFFFFFFFBFFFFFFFDFBFFD<DF76EEADF76FF$H"C"8&J(J"
FFFFF7BFFFFEFFDFFFFBEEFFFEFDEA577EF6DF$H"C"8&J(J"
F7FFFFFFDFFFFFFFDFEFGF7F5AD5FCFFFEF4FF$H"C)@"J(J"
FFFFF7BFF5554AAAFFDFFFBFFB:F7FFFBFAEEBFBF6DF$H"C(J(B"="
F7FFFFFFFFFFDFFF556AAAHFDFE83FF7FFFDF7FFF$H"G%J'J"
FFFFF7BFFFFFFFFFEFBFFFEFFEFFE7DF$H"J*J"
F7FFFFFFO,F9FFFF3FEFF9FFFFBF4FF$H"E"E"J"8$8"J"
FFFFF7BFEFF7:FDCFEFE77F4DF$H"J"8$J"
F7FFFFFFO,FEF0EE1F7FF$Erj"J'J"
FFFFF7AA21FGFC007FFFFEFF4DF$EQ(Q"P"?"J)B#="
F7FFFFFEFDBFFFFF7E7FF7DFEF:FF7FFFF1EF1FFFFDFEFFFF$E"J"C&J"
FFFFF7BFO"FEBFFFCDEF677DF$E"@#<"=$;"J&J"
F7FFFFFF7F3FFBBFFFEFDF=1DEF71FFFB5FF$E'<"D$J(J"
FFFFF7BFFFFD55557F1FDFFFDFACFFCEDEF6E7FE75DF$EP"J$;"J(J"
F7FFFFBF5EFFFBFBF;F7F3F5EF5F9FEF5FF$E$8"<"<"=$I#B(J"
F55557BFFFFBFF4FFDF7FF7FFF7FFBCEF9EF3EE79F5DF$E$8$:"D$;"J(J"
FFFFFFB55557AAAA019FFBFEFF7F;FDBFFDEF7FFB7F5FF$E$8$:"<"=#J(B">"
F7FFF7FFFFFBFFFEFDAFFEFDFDBFE3EFCEE7EF8FFFDDF$E$8#;"D#;#J'J"
FFFFFFAAAAAFD554EFFEFBFEFF;FFBFFD6D7FFB6FF$E$8#;"<#<*D"C+G"
F7FFF7FFFFFBBFFEF7FF7FFF77F687718FEB1A43BF8EFDAB7A43B8C7F58DA1DF$E$8"J)J+G"
FFFFFFBFFFFFFF6AFF6BF75AFEB695F<BBFDC77B0BBAD7F5B5AFFF$E';#=":"8(J(8"G"
F7FFF7FFFFFAAAAABFFFFBBFFFDFF6BE75EFEB68=BEFDEF795B3AF72FDF$E"PD"=)J*>">"
FFFFFFBFDFAFF08E76CFE2E847=ADD768433AE7F17423FBFF$@)8"<"="=)J+G"
F7FFF7F5555555557FFFFBBFFDEF77F6BE35DFEAE95F<BFF92A5A5B1AEFF574AFDF$@)8"J)E"C*H"
FFFFFFF7FFFFFFFFBFFFFFFF5FEFBF6BDB5BFEB61DFBEFD7D7B5ADADFF5B4FF$E):"="<*J+>">"
F7FFF7FFFFFBFFFEAAAA54FEF7FDFDF685B18C6B0B43<BFFC007A42D8C6358DA1F7DF$E)B"<#P#J&PG"
FFFFFFBFFFFFFFFDFFFEFDFBFBFEDFFF<BEFC7C7FFBFF$E*9#<"<$:"J%J"
F7FFF7FFFFFBFFFFBFFEFC3FFF7FFDF7FF7FBF=BFF9FF3E7DF$E*H$:"E"C%D">"
FFFFFFBFFFFFFFFDFFFEFDFFEFFFBF7FEFBEF3FF9FEFFF$E'="<"<$9#J%J"
F7FFF7FFFFFBFFFFBFBFFEDFFFDFFEFF=BFE7FFCE7DF$E'D#;$J"C%D">"
FFFFFFBFFFFFFFFDFFFF7FBFFFEF4F7BED7FFE7DFFF$E'E";$9"J%J"
F7FFF7FFFFFBFFFFBFBFFFFFFFFD>BFEFFFEE7DF$E'="="A"J"8"J"
FFFFFFBFFFFFFFFDFFDFDFFB>BEEF7FF$E'E"A"F"C"8"D">"
F7FFF7FFFFFBFFFFBFEFF7FBBFEEBFDF$E$8"="="A"J"8"J"
FFFFFFBFFFFFFFEFF7EF>BEEF7FF$E'E"A"J"8"J"
F7FFF7FFFFFBFFFDBFFBDF>BFEE7DF$E"P="="A"F"C%D">"
FFFFFFBFF7FD3FFDBEE7FFEF7FFF$E'E"@#J%J"
F7FFF7FFFFFBFFFDBFFEFEFF>BFF7FFCE7DF$E"P="=#?"J%J"
FFFFFFBFFBFF7FFD?BEFBFFDF7FF$E'F"?"G"C%C#>"
F7FFF7FFFFFBFFFDBFBFFBFEBFF9FFBEFEFFDF$E"P$:">"?"J%J"
FFFFFFBFFEFC3FFDCFF7?BEFC7E7F7FF$E*C"?"J%J"
F7FFF7FFFFFBFFFEAAAA54BFF3CF?BFFD007E7DF$E"P#;">"?"G#B%C"?"
FFFFFFBFFEFDFEFCBFFF7FBEFDFF7FFDFF$E$8"F#=#J"8"J"
F7FFF7FFFFFBBFFF7FFE7F?BF7E7DF$E$8"=#>"=#J"8"C"?"
FFFFFFBFFFFFFFFF7F9FF9FF?BE7FFBFF$E$8"G"="I"B"8"J"
F7FFF7FFFFFBBFE7E7BFBF7E7DF$E$8">">"="J"8"C"?"
FFFFFFBFFFFFFFBFF99F@BE7FF7FF$E$8"G#;#I"B"8"J"
F7FFF7FFFFFBBFFE7FFE7FDFBF7E7DF$E$8">">#;#J"8"C"?"
FFFFFFBFFFFFFFDFFF8FF9FF@BE7FEFFF$E$8"H";"J"B"8"J"
F7FFF7FFFFFBBFF1C74EFBF7E7DF$E$8">"?#9#J"B"8"C"?"
FFFFFFBFFFFFFFEFFE7FF83F4F7BE7FDFFF$E$8"H#9#J"8"J"
F7FFF7FFFFFBBFFF8387FFABF7E7DF$E$8">"@&J"B"8"C"?"
FFFFFFBFFFFFFFF7FC07FE007F5FBBE7FBFFF$E$8"I&J"8"J"
F7FFF7FFFFFBBFFFF801FFFFBBF7E7DF$E$8%G#J"B&B"?"
FFFFFFBFFFFFFFFE003FFFFF7FD80000000037FFF$E$8%;"J&A#?"
F7FFF7FFFFFBBFFE7FFFFBO#BFFFFFFFFBFEFFDF$E$8"J"B"8"J"
FFFFFFBFFFFFFFMFEBEFE7FF$E$8">"J"8"B"@"
F7FFF7FFFFFBBFFDO#BFFFFDDF$E$8"J#A"8"J"
FFF3FFBFFFFFFFMFF7FBEFE7FF$E$8">"J"8"B"@"
F7EDF7FFFFFBBFFEO#BFFFFBDF$E$8"J"A"8"J"
FFEFFFBFFFFFFFO BFBEFE7FF$E$8">#J"A"8"B"@"
F7DFF7FFFFFBBFFF7FDDFBFFFF7DF$E$8"J"A"8"J"
FFDFFFBFFFFFFFO EFBEFE7FF$E$8"?"J"8"B"@"
F7EDF7FFFFFBBFBFO"BFFFEFDF$E$8"J"A"8"J"
FFE1FFBFFFFFFFO F7BEFE7FF$E$8"?"J"A"8"B"@"
F7FFF7FFFFFBBFDFDFBBFFFDFDF$E$8"J"A"8"B"@"
FFFFFFBFFFFFFFO FDBEFEBFFF$E$8"?"J"8"B"@"
F7FFF7FFFFFBBFEFO"BFFF7FDF$E$8"J"A"8"J"
FFFFFFBFFFFFFFO FEBEFE7FF$E$8"?"J"8"A#@"
F7FFF7FFFFFBBFF7O"BFFFFEFFDF$E$8%J#@&@"A"
FFFFFFBFFFFFFFFE003FKFF7F8000000003FDFF$E$8%<"J"@&@"A"
F7FFF7FFFFFBBFFEFDBFFBEBFBFFDFF7FFBFBDF$E$8"J"@"8"A"A"
FFFFFFBFFFFFFFO!DFBE7EF7FF$E$8"?#J"8"J"
F7FFF7FFFFFBBFFD83O!BF7F7DF$E$8"?$J"@"8"A"A"
FFFFFFBFFFFFFFFC7C7FCEFBE7EEFFF$E$8"?$J"@"8"A"A"
F7FFF7FFFFFBBFFBFF9FCF7BF7FDFDF$E$8"?$J"@"8"A"A"
FFFFFFBFFFFFFFE7FFEFCFBBE7EBFFF$E$8"?"J"@"8"A"A"
F7FFF7FFFFFBBFDFEFDBF7F7FDF$E$8"?$J"@"8"@#A"
FFFFFFBFFFFFFFBFFFF7CFEBE7EFEFFFF$E$8"J#?"8"@"B"
F7FFF7FFFFFBBFO!FF7FBF7FFDDF$E$8"?$J"?"8"@"B"
FFFFFFBFFFFFFF7FFFFBDBFBE7EFBFF$E$8"@"J"?"8"@"B"
F7FFF7FFFFFBBFEFEDFBF7FF7DF$E)<%J%J"
FFFFFFBFFFFFFFFD6AAA54FEFFEFFDO BEFD017E7FF$E)J"?%@"B"
F7FFF7FFFFFBFFFFBFFEFDO EFBFFC7C7FEFDF$E$8%J"?%@"B"
FFFFFFBFFFFFFFFEFC3FMF7BEF9FF3EDFFF$E*J"?%@"B"
F7FFF7FFFFFBFFFDBFFEFDFFMFBBFFBFF9FBFDF$E"PJ"?%?#B"
FFFFFFBFO"FCBEF7FFDEFE7FFF$E'J#>"8"?#B"
F7FFF7FFFFFBFFFDBFO"FF7FBFEFFDFFDF$E"P>%J">%?"C"
FFFFFFBFFF7FEFFBEBFBEEFFFEEFBFF$E'@"J">"8"?"C"
F7FFF7FFFFFBFFFDBFFFFDFBFEFF7DF$E"P?$J">"8"?"C"
FFFFFFBFBFFFF7EE7BEEEEFFF$E$8"J">"8"?"C"
F7FFF7FFFFFBBFO#FBBFEFDFDF$E'?$J">"8"?"C"
FFFFFFBFFFFFFFFDFFDFFFEFEFDBEEEBFFF$E'?$J">%?"C"
F7FFF7FFFFFBFFFFBFEFFFCFEFEBFE7FFEF7FDF$E'?$J#=%>#C"
FFFFFFBFFFFFFFFDFFF3FF3FEFF7FBEF7FFCEFCFFFF$E'?$J"=%>"D"
F7FFF7FFFFFBFFFFBFFCFCFFFBFBFFBFF9FFBDF$E*<#J"=%>"D"
FFFFFFBFFFFFFFFDFFFEFC3FFF03GDFBEF9FF3EF7FF$E*="J"=%>"D"
F7FFF7FFFFFBFFFFBFFEFDBFFFGEFBFFC7E7FEFDF$E)J"=%>"D"
FFFFFFBFFFFFFFFD6AAA54O"F3BEFD017E9FFF$E)J"=%>"D"
F7FFF7FFFFFBFFFFBFFEFDO"FDBFFDFF7F7FDF$E$8"J#<"8"=#D"
FFFFFFBFFFFFFFO$FE7FBE7EFEFFFF$E$8"J#<"8"="E"
F7FFF7FFFFFBBFO$FF9FBF7FF9DF$E$8"J"<"8"="E"
FFFFFFBFFFFFFFO%E7BE7EE7FF$E$8"J"<"8"="E"
F7FFF7FFFFFBBFO%FBBF7F9FDF$E$8"J"<"8"<#E"
FFFFFFBFFFFFFFO%FCBE7EFE7FFF$E$8"J#;"8"<#E"
F7FFF7FFFFFBBFO%FF3FBF7FF9FFDF$E$8"J";"8"<"F"
FFFFFFBFFFFFFFO&CFBE7EF7FF$E$8$J";"8#;"F"
F7FFF7EAAAABAAAA01O$F3877FC3CFDF$E*J";&;"F"
FFFFFF95AB5AAAAAD554003FO#FCB80000001B3FFF$EP%J#:&:#F"
F7FFF7BFFEFFFFO#FF7FBEFFFFFEFBFCFFDF$G"8"J"C"G"
FFFFFFFBFFO'9FF3FF$E$J"C"G"
F7FFF7BFFFFFO*E7CFDF$E$8"J"C"G"
FAAAAFFFFFFBBFO'F93FFF$E$8"J#A#G"
F7FFF7BFFFFFFFO'FE3FF8FFDF$E$8"J#A"H"
FFFFFFFFFFFBBFO'FFC7C7FF$E$8"J"A"H"
F7FFF7BFFFFFFFO(F83FDF$E$8"J#?#H"
FFFFFFFFFFFBBFO(FF1FF8FFFF$E$8"J"?"I"
F7FFF7BFFFFFFFO)E3C7DF$E$8"J#=#I"
FFFFFFFFFFFBBFO)FC1FF83FFF$E$8"J#=#I"
F7FFF7BFFFFFFFO)FFE187FFDF$E$8":)J#;#J"
FFFFFFFFFFFBBFE73BBC3FFEFFBDEFLFE3FFC7F4FF$E$8":)J#;#J"
F7FFF7BFFFFFFFD29BBDFFFC7F5AC7LFFC183FF4DF$E"a9#8"8"J$8#J"
FFFFFF80DEF9FDD7MFE007F007F5FF$@'Q9%8"J(J"
F7FFF7F0000000003FE5F5BC7F1AO FFFF800001FFFF5DF$@Q?(J$J"
FFFFFFF1F1BDFFFD7E4AO"FFFFFF7FF$J#J"
F7FFF79DAD6OADF$J)J"
FFFFFF9C636843FFCF718E7O;FF$JSJ"
F7FFF79O;DF$J"
FFFFFFP.FF$J"
F7FFF7P.DF$J"
FFFFFFP.FF$J"
F7FFF7P.DF$J"
FFFFFFP.FF$J"
F7FFF7P.DF$J"
FFFFFFP.FF$J"
F7FFF7P.DF$J"
FFFFFFP.FF$J"
F7FFF7P.DF$J"
FFFFFFP.FF$J"
F7FFF7P.DF$J$J"
FFFFFFO8FBFFFEAFF$J$J"
F7FFF7O8FDFFFDADF$J$J"
FFFFFFO8FEFFFBAFF$J$J"
F7FFF7O8FF7FF7ADF$J#J"
FFFFFFO9BFEFAFF$J#J"
F7FFF7O9DFDFADF$J#J"
FFFFFFO9EFBFAFF$J*J"
F7FFF7O9F77F586E7DFDB36C7F:DF$J*J"
FFFFFFO9FAFF5BEEBDFDB56DFF:FF$J"8&J"
F7FFF7O9FDE6DDFDAD2D;DF$J)J"
FFFFFFO9FAFF18D6DDFC2E0C;FF$J)J"
F7FFF7O9F77F5BC6DDFDAD4D;DF$J(J"
FFFFFFO9EFBF5BDA9DFDA5<FF$J*J"
F7FFF7O9DFDF585A3D85B16C7F:DF$J#RJ"
FFFFFFO9BFEF:FF$J#J"
F7FFF7O97FF7ADF$J$J"
FFFFFFO8FEFFFBAFF$J$J"
F7FFF7O8FDFFFDADF$J$J"
FFFFFFO8FBFFFEAFF$J$J"
F7FFF7O8FFFFFFADF$J"
FFFFFFP.FF$J"
F7F9F7P.DF$J"
FFFAFFP.FF$J"
F7FB77P.DF$J"
FFFB7FP.FF$J"
F7FB77P.DF$J"
FFFA7FP.FF$J"
F7F8F7P.DF$J"
FFFFFFP.FF$J"
F7FFF7P.DF$J"
FFFFFFP.FF$J"
F7FFF7P.DF$J"
FFFFFFP.FF$J"
F7FFF7P.DF$J"
FFFFFFP.FF$J"
F7FFF7P.DF$J"
FFFFFFP.FF$J"
F7FFF7P.DF$J"
FFFFFFP.FF$J"
F7FFF7P.DF$J"
FFFFFFP.FF$J"
F7FFF7P.DF$J"
FFFFFFP.FF$J"
F7FFF7P.DF$J"
FFFFFFP.FF$J"
F7FFF7P.DF$J"
FFFFFFP.FF$J"j"J"
F7FFF7KC023FKDF$J"Z"J"
FFFFFFKDF2BFKFF$J"
F7FFF7P.DF$J"
FFFFFFP.FF$J"J"
F7FFF7KEFO0DF$J"
FFFFFFP.FF$J"
F7FFF7P.DF$J"
FFFFFFP.FF$J"
F7FFF7P.DF$J"
FFFFFFP.FF$J"
F7FFF7P.DF$J"J"
FFFFFFKF7O0FF$J"
F7FFF7P.DF$J"
FFFFFFP.FF$J"
F7FFF7P.DF$J"
FFFFFFP.FF$J"uJ"
F7FFF7O"FD55O!DF$J"T#J"
FFFFFFO"FBFD7FO FF$J":"@"J"
F7FFF7KFBFFFFO DF$J"?#J"
FFFFFFO"FBFEDFO FF$J"?#J"
F7FFF7O"FFFDFFO DF$J'?#J"
FFFFFFKFAAAAAAAAAABFFF7O FF$J"P?#J"
F55557KFBFCFFO DF$J"?#J"
F7FFFFO"FBFFFDO FF$J":"?#J"
FFFFF7KFDFFFEFFO DF$J"?$J"
F7FFFFO"FBFDFF7FMFF$J"?$J"
FFFFF7O"FFFEFFFFMDF$J"?$J"
F7FFFFO"FBFDFFDFMFF$J"A"J"
FFFFF7O"FFFFMDF$J":"?$J"
F7FFFFKFEFBFEFFF7MFF$J";"9$J"
FFFFF7O"FFAAFDFFFFMDF$J":$:$J"
F7FFFFO"FBFEFFDFFDFF2FKFF$J":$8$J"
FFFFF7O"FFFBFFF7FEFFFFMDF$J":$8&J"
F7FFFFO"FBEFFFFDFDFFFEFF9FKFF$J":$8$J"
FFFFF7O"FFFFFFFFFFFFFFMDF$J#9"<"8$J"
F7FFFFKFF7FFBFEFCFFFEMFF$J":$8$J"
FFFFF7O"FFBFFFFFFFFFFFMDF$J":"8(J"
F7FFFFO"FBFF7FFFFEFFFEFF2FKFF$J":"8&J"
FFFFF7O"FF7FFFFFFDFFFFMDF$J":"8(J"
F7FFFFO"FBFFBFFFFEFFFEFFBFKFF$J"9":"8&J"
FFFFF7LBFFF7FFFFFFDFFFFMDF$J":"8"9"J"
F7FFFFO"FBFFBFFEMFF$J":)J"
FFFFF7O"FF7F557FFFFFFEFFFFMDF$J":)J"
F7FFFFO"FBFDFFDFBFFFFDFFFEMFF$J":%9"J"
FFFFF7O"FFB7FFF77FFFMDF$J"9.J"
F7FFFFLDFFBFFFD55555AAAAD555556AAAAMFF$JP)J"
FFFFF7O"7FFFFDFFFFFDFFFFMDF$J$8)J"
F7FFFFO"FBFFFD6FFFFEBFFFFEFFFEMFF$J$8)J"
FFFFF7O"FFFFFFBFFFFFFFFFFDFFFFMDF$J$8)J"
F7FFFFO"FBFFFDFBFFFB3FFFFEFFFEMFF$8"j"C"9$8)J"
FFFFF7F0;01EFFFFFFF7EFFAFFFFFFDFFFFMDF$8Z"G$8%9"8$J"
F7FFFF<FDFBFFFDFFBEFFBFFEEEDC6BHFF$85:&G$8)9"J"
FFFFF74F7DF80E07BEDE1F81F1FCFC3FDF83E03EFF1FBBFFEF9F01EF5FFFFFF7FF7FFFFFFFEFFFFDDIDF$:1<&G$8)8$J"
F7FFFFF7EFFBEFEEFBFEEFB7DDFDFBDFDFEFEEFFF6FEFEEFFBFFFDFFFFFFBFFFFDFFFEE4ABEBHFF$8"9#8%;#;&G$8"8P:"J"
FFFFF7FFF9CDFDEF7BDEEF79FEEF7EFF6DFFFFFF7FE3HDF$8";&<">$C"9$8"8&8$J"
F7FFFFF7EF7BFDFF7FDFBEFF5DF7FBFFFDFFBFFFFCFFFEEA8DEBHFF$="8"E"J$8"8P9#J"
FFFFF7CFFEFF5FFFFFF7F756BHDF$8":"8%<";#8"G$8"8&8$J"
F7FFFFFFADFF7EFFDDBAFEDFBDFBFFFDFF7FFFFEFFFEEE76EBHFF$8"8#8)J$8"8&8$J"
FFFFF7F7E0FA787F9EFFC3FDF83F?FFFFFFBFFFFFFDFFFFFFFFFFHDF$;-?"9"C"9$8$8$J"
F7FFFFEFFAAFEF7BFFEEFFDBFDFBFFFFBFFBFBFFFDFFFFFDFEFFFEMFF$8":"9$<#:#8"G$8$8$J"
FFFFF7FFADEF7FDD7B3FFEEDBDFFFFFFEFFFFFFDFFFFMDF$8"9#8"J$8$:"J"
F7FFFFF7FB6DFDEFBFFFDFBFFF7FEMFF$>#8"<"=#I$8$8&8#J"
FFFFF7EEFB7BEFEE7EFFFFFFFDFFDFFEFFFFFEAFFE1FGDF$=(;$:$I$8$8$:#J"
F7FFFFEFECFBFECFB7DEE6FBBFFFF6FEFBFFFDFFBD7FFDFFFEFFDFGFF$8"8)<"<$E"9$9#8"b"J"
FFFFF7FFE07BEDE3F81F3FCFF9FEF97EFDFFFFFFF7FFC03FGDF$8'Y;%G$9"9*J"
F7FFFFF7FFFFFFFFFDFFFFFFFFFBFFFDFFFDFFFFFF1FFFFFFFBFGFF$J"G$=$;"J"
FFFFF7>FDFFFFFFFEFFFE7FGDF$="H"J$=&J"
F7FFFFFFFF5FBFFFDFDFFFFFFBFKFF$8":"H"J$=$:#J"
FFFFF7FFFDFE5FFFFFFFFFFFEFEFFGDF$8"J"9$=$;"J"
F7E1FFF7IFEFBFFFDFCFFFF1FGFF$J$=$:#J"
FFEFF7O"FFFFFFFFFFFEFFFFGDF$="H"9"G$=$J"
F7EFFFFFFFFFFBFFFDFEFFFFMFF$8":"H"9"G$=&J"
FFEFF7FFFDFEFDFFFFFFFDFFFEFE3FKDF$8"J#8$=&J"
F7E3FFF7IFF7FFBFFFDFEFFFFFFBFKFF$8'j%G$=$J"
FFEFF7F00000000001380000009FFFFFFFDFFFEMDF$8P"Z&G$?"J"
F7EFFFFD2FEFFFFFFFDFBFFFDFFMFF$8#9)8#=#8"G$=$J"
FFE1F7F7DFFFFBFC7FEFCFFFFD9FC1FFFDFFFFFFFFFEFFFEMDF$8":':#="9"D"8$=$J"
F7FFFFFFFDFBFBBFCFB76FDFFEFDBFFBFFFDFDFFFFMFF$8"=$9#J$?"J"
FFFFF7F7DFCF7BFEF7>FFFFFFFEMDF$='9"?"J$=$J"
F7FFFFFFF5FFDFAFFBFFFF5FBFFFDFEFFFFMFF$8":"@"="J$=$J"
FFFFF7FFFDC7FE5FFFFFFFDFFFEMDF$8"=$:#J"8$=$J"
F7FFFFF7BF6FF7EFDB:DFFBFFFDFFFFFFMFF$=':#="9"G$=$J"
FFFFF7FFF5FE7F6FEFDFFDFFFFFFFFFFFCFFFEMDF$8":':">"9"G$r$J"
F7FFFFFFFDEEFDFEEFDFBFFEFDFBFFFD555BAAABMFF$8";"J"8U$J"
FFFFF7F7E0DEFFEFFFEMDF$=':">"J"?$J"
F7FFFFFFEEFBFDEFBF7FFF5FBFDFFFFMFF$8":"8#D"J"?$J"
FFFFF7FFFDFC07FE5FFFEFFFEMDF$8";%<"J":)J"
F7FFFFF7DF7BFFEFBD=FB5555557FFFFDFFFFMFF$=":"9$="9"D"8":%9"J"
FFFFF7FF7FFEFFDBFFFFF7FFFFFFFFBFFEMDF$8":-="9"G"=&J"
F7FFFFFFFDDF781FEF03C0FDF81E07E7FEFDFBFFFFFEFFFFMFF$8#:V>"J":"8&J"
FFFFF7F7FFFF4FF7FBFFFFDFFFEMDF$J"8":"8"9"J"
F7FFFFMFBFBFFFFFFMFF$="H"J":"8&J"
FFFFF7FFFF5FF7FBFFFFEFFFEMDF$8":"H"J":"8&J"
F7FFFFFFFDFE5FBFFFFFFFDFFFFMFF$8"J"G":"8&J"
FFFFF7F7;FFFF7FBFFFFFFFFEMDF$J"D"8":"8&J"
F7FFFF>FDFDFBFFFFFFFCFFFFMFF$="H"J":"8&J"
FFFFF7FFFF5FF7FBFFFFFFFFEMDF$8":"H"J":"8&J"
F7FFFFFFFDFE5FBFFFFFFFEFFFFMFF$8'z(G":"8$J"
FFFFF7F1111080000008840000044200005FF7FBFFFFDO!DF$8'Z&D"8":"8&J"
F7FFFFF7FFFFFFFFFD2FEFFFFFFFDFEFBFFFFFFFEFFF7MFF$="H"J":"8&J"
FFFFF7FFFF5FF7FBFFFFDFFFFMDF$8#90:#J":"8"9"J"
F7FFFFFFCFFDE1F87FBF7FDFFFFE3EF7EFE0701FFEFD4FBFFFFDFMFF$8#:$:#8$>"D%:"8&J"
FFFFF7F7B7EEFBBFFDDEEFFEFFFFFF7FFFFF7FBFFFFEFFFFMDF$9"<":"8"A"G":"8&J"
F7FFFF7BDFFBCFFDFBFFFFFFFDFF7FMFF$9":#<$J$:"8"9"J"
FFFFF7FBEF7BFEF7D7;BFFFFF7FBFFFMDF$="="@"J":"8%J"
F7FFFFFFFDFF5FBFFFFFFFEFDO FF$8#9"8":#?"I$:"8%J"
FFFFF7FFF7FDBFFE7EFEDFFFFF7FBFFFFDFFO DF$8#;#:&J$:"8%J"
F7FFFFF7EF787FFFBE07B7E1:CAAAABFFFFFFFFF7O FF$9";"<%@"E$:"8%J"
FFFFF7DF7BDEF7BBEFFFDFFFFF7FBFFFFCFFO DF$9"<"="A"E$:"8%J"
F7FFFFBFBF83FDEFFFFBFFFFFFFFDFO FF$E"8"="J":"8%J"
FFFFF7FBBBFF5FF7FBFFFFEFFO DF$=$>"="I$:%J"
F7FFFFFFEEFB7BFEF7FFFBEAAAABFFO#FF$8#9%:"8"J,J"
FFFFF7FF7FFDECFBDFFD7D=FEAAAAAAAABFFFFEAAAAA9O!DF$8#:"9&J"WJ"
F7FFFFF703E303C0F03E3E=FBO!FF$9":X<"8"J"
FFFFF7FFFFFFO=DF$J"9"J"
F7FFFF:FFFDO=FF$J"I"J"
FFFFF7:FEFDO-DF$="J"
F7FFFFFFP&FF$8":"J"J"
FFFFF7FFFDFFEO-DF$8"J"
F7FFFFF7P+FF$J"9"J"
FFFFF7:FFFFO=DF$J"9"E#J"
F7FFFF:FEFDFF7FO,FF$J"
FFFFF7P.DF$8'j%F"J"
F7FFFFF40000000025380400009BFO,FF$8'Z&J"
F55557F7FFFFFFFFFD2FEFFFFFFFDO=DF$8#:&C#8"F"J"
FFFFFFFFCFEF7C7DEFCFFFFDFFDFO,FF$8#9'C"9"J"
F7FFF7F7B7FFEF7BBDEFB7FEFDO=DF$9"9"8$J"
FFFFFFFBFDDDEF7BP!FF$8"<#E"J"i"J"
F7FFF7FF77FDFF4E03FKDF$8#9":"C"JZJ"
FFFFFFF7F7FFB7FE40KFF$9"9$8"J"
F7FFF7CFFDEF6FCFP!DF$8#:&C"9"J"
FFFFFFFFF7E06FFC0FB7FFFFO=FF$8#9'C"9"J"
F7FFF7F7FBFFEF6FFDEF7BFEFDO=DF$=$8"J"
FFFFFFFDEF777DP!FF$8"J"
F7FFF7FFP+DF$8#9'C"J"
FFFFFFF77BFFEF7BDDEF7BFFOAFF$9"9"8$C"J"
F7FFF7B7FDBDEFB7FEOADF$8#;%G"J"
FFFFFFFFCF7C7DEFCFFFO=FF$8#9QD"8"J"
F7FFF7F7FFFFFDO=DF$="H"J"
FFFFFFFDFFOAFF$J"J"
F7FFF7:FEOADF$8"J"
FFFFFFFFP+FF$8":"J"
F7FFF7F7FFP&DF$="H"9"J"
FFFFFFFDFFFFO=FF$J"9"J"
F7FFF7:FEFDO=DF$8"J"
FFFFFFFFP+FF$8":"J"
F7FFF7F7FFP&DF$8'z'J"
FFFFFFF22222000000188000484200005O=FF$8'Z&J"
F7FFF7F7FFFFFFFFFD2FEFFFFFFFDO=DF$J"
FFFFFFP.FF$8#9'C#J"
F7FFF7FFF7FFEF77DFEFCFFFF9O@DF$8":":"C#8"J"
FFFFFFF7FDB7FEF6FFO=FF$9";%D%J"
F7FFF7E7739FEF7BFF7FFFFDO=DF$J"
FFFFFFP.FF$9">"C$J"
F7FFF7D7B7FFFEFFO?DF$8":"8$C#J"
FFFFFFFFFF5FEFCFFEF9O@FF$8#9$8"D"J"
F7FFF7F7B7FDE075B7FEO@DF$>"9"D%J$J"
FFFFFFEF7BFF7FFFFFGFBFFFEAFF$9">"E$J$J"
F7FFF7777DBFFFFDGFDFFFDADF$9";#E"J$J"
FFFFFF0376DFFFKFEFFFBAFF$9"<$C$J$J"
F7FFF7F7DDEF7BFEEF7FIFF7FF7ADF$8":'D#J#J"
FFFFFFFFFFEF77DECFB7F6FFJBFEFAFF$8":"8$D"J#J"
F7FFF7F7FDDF3FCFF9KDFDFADF$9":PD"8"J*J"
FFF0FFFFFFFFHEFBF586E79FDB36C7F:FF$J"9"J*J"
F7F7F7:FFFDHF77F5BEEB2FDB56DFF:DF$J"J)J"
FFF7FF:FELFAFF5BE6DEFDAD2D;FF$J"<"J"
F7F1F7O9FD0D;DF$8":"J)J"
FFF7FFFFFFO1FAFF18D6D9FC2E0C;FF$8":"J)J"
F7F7F7F7FDO1F77F5BC6DBFDAD4D;DF$J"9"J(J"
FFF7FF:FFFFHEFBF5BDAB7FDB5<FF$J"9"J*J"
F7FFF7:FEFDHDFDF585A7085B36C7F:DF$J#RJ"
FFFFFFO9BFEF:FF$8'j%J#J"
F7FFF7F40000000005380400009H7FF7ADF$8ZJ$J"
FFFFFF=GFEFFFBAFF$J$J"
F7FFF7O8FDFFFDADF$J$J"
FFFFFFO8FBFFFEAFF$J$J"
F7FFF7O8FFFFFFADF$J"
FFFFFFP.FF$J"
F7FFF7P.DF$J"
FFFFFFP.FF$J"
F7FFF7P.DF$J"
FFFFFFP.FF$J"
F7FFF7P.DF$J"
FFFFFFP.FF$J"
F7FFF7P.DF$J"
FFFFFFP.FF$J"
F7FFF7P.DF$J"
FFFFFFP.FF$J"
F7FFF7P.DF$J"
FFFFFFP.FF$J"
F7FFF7P.DF$J"
FFFFFFP.FF$J"
F7FFF7P.DF$J"
FFFFFFP.FF$J"
F7FFF7P.DF$J"
FFFFFFP.FF$J"
F7FFF7P.DF$z"J"
FFFFF5M557FO.FF&ZJ"
F7FFFFFFBFLO.DF1<"B&8";"J"
FFFFF44AF44D254BFD522E8F1AAEAFFBEFDFFFF3223F7F7FO.FF58"8':&8(J"
4F7FFFD5AB54FA95FF852ED3F7AAC2FFFFFF52A40FFAB026EBD32C4FFFFE48AFFFFF3647A9FFFFFO.DF18#8"9&:&8(J"
FFFFF44AF4DDA85BF952E5BF7A2CAFFB6A52EFAEAEBD4AD4DFFFEECC7F7FF56AFA5FFF7FO.FF18#8"8&;"8#8(J"
F7FFFCDDB66F684FFD52559F3A2E8FFF2290FF89A66CBCEAFFCAFFFFF366F86FFFFFO.DF58"8&;%9(J"
4FFFFF55DF50D695BFA52C13F7AAD2FFBFFFB6252EF81AE6C3B6ADFFFE00A7FF626F85FFF7FO.FF18"9"8&;&8(J"
F7FFFD4DB44F254FF992D80F7AACAFFF6AFF86AEAB3B02FFFFF3263FFFF6AAFA1BFFFFO.DF)R"8#8"8':&8"9$J"
FFFFF7FFFFFDFFFBFB2AEAEFA6A2AB0BB66CDFFFFFFFFF7F9BFF7FO.FF)=P8"8Q:"<RJ"
F7FFFFFFBFFFFFFFFFFFO.DF)r)w/z"
FFFFF5555554AAA95552AAAAAAAAAAAAA5554AAAAAAAAAAAAA5555555555552AO.AABF$Z"T"Z"P%
F7FFF7O1FD7F7FDF7FFFFDF)="<"B"<";18"?#J"8(
FFFFFFFFBFFDFFFBFBEFDF7F7FFFFC9205BE25816409E95813D0127FFFCD076FFFEF242FFD903FF$P="<"B"<";18-J"8(
F7FFF7FFFFFFFFFFFFFAB2D5BF45B56539E95B43D2B63FFD8238410E381C008193552F6FDFFEE81F7D90BDF)="<"B"<";18#8(J"8(
FFFFFFFFBFFDFFFBFBEFDF7F7FFFF89241BF59906599E85993C2B2BFFFD21E3A3C018BA7C97FFFEED8DFF8927FF$P="<"B"<";18,J"8(
F7FFF7FFFFFFFFFFFFFAB2C8BF45B22531E85B4BC2B63FFDD2B8850EBA1D40ABA7587FDFFE21DF7AB67DF)="<"B"<";18$8'J"8(
FFFFFFFFBFFDFFFBFBEFDF7F7FFFFC92129F6484A409E14813D0B27FFFD2383A3D45AB87DA7FFFEF25DFFAB6BFF$P="<"B"<";z$8'J"s"
F55557FFFFFFFF355D23A051D048B977FFF6FD555F)="<"B"<";ZJQ%
F7FFFFFFBFFDFFFBFBEFDF7F=7F7FFFFFF$P="<"B"<";"j$?"J%8"8"
FFFFF7FFFFFFFF60/03FFFD7F7FDFF2FFEFFDF)="<"B"<";"Z$?"J"8"8"8"
F7FFFFFFBFFDFFFBFBEFDF7FEF/FBFFFFFF7FFFFF7FF$P="<"B"<";"G,J%8"8"
FFFFF7FFFFFFFF6FFDF290023001103807FF7F7FDFF0FFEFFDF)="<"B"<";"G':"J"8"8"8"
F7FFFFFFBFFDFFFBFBEFDF7FEFFFF490D23A80FF7FFFFF7FF$P="<"B"<";"j+8z8"8"8"
FFFFF7FFFFFFFF60/03FFFDF080527AA090B6955FEFFDF)="<"B"<";Z,Z8"8"
F7FFFFFFBFFDFFFBFBEFDF7F3F420D63A8010B80FFF4943:F7FF$P="<"B"<";"G(9#J+
FFFFF7FFFFFFFF7FFDF500523A0100C91B6FCAAAAAA55555555555F)="<"B"<";"GU#JU
F7FFFFFFBFFDFFFBFBEFDF7FFF450B6$P="<"B"<";"G"?#J%8"8"
FFFFF7FFFFFFFF7FFDC91B6FDE9607EF7DF)="<"B"<";"G"?#J%8"8"
F7FFFFFFBFFDFFFBFBEFDF7FFBFF49006FFEA6C3FFFFF$P="<"B"<";"i"8-J%8"8"
FFFFF7FFFFFFFF7B7FFDFC284BCBA1C25E07FFFFFF6FDE0643EF7DF)="<"B"<";#X9$;$J%8"8"
F7FFFFFFBFFDFFFBFBEFDF7FF17FFFFC2C17FF7F7FFE26C3FFFFF$P="<"B"<";"G(9"J%8"8"
FFFFF7FFFFFFFF7BFDFCAC03C3A1C0FF7FDEB607EF7DF)="<"B"<";"G(9"J%8"8"
F7FFFFFFBFFDFFFBFBEFDF7FFBFFFE8C03C181807F7FFFFFFFFFFFF$P="<"B"<";"i9)8"J+
FFFFF7FFFFFFFF71FDFE8429C581C00EFF7FCAAAAAAAAAAA555555F)="<"B"<";Z8%Q"J%Q
F7FFFFFFBFFDFFFBFBEFDF7F0FFFFFFFD7F7FFFFFFFE$P="<"B"<";"f";"8"<z$8"8"
FFFFF7FFFFFFFF6003FDFF955E0607FF7DF)="<"B"<";"V";"?S"Z$8"8"
F7FFFFFFBFFDFFFBFBEFDF7FEFFBFFFE0E868FEFFFF$P="<"B"<";"G-;&:$`%8"8"
FFFFF7FFFFFFFF6FFDFE400601C2261003FF0003800F80001F800D800DE1607FF7DF)="<"B"<";"f";%8';&:$P%8"8"
F7FFFFFFBFFDFFFBFBEFDF7FE003FFFEC52E461553FFBFFBBFEEBFFFDFBFEFBFEFE9687EFFFF$P="<"B"<";"W;,=">"<%8"8"
FFFFF7FFFFFFFF7FFDFE4C2E09D24E1543FF3FEFEDEDE9617FF7DF)="<"B"<";"d>,=">"<"s"
F7FFFFFFBFFDFFFBFBEFDF7FF0FFFEC16E21D20E1553FFBFEEEFEEAABF$P="<"B"<";"S">-;&:$`%P"
FFFFF7FFFFFFFF77FEFDFE446EB1D2A61543FF0003800F80001F800D800DFFFFFEDF)="<"B"<";"GW;&:%P$8"8"
F7FFFFFFBFFDFFFBFBEFDF7FF7FFFEFFFFFFFFFFFF7FD0345FF7FF$P="<"B"<";"G"?"=">"<%8"8"
FFFFF7FFFFFFFF77FD7FFFFD1DC5700EFFDF)="<"B"<";"d>"?"=">$9&8"8"
F7FFFFFFBFFDFFFBFBEFDF7FF0FFFFFEFFF80FC0DFC5740FF7FF$P="<"B"<";#>"=,=">$8'8"8"
FFFFF7FFFFFFFF7FB03FFDFE01420E180C3807FF7FFFFDF777F03FDDC1701EFFDF)="<"B"<";#S"=$8'=">,8"8"
F7FFFFFFBFFDFFFBFBEFDF7FF777BFFFFE21394C7827FFFFFEFFE77BFFFC0FFFDFC9701FF7FF$P="<"B"<";#F"9(=">,8"8"
FFFFF7FFFFFFFF7AF7FD4D193C380BFF7FFFFDDC1BFFE3FFFFDDFFFFFEFFDF)="<"B"<";"G+z&9*
F7FFFFFFBFFDFFFBFBEFDF7FFDFFFEA1020E3B4C7827FF1AAABDD5DFFEF555555555552AAAABF$P="<"B"<";#c"=%9/Q)S"
FFFFF7FFFFFFFF7FF03FFDFE81423807FF000003FFFFFFFF800E0007FD8000FFC000000FDF)r"<"B"<";V=U$:%<)>"
F7FFFFFFBFFDFFFAAAABEFDF7FBFFFFBBFEF7FF7FFD95DFFEFFFFFDDFF)S<"B"<z?"=">$:">"
FFFFF7FFFFFFFFFBFFFF9553FEEFDDD1DDFDF)="<"B"<Q"Z?"=">&8+
F7FFFFFFBFFDFFFFFBEFDF7F2BFEFFFEE3BFFE1DDFE4C956BFFCD7FFFFF)="<"B"<";#>"=,=$<2
FFFFF7FFFFFFFFFBFFFFFF7FC003DFFDFE07432250C20988FF3FEE0007FDF77BFFFE01FFDFFF405523E9C4FF3FDF)="<"B"<";#F.:%<)8(
F7FFFFFFBFFDFFFFFBEFDFFF5F7BFFFE87472003D063C9FF800003800FFFFFFFF767FFFFFE01DDD56FFF8DCFFFFF)="<"B"<";"G$8):#>$8-
FFF1F7FFFFFFFFFBFFFFFF7FDFFDFE8601C523C1FF7FFFFFFFFEFDF81FFFFE1FF9ACED0BC9C12F27DF)="<"B"<";*8)8)=">$9#T
F7E6FFFFBFFDFFFFFBEFDFFF5E7B280F2294A1C801F21085134A1FFFFF076283D16BC9FFFFFFFFFF7FFFFD)="<"B"<";$8%9"9$8)=">"<">"
FFEFF7FFFFFFFFFBFFFFFF7FDEBB2D95A1CA21919FFFFD876080C00BC8FF7FFEFDFFDF)="<"B"<";*9&Vz"s"
F7E8FFFFBFFDFFFFFBEFDFFF500B4D0F02A5A1EA019085524ADF85554AABF)="<"B"<";$8%8#8"8"?Z"
FFEEF7FFFFFFFFFBFFFFFF7FDDBB25A1A1CA21F6950AFDADF)="<"B"<";#8#8#8%8"?"F%@$
F7F4FFFFBFFDFFFFFBEFDFFF5FFB2289007F1485008AFF7FFD034553EE05FF)="<"B"<";#R#R"?"F%@$
FFF9F7FFFFFFFFFBFFFFFF7FC003FE01FDFFFF4B4557FE15DF)="<"B"<";#=#=5@$
F7FFFFFFBFFDFFFFFBEFDFFF7FFFFFFF?FFF94080070E0224C0FF7EDEEEF7390777783FF7061BEF61FE0C377D464D0BEE43FF)="<"B"<";"?"=5@$
FFFFF7FFFFFFFFFBFFFFFF7FFDFD?FDF9419A0E9E2AADD0FFFEED6EEF797F777BBFF77DEBEB5FFEEBDAFF068D13FE5BDF)="<"B"<";"?"=09"8$8&@$
F7FFFFFFBFFDFFFFFBEFDFFF7DFBFFF8401A069C2AA4C0FF7ECD6EEB55FFFBEB5EFFFD2A8D53EE8BFF)="<"B"<";#>"=.8$8$9&@$
FFFFF7FFFFFFFFFBFFFFFF7FF87FF7FDF8810A0E1C2A28D0FFFE1D610F70FB05F82D9DFFFFFFFFFFFFDF)="<"B"<";&8)938$9#C$
F7FFFFFFBFFDFFFFFBEFDFFF757F6B0A9FFCE30DEEFC845607FFF8852A875C2A05D8FF7EF86EC3557F777B7DFBEDDDFDEFFFFF)="<"B"<";&8%8#9"T&9'9"C$
FFFFF7FFFFFFFFFBFFFFFF7FC01F41581FFD6FBDCE52A7FDFEFBAEDD7DBFF77EEBEE5DFFFFFFDF)="<"B"<";%;"8$9"?"9/C$
F7FFFFFFBFFDFFFFFBEFDFFF757F5759BC0452B7FF7E6D07777C7FF7061BEE61831C3DFDEFFFFF)="<"B"<";%:':"?ZC$
FFFFF7FFFFFFFFFBFFFFFF7FF87F5619A7BAAEF80406FD2FFFFDF)="<"B"<";%:':,F"C$
F7FFFFFFBFFDFFFFFBEFDFFF7DFF40986FB86EF88022FFFF124057010253027F7FFDEFFFFF)="<"B"<";&:%;"8);';"C$
FFFFF7FFFFFFFFFBFFFFFF7FFDFF2A9A9FBA00F888FD4A4B510227047FFFDDB87ECDFDF7FFFFFFDF)="<"B"<";&8)9,;';"C$
F7FFFFFFBFFDFFFFFBEFDFFF7FFFFFFFFFFC63BB6E1FFDBFFFFFFF100A4F440287527F7F1CBFFE49FFFFFDEFFFFF)="<"B"<";"<(:,;';"C$
FFFFF7FFFFFFFFFBFFFFFF7FFCFFFFFFFDFFFFFFFDFF400A4B51022702FFFF0EBFC759FF7BFFFFFFDF)="<"B"<";#>"=,;';"C$
F7FFFFFFBFFDFFFFFBEFDFFF723FF1FFFF41425741005704FF7F28BFFC5DFE63FDEFFFFF)="<"B"<";#>"="U;';"C$
FFFFF7FFFFFFFFFBFFFFFF7FE8BFE3FDEB07FD957EFFFFFFFFDF)="<"B"<";#;-?";P<"C$
F7FFFFFFBFFDFFFFFBEFDFFF635FFC63BBC3F900408C677FFFFF7FFDEFFFFF)="<"B"<";/8$?"F"C$
FFFFF7FFFFFFFFFBFFFFFF7FD75F084014A2FFFD6BBBDFF81056BFFFFDFFFFFFFFDF)="<"B"<";+8#:,z"x$
F7FFFFFFBFFDFFFFFBEFDFFF635F50D295A9FFFCDF9B0450FFFFE148B864C0001FFF2A0AAA9554AAABF)="<"B"<";$8*:*R"Z"R"
FFFFF7FFFFFFFFFBFFFFFF7FE81ED0ADFFFE5F5B87F9045CFDFFE0481A65C6808FDF2EFDF)="<"B"<";&8*8$9(9#:&8#:"="
F7FFFFFFBFFDFFFFFBEFDFFF773F005294FB6F1B5FF9105C8425FFFFE8C2802FFF00000FF000FA0000003F4000FFFF)="<"B"<";%9(809#:&8#:$;"
FFFFF7FFFFFFFFFBFFFFFF7FF8FF0842FD6B6ADFFA10547FFFFDFFE1085A69C680AFFFBFFFEFD7FEFEFFFFFFBFDFFEE0003FDF)="<"B"<";"Q)P*;";"<";$;"
F7FFFFFFBFFDFFFFFBEFDFFF7FFEF76843FF8673DEE2081A60C2801FFF3FF7FA5FF7FFBFFF)="<"B"<";#;S9"T";";"<";"="
FFFFF7FFFFFFFFFBFFFFFF7FF803FDBFD7FEDFE7DF)="<"B"<";#>"="?";";"<";"="
F7FFFFFFBFFDFFFFFBEFDFFF7BFBF6FF3FF7FA5FF7FF)="<"B"<";#>"="?$9#:&8#:$;"
FFFFF7FFFFFFFFFBFFFFFF7FF7F7EDFD80000FD000FE0000003FC000E0003FDF)="<"B"<";&C"8%9$9#:&8#:$;"
F7FFFFFFBFFDFFFFFBEFDFFF77F71A02DFFFF10E80537FFFFFFFFFFBFFFFFFFF7FFFFFFFFFFF)="<"B"<";&;&9"8%9";";"<";"="
FFFFF7FFFFFFFFFBFFFFFF7FEFEF5B461FDBF94AD1C0FDF00E20C7FFDFFFFFEFDF)="<"B"<";&;"8#9";"9";";"<";"="
F7FFFFFFBFFDFFFFFBEFDFFF6FEF1B429FB7D5C4FF577FFFFB7FFFFF)="<"B"<";&;&9"8%9";";"<";"="
FFFFF7FFFFFFFFFBFFFFFF7FEFEF59475F6FF942D1D4FDF10EA0A7FFDFFFFFEFDF)="<"B"<";&<%9":#9";";"<";"="
F7FFFFFFBFFDFFFFFBEFDFFF5FDF59461FFB00D5C8FF20C77FFFFB7FFFFF)="<"B"<";&:'9"8%9";";"<";"="
FFFFF7FFFFFFFFFBFFFFFF7FC01F4142DFFEDFFB044054FDF50E0457FFDFFFFFEFDF)="<"B"<";&:Q9"8%9";";"<";"="
F7FFFFFFBFFDFFFFFBEFDFFF7FFFFFFFFFFFFFFFFFFF7FFFFB7FFFFF)="<"B"<";"G"?";";"<";"="
FFFFF7FFFFFFFFFBFFFFFF7FFFFDFFDFFFFFEFDF&u)z"v)x"
F2AAAAAA955552AAAAAAAAAAAAA5O'552AAAA95555555555552AAABFZ
P2












































8&9&9&8-8'8%9"
F3F3F7DFE0FBFFF0FBFBE07771F07FFDFCFCF837BFFFFBBEFBD83FFE7DDF7C181F3F7C1C1F3F8#8"9&9&9%;#8-8#
EDEDEFF5FFF7F5F5FDF776F7FFFB7B7BF7DBFFFDBDDF7DFF7FFFFEDF7FDDFFFEDF8$;"8#:$9,:#:"8"9#
DDDDF3EDF6F6FAF777FCF7777BF33FFFF9BD7B9BDDDEFDBDFCEF8$9(>';"8"8$9#:$
EFDFEBF3FFEEFFF1EEEEFDFFFAFBFBFB79FEFDDEBDFEFF3FFDFF8#:"9"<$:#:"8"9"<%8"
F7BFFBF6FDF6F7FDFDFA5BFEFF7F7F7DBF8"9$9"=%8%9,9'
FBE3FFFFFEF1F1FFFFFEFEF8F5BB79587FFFFFFF7C1DBC7FBF7F7C3FFFFF8&C#9'9$9%9%
FDBFEDDFEFF7F7FB7F7F7BF4BFB95BFFBDDDBDFFDF7F7DFF8$=#A&8%9%9%
DDDFE1FF6EF877777BF6FB383ADBFBDDDC3DFDDF7EFD9#;&@"=#:%@#
DDDDEDFFEEF6F6F73BBAFDDDDDDDFEEF8$9(>"8%9#8"8#:$9$
EDEDDEF7FFF5FBF6F5F5FDBB7B7BF7B7DBFEBDDBFEDF7D7FFEDF8.<#9%;#8#;*
F3F3DEC0E0FFF3FFFBFBF9FBFBF07FBCFCF837D83FFE7DFF3F7C1C1FFF3FFF3F8X9Z8S
;




ENDBITMAP
%%EndBinary
0 12 Q
( detailed view) 370.88 541 T
(view 2) 433.88 568 T
(view 1) 145.88 559 T
(sketch spline for) 262.88 586 T
(detailed view) 262.88 574 T
418.91 595.53 419.5 601.5 424.37 598.01 421.64 596.77 4 Y
V
431.5 575 421.64 596.77 2 L
0.5 H
2 Z
N
342.76 545.28 338.49 549.5 344.28 551.09 343.52 548.18 4 Y
V
370.88 541 343.53 548.18 2 L
N
285.41 606.5 285.5 612.5 290.65 609.43 288.03 607.97 4 Y
V
295 595.5 288.04 607.96 2 L
N
176.01 603.57 181.25 606.5 181.17 600.5 178.59 602.04 4 Y
V
159.25 569.5 178.59 602.03 2 L
N
0 10 Q
(note location) 253 679.5 T
315.75 679.73 320 675.5 314.21 673.93 314.98 676.83 4 Y
V
304.94 679.5 314.98 676.83 2 L
N
72 72 540 720 C
0 0 612 792 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "12" 4
%%Page: "11" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 0 0 0 1 1 1]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(9-11) 72 36 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(PTC Confidential) 270.58 36 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(PICKS) 512.22 36 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(TANGNT CHAIN / {pick top edge of surface} / DONE / DONE/RETURN / DONE /) 108 712 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(TANGNT CHAIN / {pick first compete chain above the start cutline} / DONE /) 108 698 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(DEFINE / DONE / {pick all of the edges in the chain below the end cutline,) 108 684 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(individually} / DONE / DONE/RETURN / OKAY / SHOW / DONE/RETURN / SEL) 108 670 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(BY MENU / "core_work.prt" / "from_home") 108 656 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
({set up check surfaces}) 108 628 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(SEQ SETUP / CHECK SURFS / DONE / {select surfaces on reference part to check) 108 614 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(gouging against. pick the top horizontal surfaces of the extract} / SHOW / DONE/) 108 600 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(RETURN / DONE SEQ) 108 586 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
({verify the toolpath}) 108 558 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(CL DATA /) 108 544 T
0 0 0 1 0 0 0 K
2 F
(mapkey "vd") 169 544 T
0 0 0 1 0 0 0 K
0 F
( / INPUT / "cutline.ncl" DONE/RETURN / DONE/RETURN) 238.66 544 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(/) 108 530 T
0 0 0 1 0 0 0 K
2 F
(mapkey "rr") 114.34 530 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
({setup for displaying drawing}) 108 502 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(MFG SETUP / MFG GEOMETRY / DONE/RETURN /) 108 488 T
0 0 0 1 0 0 0 K
2 F
(mapkey "nh") 382.01 488 T
0 0 0 1 0 0 0 K
0 F
( /MFG SETUP) 452.34 488 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(FIXTURE / ACTIVATE / VISE / DONE SEL / DONE/RETURN) 108 474 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(SETUP DRAWING DELIVERABLE) 72 446 T
0 0 0 1 0 0 0 K
0 F
({retreive drawing and show tool path}) 108 432 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(MODE / DRAWING / SEARCH/RETR / "drill_core_fixture.drw" / VIEWS / DISP) 108 418 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(MODE / TOOL PATH / SHOW PATHS /SEL BY MENU / "core_work.prt" / NAME /) 108 404 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
("11: volume milling" / DONE/RETURN / QUIT WINDOW / CHANGEWINDOW /) 108 390 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
({change back to the mfg window}) 108 376 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
({setup for next sequence}) 108 348 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(MFG SETUP / FIXTURE / ACTIVATE / VISE / DONE/RETURN) 108 334 T
0 0 0 1 0 0 0 K
2 F
(mapkey "hl") 108 320 T
0 0 0 1 0 0 0 K
0 F
( / DONE/RETURN) 175 320 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(SHAFT MANUF) 72 292 T
(ACTURING) 158.77 292 T
0 F
(MANUF) 108 278 T
(ACTURE / SEARCH/RETR / SHAFT) 150.44 278 T
(.MFG / VIEW / NAMES / ISO / DISP) 335.58 278 T
(DTMPLN / DONE-RETURN /) 108 264 T
2 F
(mapkey \322sd\323) 261.32 264 T
0 F
( / DONE-RETURN / QUIT WINDOW) 328.33 264 T
2 F
(BEGIN SHAFT DOCUMENT) 72 236 T
(A) 227.12 236 T
(TION) 234.9 236 T
0 F
-0.03 (DRA) 108 222 P
-0.03 (WING / RETRIEVE / shaft / VIEWS / shaft.asm / SCALE / DONE {select the view) 132.37 222 P
(1 center point in the upper left corner of the screen, see Figure 1} /.8 / NAMES / 2D /) 108 208 T
(DONE/RETURN) 108 194 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "11" 5
%%Page: "10" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 0 0 0 1 1 1]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(9-10) 72 36 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(PTC Confidential) 270.58 36 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(PICKS) 512.22 36 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
({modify the ends of the cut motion}) 108 712 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ENDS / START / SPECIFY / DONE / {Adjust chain end using mouse} / EXT LENGTH) 108 698 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(/ .5 / END / SPECIFY / DONE / {Adjust chain end using mouse} / EXT LENGTH / .5 /) 108 684 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(DONE/RETURN / PLAY CUT / TIME INCREMENT / ENTER /.5 / PLAY CUT /) 108 670 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(DONE CUT / {customize the cut motion with an additional tool motion} / TOOL) 108 656 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(MOTION / RETRACT / DONE SEQ) 108 642 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
({setup for next sequence}) 108 614 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(MFG SETUP / MFG GEOMETRY / MILL SURFACE / UNBLANK /) 108 600 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
("chuck_key_bottom" / DONE/RETURN / DONE/RETURN) 108 586 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(3 AXIS CONVENTIONAL SURFACING SEQUENCE) 72 558 T
0 0 0 1 0 0 0 K
0 F
({set up nc sequence}) 108 544 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(NC SEQUENCE / NEW SEQUENCE / CONVENTL SRF / DONE / TOOL / CHECK) 108 530 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(SURFS / DONE / "0_1875_ball_cutter" / DONE SEL / RETRIEVE / "d_key_area" /) 108 516 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(DONE / MILL SURFACE / DONE / SELECT SRF / "chuck_key_bottom" / OKAY /) 108 502 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(SELECT ALL / SHOW / DONE/RETURN / {select surfaces on reference part to check) 108 488 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(gouging against. "chuck_key_surf"} / DONE SEL / SHOW / DONE/RETURN) 108 474 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
({verify the tool path with solid tool}) 108 446 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(PLAY PATH / DONE CL / PREV GOTO / PREV GOTO / VIEW / LAYER DISP /) 108 432 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(WORK / DONE SEL /) 108 418 T
0 0 0 1 0 0 0 K
2 F
(mapkey "rr" /) 220.99 418 T
0 0 0 1 0 0 0 K
0 F
(CL MEASURE /) 297.97 418 T
0 0 0 1 0 0 0 K
2 F
(mapkey "sd") 382.98 418 T
0 0 0 1 0 0 0 K
0 F
( / CL MEASURE) 451.31 418 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(/ CLEAR/INTF / {select first object, part "0_1875_ball_cutter"} / {select second object}) 108 404 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(/ SURFACE / {pick the surface directly underneath the tool tip} / DONE SEL / DONE/) 108 390 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(RETURN / DONE/RETURN / DONE / DONE SEQ / VIEW / LAYER DISP / WORK /) 108 376 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(DONE SEL /) 108 362 T
0 0 0 1 0 0 0 K
2 F
(mapkey "rr") 175 362 T
(mapkey "vn) 108 334 T
0 0 0 1 0 0 0 K
0 F
(" / BACK_ISO / {zoom into the area just machined} /) 171 334 T
0 0 0 1 0 0 0 K
2 F
(mapkey "vd") 433.07 334 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
({setup for next sequence}) 108 306 T
0 0 0 1 0 0 0 K
2 F
(mapkey "vn) 108 292 T
0 0 0 1 0 0 0 K
0 F
(" / BACK_ISO / {zoom into the area just machined} /) 171 292 T
0 0 0 1 0 0 0 K
2 F
(mapkey "vd") 433.07 292 T
0 0 0 1 0 0 0 K
0 F
(MFG SETUP / MFG GEOMETRY / MILL SURFACE / BLANK / "rough_v_all" /) 108 278 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(BLANK / "chuck_key_surf" / BLANK / "chuck_key_bottom" / UNBLANK /) 108 264 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
("batt_hous_srf" / DONE/RETURN /) 108 250 T
0 0 0 1 0 0 0 K
2 F
(mapkey "rr") 286.45 250 T
0 0 0 1 0 0 0 K
0 F
( / DONE/RETURN) 354.1 250 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(3 AXIS CUTLINE SURFACING SEQUENCE) 72 222 T
0 0 0 1 0 0 0 K
0 F
({set up nc sequence}) 108 208 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(NC SEQUENCE / NEW SEQUENCE / CONTOUR SRF / DONE / ALONGCUTLINE /) 108 194 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(DONE / TOOL / END / DONE / "0_1875_ball_cutter" / DONE SEL / RETRIEVE /) 108 180 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
("d_cutline" / DONE / MILL SURFACE / DONE / BLANK / "rough_v_all" /) 108 166 T
0 0 0 1 0 0 0 K
2 F
( mapkey) 477.58 166 T
("rr") 108 152 T
0 0 0 1 0 0 0 K
0 F
( / SELECT SRF / "batt_hous_srf" / OKAY /) 131.98 152 T
0 0 0 1 0 0 0 K
2 F
(mapkey "vn") 347.45 152 T
0 0 0 1 0 0 0 K
0 F
( / BATT_HOUS /) 417.11 152 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(SELECT ALL / SHOW / DONE/RETURN / DONE /) 108 138 T
0 0 0 1 0 0 0 K
2 F
(mapkey "rr") 368.99 138 T
0 0 0 1 0 0 0 K
0 F
( / INNER CUTLINE) 436.63 138 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(/ DONE / DONE) 108 124 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
({define start/end cutlines}) 108 96 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(TANGNT CHAIN / {pick bottom edge of surface} / DONE / DONE/RETURN / DONE) 108 82 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "10" 6
%%Page: "9" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 0 0 0 1 1 1]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 10 Q
0 X
0 0 0 1 0 0 0 K
(9-9) 72 36 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(PTC Confidential) 270.58 36 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(PICKS) 512.22 36 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
(INTRODUCTION TO MANUFACTURING PICKS) 171.5 712 T
(SETUP / PREPARATION) 72 684 T
0 0 0 1 0 0 0 K
0 F
(Bring everything into session by running the trail file \322setup18.txt\323) 108 670 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(SETUP / INTRODUCTION) 72 642 T
0 0 0 1 0 0 0 K
0 F
({run nc check}) 108 628 T
0 0 0 1 0 0 0 K
2 F
(mapkey \322ncc\323) 108 614 T
0 0 0 1 0 0 0 K
0 F
( / INTRO / DONE/RETURN / CONFIRM / DONE/RETURN) 181 614 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
({deactivate fixture}) 108 586 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(MFG SETUP / FIXTURE / ACTIVATE / VISE / DONE/RETURN / DONE/RETURN /) 108 572 T
0 0 0 1 0 0 0 K
2 F
(mapkey "rr") 108 558 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(VOLUME ROUGHING SEQUENCE) 72 530 T
0 0 0 1 0 0 0 K
0 F
({set up nc sequence}) 108 516 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(MACHINING / NC SEQUENCE / NEW SEQUENCE / DONE / TOOL / APPR WALLS) 108 502 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(START / END / WINDOW / DONE / "0_75in_rem" / DONE SEL / RETRIEVE /) 108 488 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
("d_roughv" / DONE) 108 474 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
({create mill window and approach walls}) 108 446 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(CREATE WIND / "rough_all" / SKETCH / GEOM TOOLS / OFFSET EDGE / SEL) 108 432 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(LOOP / {select top plane of workpiece model} / REGENERATE / DONE / OKAY /) 108 418 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
({define approach and exit walls from edges belonging to "rough_all" by picking all) 108 404 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(edges of the window} / DONE / {select "from_home" point on screen, twice}) 108 390 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
({display the tool path}) 108 362 T
0 0 0 1 0 0 0 K
2 F
(mapkey \322vd\323) 108 348 T
0 0 0 1 0 0 0 K
0 F
( / PLAY PATH / DONE CL / DONE SEQ) 176.34 348 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
({prep for sequences on top of drill, around the chuck key holder}) 108 320 T
0 0 0 1 0 0 0 K
2 F
(mapkey "vn") 108 306 T
0 0 0 1 0 0 0 K
0 F
( / "chuck_key" / DONE-RETURN / MFG SETUP / MFG GEOMETRY /) 177.66 306 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(MILL SURFACE / UNBLANK / "chuck_key_surf" / DONE/RETURN / DONE/) 108 292 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(RETURN) 108 278 T
0 0 0 1 0 0 0 K
2 F
(TRAJECTORY MILLING SEQUENCE) 72 250 T
0 0 0 1 0 0 0 K
0 F
({set up nc sequence}) 108 236 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(NC SEQUENCE / NEW SEQUENCE / TRAJECTORY / DONE / TOOL / DONE /) 108 222 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
("0_375in_em" / DONE SEL / RETRIEVE / "d_traj" / DONE /) 108 208 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
({create cut motion}) 108 180 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
({select edges to form trajectory - the bottom edge of the vertical holder walls} / EDGE /) 108 166 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(DONE / START HEIGHT / DONE / BNDRY CHAIN / {Select a quilt surface) 108 152 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
("chuck_key_surf"} / FROM-TO / {select the points that will bound all the inside walls) 108 138 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(of the holder} / ACCEPT / DONE / FLIP / OKAY / LEFT / DONE / {specify the start) 108 124 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(height of the tool path by selecting the top flat surface that abuts the side surfaces of the) 108 110 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(holder} / SHOW / DONE/RETURN / {zoom into the cut motion}) 108 96 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "9" 7
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Descend
%%Pages: 7
%%DocumentFonts: Times-Roman
%%+ Times-Italic
%%+ Times-Bold
%%EOF
