%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{1 dict dup /PageSize [paperwidth paperheight]put setpagedevice}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 {1 dict dup /ManualFeed manualfeed put setpagedevice } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 4 FMDOCUMENT
0 0 /Times-Bold FMFONTDEFINE
1 0 /Times-Italic FMFONTDEFINE
2 0 /Times-Roman FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "7" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 1 1 0 1 0 0]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 14 Q
0 X
0 0 0 1 0 0 0 K
(DRAWING PICKS) 247.47 746.67 T
72 30.67 540 42.67 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 41.67 540 41.67 2 L
1 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
72 38.67 540 38.67 2 L
N
0 0 612 792 C
1 10 Q
0 X
0 0 0 1 0 0 0 K
(PICKS) 72 24 T
(PTC Confidential) 270.58 24 T
(17-7) 521.67 24 T
71.4 744 540.59 743.4 2 L
0.9 H
2 Z
N
540.59 740.4 71.4 740.4 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
576 504 612 576 R
V
0 0 0 0 1 1 1 K
2 12 Q
7 X
0 0 0 0 1 1 1 K
(DRA) 0 -270 594.65 514.2 TF
(WING) 0 -270 594.65 538.57 TF
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 14 Q
0 X
0 0 0 1 0 0 0 K
(DRAWING PICKS) 247.47 710.67 T
0 12 Q
(SET UP/INTRODUCTION) 72 681 T
2 F
( / QUIT WINDOW / CHANGE WINDOW  \050Select  main window\051 / QUIT WINDOW/) 103.8 646 T
0 F
(RETRIEVE DRA) 72 604 T
(WING) 162.34 604 T
2 F
(DRA) 103.8 569 T
(WING / SEARCH/RETR/ demo.drw / VIEWS / SCALE / DONE  !Enter scale for) 128.17 569 T
(view [10] / FRONT !Select front surface / BOTT) 103.8 548 T
(OM !Select bottom surface/ NAMES /) 339.54 548 T
(GOODVIEW / DONE/RETURN / DONE/RETURN / SHEETS / FORMA) 103.8 527 T
(T / ADD/) 461.78 527 T
(REPLACE !Enter Format name  [DEMO_A1]: /{zz} !around title block/ {zr} / MODIFY) 103.8 506 T
(!Select view scale and enter [1.5] / VIEWS / MOVE VIEW !Select view to move next to) 103.8 485 T
(title block/ RESUME VIEW / SELECT ALL / DONE SEL/ DONE/RETURN / SET UP /) 103.8 464 T
-0.35 (MODIFY V) 103.8 443 P
-0.35 (AL !show contents of setup \336le and exit / RETRIEVE !Directory searched is to) 160.9 443 P
(show other setup \336les for dif) 103.8 422 T
(ferent standards / QUIT SELECT /) 241.24 422 T
0 F
(ADD VIEWS T) 72 380 T
(O DRA) 151.79 380 T
(WING) 188.78 380 T
2 F
(VIEWS / ADD VIEW / DONE !Select under the left most view/ MOVE VIEW !Select) 103.8 345 T
(projection view and nicely place / ADD VIEW / DET) 103.8 324 T
(AILED / DONE !Center to the right) 361.11 324 T
-0.39 (of the last projection !Enter scale for view [10] / ADD VIEW / SECTION / DONE / DONE) 103.8 303 P
(!Select under the 2nd view from right for projection, section [D] / VIEW / MOVE VIEW) 103.8 282 T
(!Select views to move if necessary) 103.8 261 T
0 F
(MODIFY VIEW DISPLA) 72 219 T
(Y) 204.23 219 T
2 F
(VIEWS / DISP MODE / VIEW DISP !Select all views / DONE SEL / NO HIDDEN /) 103.8 184 T
(DONE) 103.8 163 T
0 F
(DET) 72 121 T
(AIL THE DRA) 95.78 121 T
(WING) 173.12 121 T
2 F
-0.39 ({zz} !Zoom in on projection view in lower left / DET) 103.8 86 P
-0.39 (AIL / SHOW/ERASE  !In dialog box:) 356.41 86 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "7" 1
%%Page: "8" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 1 1 0 1 0 0]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 14 Q
0 X
0 0 0 1 0 0 0 K
(DRAWING PICKS) 247.47 746.67 T
72 30.67 540 42.67 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 41.67 540 41.67 2 L
1 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
72 38.67 540 38.67 2 L
N
0 0 612 792 C
1 10 Q
0 X
0 0 0 1 0 0 0 K
(17-8) 72 24 T
(PTC Confidential) 270.58 24 T
(PICKS) 511.62 24 T
71.4 744 540.59 743.4 2 L
0.9 H
2 Z
N
540.59 740.4 71.4 740.4 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
(`chk_dim` ,  `chk_surf) 103.8 712 T
(\336n` , `chk_preview`,  `feature and view`  / SEL BY MENU !Select) 211.56 712 T
(the view / NUMBER RANGE !Enter  [1], [20]/ DONE SEL !Pick select to keep from pre-) 103.8 691 T
(view section of dialog box and select items in the view / DONE SEL !Close dialog box /) 103.8 670 T
-0.37 (T) 103.8 649 P
-0.37 (OOLS / CLEAN DIMS !Enter of) 110.92 649 P
-0.37 (fset [10] and distance between [10] !Select view to clean) 268.48 649 P
(dimensions.  / DONE/RETURN / SWITCH VIEW !Select one or more detail items to) 103.8 628 T
(switch view) 103.8 607 T
(. / MOVE !Select detail items to move - use Pop-Up modify if desired \050right) 160.68 607 T
(mouse in graphics window\051 !Also use \337ip arrows \050midde mouse\051 and clip / {vr}) 103.8 586 T
0 F
(CREA) 72 544 T
(TE GEOMETRIC T) 105.11 544 T
(OLERANCES) 210.91 544 T
2 F
(DET) 103.8 509 T
(AIL / CREA) 126.17 509 T
(TE  / GEOM T) 186.17 509 T
(OL / ENVIRONMENT / DISP DTMPLN  / DONE-) 258.61 509 T
(RETURN / VIEW  / REP) 103.8 488 T
(AINT / DONE-RETURN / SET DA) 225.7 488 T
(TUM !Select datum \322F\323 !In) 398.67 488 T
(dialog box change the name and unset and set the datum  / SPECIFY T) 103.8 467 T
(OL !Select symme-) 444.89 467 T
(try !In dialog box select: Surface \050right tab surface in view\051, Normal Ldr \050select on 24.8) 103.8 446 T
(width dimension, Primary datum [E] Secondary datum [F], T) 103.8 425 T
(olerance value [0.1] / DONE/) 396.93 425 T
(RETURN / DONE-RETURN / DONE/RETURN / {zr}) 103.8 404 T
0 F
(CREA) 72 362 T
(TE SYMBOL AND NOTE) 105.11 362 T
2 F
(SHEETS / ADD / INTERF) 103.8 327 T
(ACE / IMPOR) 233.58 327 T
(T / DWG / AUT) 304.2 327 T
(OCAD.DWG / DET) 383.3 327 T
(AIL / CRE-) 480.66 327 T
(A) 103.8 306 T
(TE  / SYMBOL / DEFINITION / DEFINE !Enter symbol name [PTC_LOGO] / COPY) 111.13 306 T
(DRA) 103.8 285 T
(WING / PICK MANY !Pick around the PTC stuf) 128.17 285 T
(f / DONE SEL / A) 365.27 285 T
(TTRIBUTES !In) 452.93 285 T
(the dialog box pick:  free, variable size / DONE  / WRITE / DONE / DONE/RETURN /) 103.8 264 T
(DONE/RETURN / SHEETS / REMOVE !Sheet numbers [2] / DET) 103.8 243 T
(AIL / CREA) 428.48 243 T
(TE  /) 488.48 243 T
(SYMBOL / INST) 103.8 222 T
(ANCE !Show preview of some symbols and then place the ptc_logo /) 188.84 222 T
(DONE/RETURN  / NOTE / FILE / MAKE NOTE !Select lower left for location /) 103.8 201 T
(NOTE.TXT / VIEW !Indicate two locations to de\336ne a box for the zoom area. / {zz} on) 103.8 180 T
(note/ {zr} / DONE-RETURN / DONE/RETURN / DONE/RETURN) 103.8 159 T
0 F
(DRA) 72 117 T
(WING PROGRAM) 96.66 117 T
2 F
-0.23 (PROGRAM / DEFINE ST) 103.8 82 P
-0.23 (A) 230.49 82 P
-0.23 (TES / EDIT ST) 237.82 82 P
-0.23 (A) 311.18 82 P
-0.23 (TE / NO_DET) 318.51 82 P
-0.23 (AILED_VIEWS / {vr} / PLA) 387.75 82 P
-0.23 (Y) 528.57 82 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "8" 2
%%Page: "9" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 1 1 0 1 0 0]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 14 Q
0 X
0 0 0 1 0 0 0 K
(DRAWING PICKS) 247.47 746.67 T
72 30.67 540 42.67 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 41.67 540 41.67 2 L
1 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
72 38.67 540 38.67 2 L
N
0 0 612 792 C
1 10 Q
0 X
0 0 0 1 0 0 0 K
(PICKS) 72 24 T
(PTC Confidential) 270.58 24 T
(17-9) 521.67 24 T
71.4 744 540.59 743.4 2 L
0.9 H
2 Z
N
540.59 740.4 71.4 740.4 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
576 504 612 576 R
V
0 0 0 0 1 1 1 K
2 12 Q
7 X
0 0 0 0 1 1 1 K
(DRA) 0 -270 594.65 514.2 TF
(WING) 0 -270 594.65 538.57 TF
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 X
0 0 0 1 0 0 0 K
(CMDS / RECORD CMDS / MOVE !Select the symbol and move up / VIEWS / ERASE) 103.8 712 T
(!Select the detailed view and enter [Y] for all prompts/ DONE SEL / DONE  / PLA) 103.8 691 T
(Y) 503.96 691 T
(CMDS / DONE/RETURN / DONE/RETURN / EDIT PROGRAM !Show the logic state-) 103.8 670 T
(ment in the program/ DONE / DONE/RETURN) 103.8 649 T
0 F
(MODIFY P) 72 607 T
(AR) 131.44 607 T
(T - ASSOCIA) 148.34 607 T
(TIVITY) 218.8 607 T
2 F
(MODE / P) 103.8 572 T
(AR) 154.03 572 T
(T / SEARCH/RETR / IN SESSION / SWITCH_BUTT) 169.98 572 T
(ON.PR) 434.11 572 T
(T / VIEW /) 468.39 572 T
-0.47 (NAMES / RETRIEVE / GOODVIEW / DONE-RETURN / VIEW / COSMETIC / SHADE) 103.8 551 P
(/ DISPLA) 103.8 530 T
(Y / DONE-RETURN / REGENERA) 151.03 530 T
(TE / ENTER / SELECT ALL / DONE SEL) 326.35 530 T
(!Enter [NO], [28], [7], [13]  / VIEW / COSMETIC / SHADE / DISPLA) 103.8 509 T
(Y / DONE-) 447.31 509 T
(RETURN /!Spin model if desired/ CHANGEWINDOW !Select on drawing window /) 103.8 488 T
-0.12 (VIEW / REGEN VIEW / CUR SHEET / VIEWS / MOVE VIEW !Select views to move if) 103.8 467 P
(necessary/ QUIT WINDOW) 103.8 446 T
0 F
(COMPLEX DRA) 72 404 T
(WING) 160.99 404 T
2 F
(DRA) 103.8 369 T
(WING / VIEWONL) 128.17 369 T
(Y RET  / COMPLEX_COVER.DR) 224.94 369 T
(W / VIEW / P) 394.62 369 T
(AN/ZOOM) 461.51 369 T
(!Zoom on main view / VIEW / P) 103.8 348 T
(AN/ZOOM / RESET / DONE-RETURN) 260.35 348 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "9" 3
%%Page: "10" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 1 1 0 1 0 0]
 8 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 14 Q
0 X
0 0 0 1 0 0 0 K
(DRAWING PICKS) 247.47 746.67 T
72 30.67 540 42.67 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 41.67 540 41.67 2 L
1 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
72 38.67 540 38.67 2 L
N
0 0 612 792 C
1 10 Q
0 X
0 0 0 1 0 0 0 K
(17-10) 72 24 T
(PTC Confidential) 270.58 24 T
(PICKS) 511.62 24 T
71.4 744 540.59 743.4 2 L
0.9 H
2 Z
N
540.59 740.4 71.4 740.4 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 72 540 720 C
72 279 540 624 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 X
0 0 0 1 0 0 0 K
%%BeginBinary:  35602    
783 555 469.8 333 0 69.57 282
 BEGINBITMAPTRUECOLORc
























?j
^;

@Z
^9

J#J"J#J"J"J"J#J"J"J"J"J#J"
O*0000O 00O 0000O!00O 00O!00M0000O!00P"00O 00O"00M0000O!00

J#J#J#J"J"J#J$J#
O)00FFP!00FFP"00FFP"FFP"00P"FF00P!FFFF00P 0000

J#J"J"J"J#J#J#J"
O)FF00P!FFP$00P"00P!00FFP"00FFP"00FFP FF

J#J%J$J"J#J#
O)00FFR$00FFFF00P FFFF00P!00P"FF00P!00FF

J#J#J"
Q-00FFP FF00R'00

J$J"J$J$J$J"J"J"
O)FF00FFP!FFP"FF00FFP 00FFFFP FFFFFFP!00P#00P"FF

J"J"J"J#J#
O*FFR&FFP!FFR&FFFFP!FFFF

Jj
7]M

JZ#>#VEV$="
8\=00FFFF0000FFFFFF

JQEXFP
]*




Jj
](O-

JU"Z"U
](00E00




Jc
XK

J"R
XJ00

JaJj
XLR$O-

J%JZ
XMFFFFFFFFR$O.







J"JaJ"
X 00JJ00

Jj?j
X!IH

JZ
X!OL

Jd
XJ

JR
XK

Ja
XL

JdJ%
Q$U@FFFFFFFF

J";"
Q%FFFF

J&
Q'FFFFFFFF00

J"JaJ"
X2008800

Jj?j
X376

J$Z
X3FFFF00O%

J"JaJ"J"Ja
P400>C00T4FF6

Jj?jJ"8"
P5=ATMFFFF

JZJ%
P5O9TM00FFFF00

J"=#
]0000000

J"
]/00

J#8"
]0FF0000

Je:#J"?#="J"9"8"
P90000UI00000000R&00FF00

J"T8"="J#Jb<`J"=$
P8000000O10000T3R'FFFFFF00

J$J"JZJ$;"8"
PC000000O8FFT42R&FFFFFFFFFF

J"J"C"Ja
P)00@0000UE

Jj:"8jJ(J"P
P*800/O!00000000FF00FFT=00

J$R"ZJ&J$
P*FFFF0000CO 00FFFFFFFFTB000000

J"J#J"
P,FFP"00FFTAFF

J#:$
R)00FFFF0000

J#<#
R(00FFFFFF

J%J"9"
P#00000000VG0000

J#J#J#8#9"9#
P$FFFFP!00FFTB0000FF00000000

J"J#J"8$<"9#
P.00OE00FFTB00000000000000

J#<#J#J";&S&Jd
P'00000000OB00FFT=FFFFFFFFFF0000FFFFFFFFR(

J$:%9#J#JR
P#FF0000000000000000V'0000RI

J#;P+J#J%J"8"
OK000000FFFFFFFF00FFFFFFFFO?00FFT300FFFF00R<0000

JcA"J#J"<"
O700P&00FFY$0000

JR"='J#J%Jj
O80000000000FFFFP#00FFT@00000000R-7

J"<$J#B%J#C)Z
OB00FFFF00V<000000000000QH0000FFFFFFFF00FFFF000

J";$;$J#Jb>#
OC000000FF00FF00OI00FFT:0000

Je8$:gJ"JV>#J"
O8000000OFFFT7FFFFQFFF

JZ'J"J%J%
O7:00FF00FFFFFFOD00THFFFFFFFFQH00FF0000

J#J$
XH0000QI00FF00

J#J"8":"J"8"
QL00FFTEFFFF00QF00FF

J#J%9"J$:"
QK00FFTF00FFFF0000QFFF00FF00

J#J#J$8#
QJ00FFTL0000QHFF00FF00FF

D$JjJcJj8#=jJjJ$
0000007QIP2P"O30000P!O+O!O,000000

E"J#P"Q"R"Q"Z0P"Z"Z'Z"V$J"RJ"8Z"T"Z"Z<$8S"Z"Z"T"Z#J"8Z"S$8"J$
FF8FF0000000000600FFFF00FF00FFFFFF00FFFFFFFF0000C00>00FFFFFFFF0030000FFFFP100P#FF000001001FFFFFF0010010000D00FFO+FF:0000FFFFFFO0FFFF00

J"J#J"J"J"J"J%
O"00PE00FFE00R$00P&FFP'00P!FF0000FF

J"J#J"J#J"J"JPJ$?$J"J#C"8#
O"FFPD00FFFFFR!0000;FFD00;P!000000000000O"FF900000000FF

E"J%J$@"J"8#A%J$
00V200FFFF00R%FFFFFFFFO=FF0000FF00FF00O-0000FF

D$J#J"J(<%J$
FFFFFFQ500FFUJ00Q%FFFFFF00000000FF000000O-FFFFFF

J#J"J"J"J$J"?)8#8"
QE00FFT0FFO:FFO(00O+000000500FFFFFFFF0000000000FFFF

J"J%J`J#=%J$J$J&8%
O400K00000000@700FF00000000VH0000FFO+FFFFFFCFFFF00FF000000FF00

J%J#:#J#9#J#:"J%J%@"J$Cj;"
O300FF0000G00000000=00FFFF00=000000R>FF0000FFR$00FFFF0000O 000000:00

J%J(J*J#;*J#J$@$J"B$P"P"T#8#8"
O3FFFFFFFFIFFFF00FF00FF00;000000FF00FF000000400FF00FF00FF00FFFF0000R>FFFFR%FF0000FFFFFFO"00FFFF00000000FFFFFFFF

J%J*J,H#=*J"J%J%J%J"J%C":j8#8"
O300000000F0000FF00000000FF00;0000FFFF000000FFFF000000FF00FF000000FFFF0000Q!00Q 00000000@00000000@00000000O%FFO-FFFFFFFF004000000

Jb:#9%J(J&J#<)J%J'J%J"J"C":$P"T#8&
O800000000FF005FF00FF00FF0000<00FF00FF00400FF0000FF00FF00FF00T$00FF00FF@00FFFF00FF00@FF00FF00O$00O000FFFFFF000000FFFFFF00FFFF

J&Q8"?"D#9"`;`9$9c:b8#9$9a:$9b$:jJ%8cJb:g9$9b>%9b9$9a<`<j9"J#
O3FFFFFFFF0000000000FF0000000000000000000000FF0000O,O900000000P;00000000000000000000JFFOJ00FF

J">$>$B#8(;P9$9S:(8#9$9P#9$9+:T"V"Z"Z#J%8Q#J(:&P#9$9R>%9(9$9Q=%<#T"Z>#9"J%
O600000000FFFF00FFFFFF00FF00FF00FFFFFFFFFF00FF00FF00FFFFFFFFFFFF00FFFFFFFFFF00FF00FF00FF0000FF0000200/00FFO9FFFFFFFF00FFP;FFFFFF00FFFFFFFF00FFFF0000FFFFFFFFFFFF00FFFFFFFFFF00FFFFFFFFFFFFFF00FFFF00004FFFF00O-000000FF

J"E"9$9"B"9%J&H#A&J#8#J#8#J#8"J"<"9%J$J#
O6FF000000FF0000000000FF?FF000000FF00FFFF000000FFT$FF0000FF>FF0000FF>FF0000GFF0000FFFFFFO,FF00009FF00

Jf:"8$:%8`?)J,D#?(J%J%J&J$8"J%C":j8`
O30000000000000000FFFF00FFFF0000FF9FF0000FFFF00FFFF0000FF00FFFF0000FFFF00FFT&FF0000FF@FF0000FF@FF0000FFFFHFFFFFFFFO2FF00FFFF004

JZ#8&<+J"b"J+J"J">#J"J#>"J"C":$P;P;$
O8600FFFF00FFFFFFFF00000000FF000000FF;FFFF;FF000000FF00000000FFQ!FFPFFFFFFFBFFCFFFFFFP.00FFFFFF00FF00FF

J%J"9"8"J#B"8"9"J"J"J$Ci;`;$
O3FFFFFFFFGFF00FFO%00FFFF00FFSI00OL00P+000000000000

J#JQJ(D#DQJ"G"G"J"G"J$C$P9%T;"
O50000H>FFFFFF00FFFFFF00FFSJFFFFFFDFFFFP+FF00FFFFFF00FFFFFF00FF

J"9b#8#9%J#J$J#?`(8#
O400FF0000000000FF00O=00FFX<0000006FFFFFFFF00FF0000FF0000

JQ%>"J"J"J"J$H#>):%8$
O80000000000700O900UC00P5FFFFFF000000000000FFFFFFFF0000FF00FFFF00

J%>$>$J%J#J#=(?%9#
O300FFFFFFFF00FFFFFF00;0000FF00J00FFY#0000000000FFFFFFFFFF0000FFFF00

J$:"9$>":"B"8"J#JeJ%<"=%D%D%D%D`J$J$;$B%d
O?000000000000FF00000000J00FFQ2PD000000000000000000000000000000000000000000?000000OJFFFFFFFFFFFFFF0000FF

Ja:"8$:%8e<":"8"J"8#PJ(B'B'B'B(A"P"J"<":$J"J+8#
O80000000000000000FFFFFFR/00FF00PC0000FFFFFFFF0000FFFFFFFF0000FFFFFFFF0000FFFF00FF0000FFFFFFFF00000000<0000000000O>0080000FF00FF00FFFFFFFFFF00

JZ#8+A%J#J"J"J$8#@%8#@%8#@#:#@#8$<">"JR#9%J"J%<#
O8600FFFF00FF00FF00FFFFFFFF0000FF00I00FF4FFPMFFPKFFFF00FF0000FFFF00FF0000FFFF00FF0000FFFF0000FF00FFFFFF00>00FFFFFFFFFFO>FF9FF00FF00FF00

J%J#J"J"8`9b9%8b:g9#8d?%B'9h>jJ"J%>"
P9FFFF00FFH00FFQ200PL000000000000000000000000FF000000007O:00:FF00FF00FF

J"<"J#J"8&9R9%8R:(P9#8*?%D%9P"R>W"S#J$@$J&?"
P400FFH00FFT2FFFF00FFFFFFFF00FFFFFFFF00FFFFFF00FFFFFFFF00FFFF00FFFFFFFFFF00FFFFFF00FF000000FFO*000000000000;00FF0000FF00

J"J"J"J#J#A":#J%A$J&
P<00O100PJFFQ%00FFO2FF0000FF00P.FFFFFFFFFF00FF:FF0000FF00

J%J#J#J"J'<";%8#@%8#@#8%B'B&J"<"J"A$9$J%>%
O3FF000000O$00FFF00FFQ700PJFF00FFFFFF0000FF00FFFF00FFFF00FFFF00FFFF00FFFF00FF00FFFFFF00FF00FFFFFF00D0000O.0000000000000040000FF0000FFFF00

J&J":%J#J"8bJ'B'B'B'B'B(J"<"J#TJ%b"
O4FFFFFF0000IFF0000FF00E00FFQ6FFPDFF000000FFFFFF00000000FFFF00000000FFFF00000000FFFFFF000000FFFFFF000000FFFFCFFFFO9FF004FF0000FFFF

J"J$Eg@#J"JR$<jJ$E%D%D#8$B$="=$J"8j'Q9#
O8FFO FF000000FF9FFPL00FFFF2P,FFFFFFFFFFFFFFFFFFFFFFFFFF000000FFFFFFFFFFFFFFP,00GFF0000FF0000FF00

Jj8e"A$C#S$J`J`J#JbD`JW$<Z*
O6:FFFF00FF000000FFFFR8LP/FFFFO2O#00FFFF000FFFFFF000000FF00

J#Z#8,;";$J#JX"T"J"J"J%J%A#
O6FF00600FFFF00FF00FF00FFFFFFFF0000000000C00FFQI0000R1004FFOKFFFFFFFF7FF0000FFFF00

J"J$J#=#J"J"J$E"J#J&
O800O!FF00FF9000000FF;00UC00JFFFFFFFFO200FF=FF0000FF00

J"J`G$J*8"J"J"G"J"J%
O8FF90000006000000FFFF0000000000S7FFO70000O(00Q)0000FF00

JjJ'H&9(J"J">"J"J$I"J%B#
O<4700FFFFFF00000000FF00FFFFFFFF000000FFS2FFO)00FFO100O%000000FFP FF0000FFFF00

J"8Z#8&J$?#J"J"G"J"J&
O<FF/00FFFF00FF00FFG00FFFFFFFFU4FFDFFFF?00P7FF0000FF00

J#C#J"JRE"J#J%
Q!00FFFF00V)00O"FFO000FF>0000FF00

J%Jf>#J"J"J"I#Jj8%
O,00000000O<FF00S4FFO/00:000000Q64FF0000FF

J%C"J"J%TJ"J%J"JZ8&
O,FFFFFFFFFFDFF5FFFFFF00S<FFP2FFFFFFFFOHFFO84FF0000FF00

J"Jg9#J"J$JeJd9$9d9$9d9`"d9`"d9`"d9`"d9`"d9`"b;$9d9$9c:%Jj8"8"8a
O/00OAFF00:FF<000000P-OA000000000000FFFFFFFFFFFF000000000000000000FFO:30000

J,J$CaJ"8#PJ"9T9$9P%9$9*8(T:&T:'8':&T:'S:'Q;$9T9$:R:$J%8"8Z)
Q#FFFF00FFFFFFFF00FFFFFFO/FFFFFFOG00FF00O>FFFFFFFF00FFFFFFFFFFFFFFFFFFFF00FFFFFFFF0000FF00FFFF00FF00FFFF00FF00FFFF00FFFFFFFF00FFFFFFFFFFFF00FFFF00FF0000FFFFFFFF0000FFFFFFFFFFFFFFFFFFO:00FF00FFFF200FFFFFFFF00FF00

J$J"H"J#J"PJ"J"F#:#@#:#@#8%F"E$J"J&J#
O,000000@0000700FFOL00OJFFPKFF00FFFF0000FFFF0000FF00FFFF00FF00FFFFDFFOK0000FF00FF:FF00

J#J#J"J"D%J";b;"Jb9$9b9'd>f:c&9j8jJ%
O-FFFFBFF00OI00>0000000000OG0000P<000000000000FF00FFFF000000007<OLFF00FF00

J%Hg9$J$J"E$JP#;"J':$9(9T'>,:R8%92Q8ZJ%
O,FF0000FF0000FF4000000P"FFFFFFFFOM00FFFFP<FFFF00FFFFFFFF00FFFF00FFFF00FFFF00FFFF00FFFFFFFFFFFF00FFFFFF00FFFFFFFF00FFFFFFFFFF00FFFFFFFF00FFFFFF00FFFF00<OKFF00FF00

J#@%:"8T&E":'J$J"J#J#F#J#A&
O.FF0000000000FF00FF00FFFFFFFFFFFFFF00FFOL000000P+FFQ%00FFO2FF00FF00P:FF0000FF0000FF

J$B$8$J"J"J#F#:#@%8#@#:#D%;">$J&J#9#
O,000000FFFFFF000000P+FFPM00PJFF00FF0000FFFF00FFFF00FFFF0000FFFFFF00FFFFFFFF00PBFF0000FF00:00FF00FF

J$;$@$J"C#J$J"8bJ'B'B'B'B'B(J%Ja"
O,FF00FF000000FFFFFFH00FF00O=FF00FFP,FFPDFF00000000FFFF00000000FFFF00000000FFFF00000000FFFF00000000FFFF00000000FFFFPA0000FF005FF

J$:%J"JfJ$JR$J%D%D%:$=%D%D%J"9"9jQ
O,00000000FFFFFFK00<OA000000OI00FFFFPDFFFFFFFFFFFFFFFFFF00FFFF000000FFFFFFFFFFFF00FFFFFFFFFFPA00003

J$Jj8"GR&9#J"J$C"JdJPJ"JbJ#=Z9"8"
O-FFFFFFF50000FFFFFFFF00FF:00<00000000P=Q#D00O"O8FF004FFFF

J%J(P"S$C#JRJTJ"G"JPJ&A#
O3FF000000?FF00FFFFFFFF000000FFFFFF00OKP8Q100FFO,P*FF0000FF0000FF

J$Ja9#:#8#J#E#J'J">">"G"J`J#J%
O4FFFFFF:0000000000006FF0000FFO)00FFFFFF0000S,00FF00FFP#O:FF00<0000FF00

J'9#:#8#J#C#J"J"J%J%@#
P#FFFFFFFF00FFFFFFFFFFFFFF7FF0000FFU200D00O-FFFFFFFFP+FF0000FF00FF

J$J#@$J#J&
O;000000O2FF000000FFY)FF00;FF0000FF00

J%9$G"jG%;%JdJ"J%@#
O:FFFFFFFF000000FF8FF0000000000FFFFR-P100RM0000FF0000FF

J%H(Y8"H$`#JTJ"J%>#
O@FFFFFFFFFF00FFFFFFFF00FFFFFFFFFFFFR/TCFF<FF0000FF00FF

J&J"J"J&J"J&
Q'FFFFFF00FFBFFUCFFO#FF00000000O>009FF0000FF00

J"J"J$J"J"J"J#J%>#
OC00HFFT>000000EFFMFFO>00OBFF0080000FF0000FF

J$J"JeJ$J$E%D%D%E$E$JRJ#J%b"
O-000000O$00R8P&FFFFFF;000000000000000000000000000000000000000000FO>FF008FF0000FFFF

J%H"8iJ"J"J"8#PJ'B'B'B'B'<";(J#J.
O,FFFFFFFF008FFO000PK00FF00PD00FFFFFF000000FFFFFFFF0000FF00FFFF0000FFFFFFFF000000FF00FF00000000FFFFFF0000P<FF006FF0000FF0000FFFFFFFF00FF00

JW;"J$J"J#J#9"<";#:#@#:#@#8%BP"B&J#J&9#8#
OB00P7000000P.FFP00000800FFFF0000FFFF0000FFFF0000FF00FFFF0000FFFF00FFFFP>FF0050000FF00FF0000FF00

J%E"J'J"J#J"8#C"G"J#F#J$J%8$
P!FFFF00FFFFP'FFFFFFFF00FFP)00P3FFFF;00FF0000FF@00FF00FFPDFF00004FF00FF0000FFFF

J"J"?b9"J%Jb9$9a;#9b9#:b9$9b9$:`:j8jJ$H%8#
P400R20000P!00000000700000000000000000000000000/<OIFFFF00FF00FF0000FF

J"J"9";P#9"J"J)P9';#9P#9#:(9$9R8&9Q9*Q8Z#J%E$9"
R FFPFFFFF00FFFFP$FF7FF00FFFF00FFFF00FFFFFF00FFFFFFFF00FFFFFFFFFF00FFFFFFFFFFFFFFFF00FFFF00FFFF00FFFF00FFFF00:00FFOKFF00000000FF00FF

J"J$J$D%8#@%8#@#:#F"<">"J&D$
U 00P.FFFFFF:00FFFFFF00FFFF00FFFF00FF0000FFFF0000FF0000FFPEFFFF0000000000FF

J"J"J"8bJ$J(B'B'B'B(A"`"J%f:#8b"
O=00P000PKFFP(00FF008FFFF00000000FFFF00000000FFFF00000000FFFF00000000FFFF00000000FFFFFFFFPC0000FFFFFF00FF

J`J`J`JR$J$J%D%D%D%D%DPJbJV:%R
P2??PJ00FFFFP&000000;FFFFFFFFFFFFFFFFFF00FFFFFFFF00FFFFFFFFFF<P%0000FF00

J"8j=#:#J";"J";#J">">"G"JPJ"E&
O<0080000FF00=0000=000000SI00FF00FFOHP#FFFFFF00FF00

JZ$9$<"8(J*J(JbJ$J%J#I"
O<200FFFFFFFFFF00FFFF00FF000000;0000FFFF00FFFF0000;0000FFFF00FFFFO+QIFFFFFFQ-00000000P!00FF00

CeJ"8$>'J,J(J">"J"J%J%J"<%J&Je
O:FF000000FF00000000FF<0000FFFF000000FFFF0000=000000FFFF0000O 00FFOE00Q 00000000@0000000090000000000G00FFFFFFFFQ@

CUJ&@(J&J)J"@$J'J"<'J%J#JU
O;FF00FFFFFFFF00FF00FF0000<00FF00FF00<0000FF00FF00FF00O#FFFFFFFFRA00FF00FFFF0070000FFFF00FF00@FF00FF00Q3FFFFO(

J#:`:$9b9$8%8b:b9$9a;`$:jJ%8cJj9b9$9b8%9b9$9a<`J&J#
P+000000000000000000000000000000FF0000JOI00000000P?/00000000000000000000GFF00000000P 00FF

Jj8*:$9R9$8%8(:R9$9Q;):T"V"ZJ%8Q8j"JQ%8$9R9$9#P8%9(9$9Q=%J"Jj
O6C0000FF00FF00FF00FFFFFFFFFFFFFFFFFFFFFFFF00FF00FF00FFFFFFFFFF00FF00FF0000FF00004OIFFFFFFFF6FFP(00FF00FFFFFFFFFFFFFFFF00FFFF00FFFFFFFFFF00FFFFFFFFFFFFFF00FFG00OK8

JZ+P"9'J&J&JZJ'J#8#<"J'G"IRJS"Y#
O6800FFFFFFFF00FFFFFF0000000000FF00FF=FF000000FF?FF000000FFQ,7P/FF00000000FF>FF0000FFFF7FF00000000FFFFOE0000FF

J%8#J,J*J$J"=%<"J%J%J#J#
P2FFFF00FF00FF9FF0000FFFF00FFFF0000FF9FF0000FFFF00FFFF00O-000000R:FFFF00FFFFFF9FF0000FF@FFFF00FFPK00FF50000

J"c"Ja"J"a$J%J"J"J"J"
P/FFFF=FF;FFFF00FFO*FFFFFFFFOAFFQ!FFCFFR-FF

J#:#9%I"<"J#;"J";#J`JdJ$="=$G"F$E$E$J#I%c
O<000000000000FF00FFFF<FFFFFF=FF00FFO*O:PD0000000000000000000000000000000000PA00FF000000FF

J&A"IQJ&J'JRJ%PJ&C'B'B'C&C&J"J"9#8(
O;00FFFF000000?FFFF00FFFF?FFFF00FFFFFFO*O80000FF00PD00FF00FF0000FF00FF00000000FFFF00000000FF00FF0000FFFFFF0000FFFFFF00K00P'FFFF00FFFFFFFF00FF00

J"?"J$;"J#J$J#9#A#9"B)B"9#A(;";(J"J%=#
O@00FFP#FFFF0000PC00FFP0000000800FFFF0000FFFF00FFFF00FFFFFF00FFFF0000FFFF00FFFF00FF00FFFF00FFFF00JFFP*FF0000FFFF00

J":"J"J%J%J%J#F#J#F#A":#J#J&
OE0000700O900FFFF00PG000000FFP.FFFFFFFF>FF00FF00<00FF00FF0000FFPD00FF4FF0000FF00

J#9"8$8"8jJ"8#8#J#<b9$J`8#9g:b8%9b9`8a9h9$8jJ&
O<000000000000000O@FFFF0000FFP>0000000000P>000000000000000000O%P'0000FF00FF

JZ/J";#J#8"9#P9$J&8#9P(:R8%9(9&8Q9.9,Q"ZJ#J%
O;300FFFFFFFF00FFFFFF00FFFFFFFFO@0000FFP?FFFFFFFF00FFFFFFP>FFFF00FFFFFFFF00FFFF00FFFFFFFF00FFFFFFFFFFFF00FFFFFFFFFF00FFFF00FFFFFF00FFFF00FFFFFFFFFFFFFFFF00FFFF00FFFF0000FO>00FF6FF00FF00

J"9"J$J"J"8#@%8#@#:#@#:#@#8"G"J%
P%FFFFOHFFFFFFPG00PMFF00FFFF00FFFF00FFFF0000FFFF0000FFFF00FFFFQ)FF00FF00

JdJ"8"J"`";"=&B'B&C"`"A"`"J&<$
R!PBFF00PIFFFFFF00000000FFFF00000000FFFF00000000FFFFFFFFQ&00FF0000FF0000FF

JbD"9PJ#8`"J&C&D%D&CPCPJ#J%b#
Q:FFPCFFFFFFPCFFFF00FFFFFFFF00FFFFFFFFFFFFFFFF00FFFFP=00FF6FF0000FFFFFF

J"JdJ"R"D(9"JP#J"J"8%8P
P(007>0000FFFFFF0000000000PB00FFR300Q8000000FF00

Jj"JRJ"gJ"jJ`I"J"J`Jj;%
O/GFF8O2FFPCFF5OI00:00O3P13FF0000FF

J#Z"VB"=#J#?(:VJW)J%J"J%J#Z8&
O/FF00900FF0000O'0000000000FFFFFFFFPE00FFFFFF00FFFFFFOKFFFFFFFFO3FFO FFFFFFFFP000005FF0000FF00

J"J#:"Jf8%9#9`J"J">"J%
O/00O)000000H00000000FF00T(FFO(FFFFQ20000FF00

J"J"8"8"8bJW8%:TJ">"J"G"G"J#J%
O/FFO(000000?FFFFFFFFSMFF00D000000P=00FF9FF0000FF

J"9%8VJ`J"J"G"G"H"G"G"J&
P400FFFFFFFFO(900S,FFFFFFFFFFFFQ)FF0000FF00

J$P"J"J%
R 00FF0000U;00Q20000FF00

J#;#J"J"J#J%
R!00FFFF007FFS500R200FF:FF0000FF

J"?j8b?#?jJh&
P4FFO'FF00/X'FF0000FF00

J"JZ"Z8S#<#?&UJ"J#D$8"8"8&
O/00O.:00:000000FFFFFFFFFF00U!FFPD00FFFF00FFFFFFFF0000FF00

J"J#a"J2
O/FFP?FFFFFFXA00FF0000FF0000FF0000FF0000FF0000FF

J"JQJ2
P400O<XBFF0000FF0000FF0000FF0000FF0000FF00

JjJ"AgJjJ&J"I&J#:h0
O/GOF00PE4OJFF00000000P 0000000000FFP+00FFFF0000FF0000FF0000FF0000FF00FF

J#Z"R"J$>R&J";&VJ%JjJ%JV8#8"8"8"8$
O/FF00=0000OG00000000FFFFFFFFPC00FFFFFFFF00OJFFFFFFFF;O,;FFFFFFFFP1FF00000000000000

J"J&<"J%J"?Z"ZJ#8(P#
P(FFOF00FFFFFF00FFQ"FFFFFFFFPDFF;00:Q0FF00FFFFFFFF00FF0000FF

J#F$
\900FF0000FF

J#G%J#
G000000000000[<FF00

J$H%JcJ"J#G#
E0000FFFFFFFFFFP@SM00R.00FFFF00

J%@$J"JTJ$
EFFFFFFFF000000O,FFO:XA0000FF

J$>"J"J"J#
O$0000FF00P>FFUCFFQ'FF00

J$?%="J"J#H#
F000000FFFFFFFFFFVGFFR-00FFFF00

J$@$:%J"J$
FFFFFFF00000000000000O$00Z60000FF

J"@$J":"J"J#J#
H00FFFFFFPF0000U>00P?00FF4FF00

J"G%J$J"J#
HFFFFFFFFFFPB00FF00T"00RAFF00

J%B";$J&J$
E000000000000FF00PA00FFFFFF00XC0000FF

J":$J"J%9#J"J#J#
O'FF000000O%FFO9FFFF00FFFF00U;FFP>00FF5FF00

J%?%J%J$:%J$
EFFFFFFFF00000000O*00000000O700000000FFFF00XAFF00FF

J#H$J#9#J#9#;"J$J$
G0000FFFFFFO!00FF0000O30000FF00FFX$00FF00:00FF00

J"A%J*J*J"J#9#J#
F00FFFFFFFFO(000000FFFFFF00FF00O100FF00FF00FF000000U?00P800FF00FF5FF00

J":a9#J*J*J"J$J$J"8$J$
FFF0000O'0000FFFF000000FF00O300FF000000FFFF0000Q!00Q 000000O8000000P6FF00000070000FF

J#;$:"J)J)9#J&J&J%J#
E0000FFFFFF00O,00FF00FF00FF0000O/0000FF00FF00FF00FF00SM00FF00FF00O600FF00FF00P8FFFFFFFF7FF00

J$@"J'`@b9$9b9$9b9$9$8";`$:jJ%8cJc8#:b9$9h9b9$9%<`J#
FFFFFFFFFO%0000FF0000FF00000000000000000000000000FF0000O,O900000000PC000000000000000000000000Q%FF00

J#J#;%@R9$9R9$9R9$9$8";):T"ZJ%8Q#J(9#:R9$9T%9R9$9%=%J"J$
O$0000O%FFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF00FF0000FF00O"O9FFFFFFFF00FFPCFFFF00FF00FFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFF00FFP7FF;0000FF

J$J&8"J"J"8#J#J#
O%FFFFFFO&FF0000FF0000O700T(0000FFO4FF00Q)FF00

J$J)J):#J&J&J#
O-000000O"FF0000FFFF0000FFO/FF0000FFFF0000FFFF00SLFFFF0000FFO6FF000000FFQ$FF00

JPJ+J+J"J"J$J$
O,LFF000000FFFF000000FFO1FF000000FFFF000000FFQ!FFQ"FFO8FFFFFFQ%0000FF

J"8#8"J"8#8"D#J"J#
P0FF0000FFO3FF0000FF00FFSBFFRBFF00

J#E#8#J#8#J#
P FF00FFFFFFFFO5FFFFFFFFXGFF00

J#J#J#J"G#J$;#
P3FFFFO9FFFFSBFF00OL0000FFPA0000FFFF00

J'J"J"=#J"J#J#
KFF00000000FFO100O900FF00SM00OM0000PAFF00

J%9$J#Jf#8":%J"G#J#J"H%J#
EFF000000FFFFFFO FF00=FF000000000000DFF00FFS1FF00OKFFFF000000P>FF00

J$JT`#8#J"F#J"F"P$J$
FFFFFFFOFFF0000FFG0000FFU10000000000P;0000FF

J%J#F"J&<"J"J#E"J"E#;&J#
O$FF000000HFF00FF6FF00FF0000FFEFFSEFF00FFO:FF00FFFFFFFF0000P:FF00

J$J#J#A-J#H#<"J#J#?&?$J#
O%FFFFFFIFF0090000000000FF00FF0000FF00FF00:0000FF00FFS5FF00P*00FFFFFF000000000000P*FF00

J#Jd:$8$9jJ"J#J#B&>"aJ$
P$FF00;0000000000008:00S8FF00P(00FFFFFFFF0000FFP%0000FF

J$JZ"ZJ$J#J#F&9#8(J#
P%FF00006:00:60000FFS9FF00P&00FFFFFF00000000FFFFFF00FFFF0000P$FF00

J%J%J"J%J%I&<"9$J$
P&FFFF0000P!0000FFFFS#007FF000000P 000000FFFFFFFF000000FFFF00P"FF00FF

J#eJe#J";#J$dJd$J(8$8#J$
P(FFFFO;FFFFPH0000FFP<FFFFFFO<FFFFFF7FFFF00000000FFFF0000FF00P!00FF00

JUc"J"cU"J"a"J"8j?c8jJcTJ'8'J#="a
P*FFO)FF00PHFFFFP#00:;=<FFFFFF000000FF00000000FFP!FF00FF

E#JSJSJQJZ"ZJ*J#8'J$=RJ"
0000P#O+Q&P$O!00;<FFFFFFFF00FFFFFFFFHFFFF0000FFFFFFFFP"0000FFO.00

D$J"J&J#J$
00FFFFY000MFFFFFF0000P&FF00O:00FFFF

J"J$J#
YAFFO"FFFF00P$FF00

J#J"J$
R+FF00V9FFP$0000FF

JjJ$J#J#
OKDO!000000Q?0000U4FF00

D$J#Z$J#J"J%J#J$
FF0000O:FF00>00FFFFO#FFFFQ@FFR)00000000Q&FF00O;FF0000

E#J"J$J$J#
FFFFO<00WAFFFFFFQ'0000FFO;FFFF

J"J$J#
OMFFWA000000Q(FF00

J#J$J#
R,FF00U3FFFFFFQ'FF00

J"8#J$
YA00FF00Q%0000FF

J#
\LFF00

J#
\KFF00

J#J$
R-FF00X<0000FF

J#
\LFF00

J$
\KFF00FF

J'J$
Y@FF00000000FFQ%00FF00

J#J#
R.FF00X;FF00

J"J$
YDFFQ&0000FF

JjJ#
R7DW?FF00

J$91:)J#J#
R8FFFFFFFFFFFFFF00FF00FFFFFFFF00FFFF00FFFFFF00FFFF00FFFFT80000Q%FF00

J"J$=":"8#8#9#J$
QH00@FFFFFF000000FFFF0000FFWA0000FF

Jj9aA"J%J#
QF?00TDFFFFFFFFQ&FF00

JZ"Q9"9#="<">"J"J"J"
QF800FFFFFF000000SC00B00Q)00

Je:":"8"J`J$<U9#9#J&J"J$
P%000000:O.FFFFFF00FFFFFFSB00FF000000?FFQ(FFFFFF

J"T8"9":%J(:aJj:cJ#8"J$
P$00000000000000800FFFF00FFFF00O 6S?00FFFF@00FF00

J$>"J":%J#;ZJ#:#J"
P/000000FFA00FFFFFFFFGFF00DS=00FFFF00A00

J$:"9$J#`8jJ%
P/FF00FF0000FFFF700FFDU=FF0000FF

J%=i8$9j9$<#8U%V#J%
OH00000000000000;FFFFFFFFFF00FFFF0000FFU<FFFFFFFF

J$<"@Y%Z9$="
OIFFFFFFFF00FFFF001FFFFFFFF

JUJ#@"
P%CFFFFFF

J":#J#
Q/FF0000IFF00




J%JQ
OHFF000000O4

J$
OIFFFFFF

J#
R2FF00

J%
QM00000000

J%
QMFFFFFFFF

J"
R"00

J#
R3FF00

J#E$
Q=00000000FF

J&B%Jj
Q<00FFFF00000000FF005C

J#8$A%J"Z"
Q;00FFFF0000FF0000FF400C00

J"B$G$
QAFFFF0000FF0000

JdJ#9#B#J#
P1O 00FF00FF00004FFFF

JRJ#9"D#Jj
P2O 00FF00FFFF7C

J"="J"C#J$
PF0000>FF0000O*FFFFFF

J$?#J(E$JZ
PC0000000000500FF0000FF00FFFFFFFF5@

J"j:b9#J$
P1FF100005FFFF00

JV%P"R&I#9"F$
P200FFFF000000FFFFFFFFFF00FF000000

J%F%Jj
Q9FF0000FFFFFFFFFF5@

J"JZ
Q;FFM>

J#
R8FFFF

J#
Q900FF

Jj
O'PL

JZ"Z%P"R"Q(U"T%XH"jJ#
O'E00>00FFFF00000000FFFF00FFFF000000FFFF00FFO'S+FF00

J#J"ZJ#
Q700FFL00O&S200FF

J"J"J"`">#J'J$
O"00J00O'FFFF00FFU3FF00000000FFQH000000

J"J&>"J%J"
OMFFO(FFFF00FFFF00U6FFFF00FFQKFF

J"8j#="J"=bJ%JbJbJ#
O 00OBFFFFFF5FFQ=00000000PIHQ1FF00

JZ)R#="I#="SJ"jJ%JS"J"SJ#
O O600FF00FFFFFFFF0000000000FF00?FFO&ODFFFFFFFFPH00F00Q/FF00

J"?#E#>#J"Z"ZJ#=%D%=#J$
PEFF0000000000FFG00E00/RIFF00000000000000000000FFQ70000FF

J"@"8":'A'J%B%J#
P:0000000000FFFF00000000FFFFFF00U.FFFFFF0000FFFFFFQBFF00

Ji8%<$?$@#J$>$J#
P700000000FFFF0000FFFFFF00U)FF00000000FFQDFF00

JR"R8%>"d"JjJ#c#J$
P600FFFFFFFFFFFFO(ES9FFFFFFFFQE0000FF

J"J*JcJ)<#J"
P=FF6FFFFFFFF00FFFF00FFP!S2FFFFFFFF00FFFFFFFF00QA00

JZJ#J$
R8MS+00FFR'FFFFFF







J#C#<#Jj
PL00FFFF00FF00O!M

JZ
R7O!

CeJ#="J#Je
P*000000V5FF00S"

CUJ%8%J#JU
P*FF000000000000FFV.FF00S)

J&8$H"`J#;#
P@00FFFFFFFFFFFFFFFFU&00FF00FF

J#J$
P>0000>FFFFFF

J$<"J#
P=0000FFFF80000

J"@#G$9#
P@FF00FF00FFFFFF00

J"J#
P>FFBFF00

J"J"Jj
P=FF?FFR5O2

JaZJ#
U@O0P$FF00

JbPJ#
U9PI00FF

J#J"8#JR
PD00FF900FF00R#

J"J#Jj
PF00DFF00R'O0

J&:$B'JZ"Z
PFFF00000000000000FF00000000FFR0500I

J(9"C%8#
PGFFFFFF00FF0000FFFFFFFFFFFF00

J&
PLFFFF00FFFF

J":#J#J#
Q FF0000Q$0000S FF00

J%J"JjJ#
Q#000000FFQ$FFO:5P200FF

J"JZ
Q%FFR?7

J"
Q%00

J#>"J#J#
PI00FFFFQ%00FFS&FF00

J#H#I#
P=0000FFFFFF00

J&J"J#
P<00FFFF0000Q900R,00FF

J#J#
P@FF00Q7FFFF

J"8#J#9"J#J#
P;0000FFQ9000000R-00FF<FF00

J(J'="
P;FF0000FFFF00FFQ8FF00FF00FF0000

J%=$J">"J$
P100000000FFFF00Q:FF00U400FF00

J'<$=#J#J$
P2FF00FF000000FF00FF00FFQ000FFU;FF00FF

J#9':'J#9#J#="
P000FFFFFFFF000000FF0000FF00FFBFF00FF00P900FFFF

J%:%J"J#J#
P8FFFFFF00FF0000FFQ>00R#00FFHFF00

J#=#;"J#J"8$="J#J#
P1000000FFFFKFF00P900FF00FFFFQK00FFJFF00

J(@#J#J#9"9"J#J#;#J"
P0FFFFFF0000000000FFKFF00P7FFFFFFFFR!00FFEFF00FF00P2FF

J(;$J$J#<#J$
P3FFFFFF000000000000FFMFF0000T?00FF00FFFFF0000

J$8'J$J#J"J"
P6FFFFFF00000000FFFFO!FFFF00T=00FFO"FFP500

J#B#J":"="
P9FFFF00FFY!000000

Jj:j<#J#J#9#
HOACFF00UKFF00P200FF0000

JZ8Z8$8S"Z"R#G"J#J"
HO*2FFFFFF0000000FF00T;00FFQ=FF

J%:#J#J#J#J"
P60000FFFFFF00O#00FFT<FF00O$00FFP8FF

J"F$=#J#J#J#<#J#9"
P$FF00FFFFFF00O!00FFT>FF00HFF0000FFP3FF0000

J#F$@#J#J#;#J#J"9#9"9"
P!00000000FFFF00M00FFT@FF0000FFG00FFP1FFFFFF00FF

J#F%B#?"F`B#JeJ#J#J#
OM00000000FFFFFF000000FFP;QKFF00L00FFP:FFFF

J#8#>%E#8":%C(<#8#J"TJ&J&
P!FFFFFF000000FFFFFF000000FF000000FFFF00FFFF00FF0000FFP;00QMFF0000FF00D00FF0000FF

J&@$H*8#?":$?%J%J&J&J$
OMFF0000000000FFFFFF0000FF00000000FFFF0000000000FF0000FFQB00000000Q FFFF00FFFFBFFFF00FFFFQ5000000

J"=$J"8"=#?#E#J"8"JQJ"J"JP
P$000000FF5FFFFFF000000FFFFP00000O.Q!FFFFFQ6

J$:"8%J*8$>"Jj
P FFFFFF000000FFFF7FF00FFFFFF000000FFFF0000FFP=;

J*J#8"<$<":"J"?+ZJ"
P#FFFFFFFF000000FFFF:FF00FFFFFF00FFFFP/00FFFF00FF00FFFF00FF002R5FF

J#J#8%:#:"9`J"<"
P(FFFF=FF00FFFF0000FF00FFP9FFFF

J"J#9$9#=&
P'FF@FF00FF000000FFFFFF00FFFF

J#9'?#:"Jc@jJ"
PIFF00FFFF000000FF00FF00OI2RG00

J#:"="A"JbReW'a
PJFF00FFFF00OB00FFFF00FFFF

J#:#?#9#J`Q>S#HQ$
PKFF00FFFF00FFFFFFO?00FF000000

J#I%J#PJ&Jj
PLFF00000000FFO;0000O"FFFFFF0000U62

J#H$J%J$Jc,R`
PMFF00FF00FFO:0000FFFFO*FFFF00U-FF00FFFF00FFFF00FFFF00

J#A#;"J#8jJ#JP->(
Q FF0000FFFFO900007EFF00U-00FF00FFFF00FFFF00FFFF00FFFF00FFFF0000

J#?#J"ZJ#J#J,C"
Q!FF0000FFO?00;FFF00R00000Q 00FFFF00FFFF00FFFF00FFFF

J#=#J#J#J"8%J+D#
Q"FF0000FFO?00FFO4FF00R.0000000000PJFFFF00FFFF00FFFF00FF00FF

J#J$J#Jf=%J+A$
Q#FF00OE0000FFO6FF00R"000000FFPG00FFFF00FFFF00FFFF000000FF

J#:#J$JV?"J,f#
Q$FF0000FFO=00FFFFS;FFPG00FFFF00FFFF00FFFF00FFFFFF

J#8#J#J%B%J+8U
Q%FF0000FFO=00FFS=00000000FFFFFFFFPHFFFF00FFFF00FFFF00FF

J$J#J#>PJj"j8+
Q&FF0000O>00FFS?FFFFO86FFJ00FFFF00FFFF00FFFF00

J$J#>j9g9#J"8U?#Z"S-
Q'FF00FFO<00FFO"FF00SIFF0000@000000FFFF00FFFF00FFFF00FF

J#JT"Z"X$9U#J"UJ+
Q(FF00OF0050000FFFF00FFT,00KFFFF00FFFF00FFFF00FF

J"J#J#J#J"J+
Q)FFO;00FFO=00FFR"0000OFFFO300FFFF00FFFF00FFFF00

J#J"J%J,
RD00FFO800R(FFFFFFFFQ*00FFFF00FFFF00FFFF00FF

J"J+
T0FFU6FFFF00FFFF00FFFF00FF

J#J+
RC00FFW#00FFFF00FFFF00FFFF00

D$JjJ,J$
000000PC/X200FFFF00FFFF00FFFF00FFP6000000

E"J"W#J#J+J"
FFPC0000FFO.00FFW#FFFF00FFFF00FFFF00FFP8FF

E"J+J"
00[800FFFF00FFFF00FFFF00P700

E"J,J$
FF[700FFFF00FFFF00FFFF00FFP7FFFF00

E"JjJ#J+J$
00P.O'J00FFW$FFFF00FFFF00FFFF00FFP80000FF

D$JZEYJ)J$
FFFFFFP/4X%00FFFF00FFFF00FFP8FFFFFF

J#JZD#J%J)8"
P>FFFF4/FFFFP600000000U600FFFF00FFFF00FF00

J"J"J#J$J(8#
P=FFO'FFH00FFO:FFFFFFU6FFFF00FFFF00FF00FF

J&8#
[H00FFFF00FF00FF

J#J"j%8%
T500FFT3FFKFFFF00FF00FFFF00

J#J%JZ)8&
T5FF00SH000000006F00FFFF00FFFF00FF00FFFF00FF

J$J#8&
Z2FFFFFFO300FF00FFFF00FF

J#8'h
[G00FF00FFFF00FFFF

J$Jj8d8"@j
Z20000005JFF3

J#J$;#J%J.8Z8S&Y#
R?00FFO;000000FF00SGFFFFFFFF6FFFFFF00FFFFFF00FFFF00FFFFF00FFFFFF0000FF

J%J)J#B"
T-FFFFFFFFT@00FFFF00FFFF00FFO'FF0000

J)J"
["00FFFF00FFFF00FFO6FF

J+J#>%
[!00FFFF00FFFF00FFFF00O(FF0000000000

J#J+J$
T7FF00T6FFFF00FFFF00FFFF00FFO3FFFFFF

J)
["00FFFF00FFFF00FF

J#J+
R?FF00V.00FFFF00FFFF00FFFF00

J#J+
T8FF00T5FFFF00FFFF00FFFF00FF

J)
["00FFFF00FFFF00FF

J+J#
[!00FFFF00FFFF00FFFF00O(00FF

J+J$
[!FFFF00FFFF00FFFF00FFO3000000

J)J#?%
["00FFFF00FFFF00FFO(00FFFFFFFFFF

J#J+J$
R@FF00V-00FFFF00FFFF00FFFF00O%0000FF

Jj9gJ"J+Jf#
S"O"T!00:FFFF00FFFF00FFFF00FFHFFFF

J#CZ"Z8W;#J)JV
RAFF00?00100FFT600FFFF00FFFF00FFI

J#J"8j#j
T700FFSH003FFFFOF

J#J#JW"T8Z/8Z
RBFF00O@00FFSI00F00FFFF00FF00FFFF00FFFF00FFFF>

J#J,
T500FFU000FFFF00FFFF00FFFF00FF

J#J#J+
RCFF00O=00FFU1FFFF00FFFF00FFFF00FF

J#J#J+
RDFF00O;00FFU300FFFF00FFFF00FFFF00

J$J%J,
REFF0000O6000000FFU300FFFF00FFFF00FFFF00FF

J$J(J+
RFFFFF00O100000000FFFFFFU4FFFF00FFFF00FFFF00FF

J$J(J%?+
RHFF0000O,000000FFFFFFFFU+0000000000FFFF00FFFF00FFFF00

J'Jc$Ja%d#c"
RIFFFF00000000O FFFFFFU)FFFFFFFFFFFFFF

Jg8#:"J)JjSJ#Q:S%R
PG000000O=FFFFFFFF0000000091U*000000000000

JjJT8#J%j%XJ"J&H%
GFO)0000OHFFFFFFFF9FFFFFF00T?00=000000FFFFFFFFFFFF

J$9'8P;-F"J#J"JZ=aJ#j:a$
HFFFFFFFFFFFFFF00FFFFFF00FF00FFFFFFFF00FFFF00O$FFFFO-00>9TBFFFF3FFFFFF

J$A"9"J"9"J$8"8"J#J"8"JZ%Q
KFFFFFF00FF<0000O"0000FF00FFO#0000O3FFFFTE300000000

JaB#>#;j:j8"J"9%J%
JFF000000O2O*00O.0000FFFF00U*FFFFFFFF

J"9#=":"?#;Z"ZJ#Jh8#9$`Jj
JFFFFFF0000FFFF/00P3O/0000O(00000000FFT.P6

J$<S>":"J#J$R8"A#JZ
KFFFFFFFFFFR'FFFFO)FFFF0000FFFFT0P4

J"j:gJ"J"?"@"@"
GFF4R$FFO7FFFF0000

JZJ";#J":":">#B#Jj
HER"FF0000O100000000000000SIP4

JQJ"e9"8$8"8b9e9#JZ
SEO"FF00000000000000SFP6

J%JZ"U&
P300000000R7A0000FFFFFFFF

J%
P200FFFFFF

Ja
XD

J$J"8":#Jj
P3000000V/FFFF0000PHP6

J$J%9"JZ
P3FFFFFFV/00FFFF0000PKP4

J"J#
P300V60000

J#J#JbJj
P6FF00V2FFFFLOGP4

J$J#:"J"8"JZ
QK000000TF0000FFMFFFFOGP6

J&JbJbJ"J$
QH00000000FFQ8=P9FFKFF00FF

J"J%J#R"J"R#J$JQJ$;$
P2FFO400FFFFFFQ8000000;000000O0000000IO!00FF00000000

J$=#J#=#J'J#;'
U400FFFFFF00900FFFFFFO.0000FFFFFF00P!FF0000FFFFFF0000

J#:"J#@#J#@"J%9#J$>%Jj
QF00FF00Q400FFFF00700FF00O+0000FFFFFF00P 0000FFFFFF0000O=P6

J#:$J"J#A#J%J$J#@%JZ
QE00FFFFFFFFQ@FF600FFFF00O(0000FFFFO+000000HFF00FFFF0000O<P4

J#JjJ$J%J#C$
QD00FFQ:/OL00FFFFO-FFFFFF00FFF00FFFF00

JYJhJ#J$9#
U37P50000K0000FF00FF

J#J"YJ%J#
QC00FFR100P30000FFFFLFF00

J%J#J"J$:bJj
P4000000FFO*00FFU'FFMFF00FFO?P4

J"J#J%J$=(JZ
P700O)00FFSK00000000P'00FF00FF00FF00000000O;P6

J$J#JP"J#:-
P5FF00FFSL00FFO'00P&FF00FFFF00FF00FF0000FFFFFFFF

J$J#J"J$:#J$<$
P4FFFFFFO)00FFO-00SI000000FF00E0000FF00FF00

J$J#J$Jj@jF#<%
P5000000O'00FFO*000000S286FF00FF0000FF

CeJ#J#J";$J#JZ<ZF#=%Je
OJFF00O)00FFO%00FFFFFFQ500FFOJ;5FF000000FF00R,

CUJ$J$?"J$=#Jj;U
OLFFFFFFP*00000000TJ0000FFFF00O@P6

J"J#J$?"J#J#<%JZ
P500O'00FFO#FFFFFFFFQ300FFQ6FF00FF0000FFO@P4

J"J#J"<$J#=%
P5FFO&00FFO&00000000TKFF000000FF00

J$J#J"=$JjJ$=$
P5000000O#00FFO'FFFF0000P$O/Q70000FFFF00FF

J"JiJ%<%J"Z"U"Z#J#<%
P8006O200000000FF00FFFFP#00<0000400FFQ7FF00FF00FF00

J%J#Y$>#J"J$<$
P5FFFFFFFF4000000000000FFO200TJFF00FF00FF00

J&D&;#J%<$J#J#J$<%
PJ000000FFFFFFFFFF000000FFO&FFFFFFFF000000Q200FFO6FF00OM00FF00FF0000FF

J%I%8"J#<$J#J#=%Jj
PI00FFFFFFFFFF000000O*0000FF00FFP#00FFRFFF000000FF00O@P4

J$J$8"J">$J#JfJ$=%JZ
PG0000FF8FFFF00FFO(00000000Q100FFO2OI0000FFFF0000FFO>P6

J$E"A#J"?$J"8$8"8hJ#Ij8#<#
PF00FFFF00FF00O*FFFFFFFFRDFFFF00FFFFDFF000FF00FF00

J$<#<`C`%@$J#J.8"8$8"j8j9"8"8"8$8#8b"
P<00000000FFFFFFFF00000000H0000S"0000FF00FF0000FF0000FF00FFFFFF00FFFFE2FFFFFFFF00FFFF00FF

J#D':#<"P"A"P"8#>'D#J$J#J58"8$8"8$8"8$8"8$;$8"8$8"858"8#
P*00000000FFFFFF0000FF00000000FF0000FFFFFF000000007FFFFFFQ900FFO4;FF00FF0000FF0000FF00FF0000FF0000FF00FF0000FF0000FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF00FFFFFF00FFFF6FF00FF0000FF0000FF0000FF00FF0000FF0000FF00FFFFFF00

J'A$9#8#<#;#?#;#8#<#9"C'J5
P(0000FFFF000000FFFFFF0000FF00FFFF0000FFFF00FF0000FFFF0000FFFF0000S8P2FF00FF0000FF0000FF00FF0000FF0000FF00FF0000FF0000FF00FF0000FF0000FF00FF0000FF0000FF00FF0000FF0000FF00FF0000FF0000FF00FF0000FF0000FF00FF0000FF0000FF00FF0000FF0000FF00FF0000FF0000FF0000FF00FF0000FF0000FF00FF0000FF0000FF00FF

J$8$Ad">bAb:#:d@$8"J585
P'00FFFFFFFF00FFFF0000FFFFFFS9O(00FF0000FF0000FF00FF0000FF0000FF00FF0000FF0000FF00FF0000FF0000FF00FF0000FF0000FF00FF0000FF0000FF00FF0000FF00O(00FF0000FF0000FF00FF0000FF0000FF00FF0000FF0000FF00FF0000FF0000FF0000FF00FF0000FF0000FF00FF0000FF0000FF00FF00

JaBR#?RARARG#J#jJ$8"858"8&Jj
P(00FFFF00Q3FFFF;O4FFFF0000P"00000000FF0000FF00FF0000FF0000FF00FF0000FF0000FF00FF0000FF0000FF00FF0000FF0000FF00FF0000FF0000FF00FF0000FF0000FF00FF0000FF0000FF00FF0000FF0000FF00FF0000FF0000FF0000FF00FF0000FF0000FF00FF000000000000FFO?P6

JQH"J#JcJj$8&Z#J(9"8$8"858"8$8"8$8$PJZ
P(00IFF005PE?FFFFFFFFFFFFFF00000FFO5FFFFFFFF00FFFF0000000000O000000000FF0000FF00FF0000FF0000FF00FF0000FF0000FF00FF0000FF0000FF00000000FF0000FF00FF0000FF0000FF00FF0000FF0000FF00FF0000FF000000000000000000FFFF00OAP4

J#J#JRJZ"T8$J&U)8"8$8"8$8"8":"8$8"8$8"8$8&T&
P4FF00O'FF005PE50000FFFFP&FF00FFFF0000FF0000FF000000000000000000FF0000000000000000000000000000000000FFFF0000FFFF00FF

J"@#J$J#J"G&U)P(8%U$I"
P40000FFP!000000P,FF00PI00FF0000FF0000FF00FF0000FF0000FFFFFFFF00FFFF00FF0000FFFF00

J"CjJ%=$J#J#F"G#G"
P4FFMO FFFFFFFF000000PC00FFP:00FF00FF00FF

JjZ"Z$jJ%J"G#G"F"H"G"
P20600400FFFF1FFFFFFFFFRMFFFF00FF0000FF

JjW%J#Z8hJ#J"bD"G#G"Jb
P"000FFFFFFKFF001P?FF00PDFF00FF00FF@

J"ZA#JY$JQB":"B$8"B'B#9$?#P#Ja;$:b;$9$;f"c"b8#9`
P!00000FFO30000FFS70000000000000000FF00000000000000FFFF0000FFP%000000000000000000FFFF0000

J#>"J$J#9$AQB#8#B'BQC"9#J"G#A"="8"J";":#
OE0000FFP0FFFF00S6FF000000FFFFFFFFFFFFFF0000FFFF0000FFP,00FF00FFFFFF70000FF00

J%J#J'A#:#C#C&C#:#A'J'<";&:">#9#;T8$9%<(
OEFFFF0000OEFF00T*FF000000FFFFFF0000FFFFFFFF00FFFFFFFF0000FFFFFF000000FFP)FFFFFFFF000000FFFFFFFF0000FF0000FFFFFFFFFFFFFFFF00FF00FFFFFF00

J%J#8j#J#J$D'A$8$B"8$A'D$J#;#J#9"
OGFFFF0000?00FFO$FF00Q-FF00PFFFFFFFFF00000000FFFF00000000FF000000FFFF00000000FFFFFFFFPM00000000@00FFFF

J`#F#jZ"P%Z$jJ#J%C'B'C%J#9$H$J"
OEFF0000FF0/0000FFFF00600FFFF/R*FF00P FFFFFFFFFFFF0000FFFFFFFF0000FFFFFFFFFFFFP?00FF0000FFFF0000O$FF

J$8"jW8#J#J#XjJ#J#>"=#J`"A"`"C#?`A'
OFFFFFFFFF2FFFF400FF<FF00/P@FF00Q<FFFFFFFFFFQ!FFFFFFFF00FF00000000FF

Jj:W#JS"P8jJ#J"<$=":$=#8$J$
O=/00FFOC00<Q-FF00SKFFFF0000FF0000FFFF000000FF9FF00FF

J"9+9"J#J#Z"S8"JcJ%C&?#EPA&
O>FFFFFFFF00FFFFFF00FFFFFFO?FF00>FF00000FFSKQ#FFFFFFFF00FFFFFF00FF0000FFFFFF00

J$@%J#JQJ&E$
O=FFFFFF0000FFFFS'FF00QFQ+00FF000000FF0000

J$@#J"J#J":#B"9"<$J#@#
O=000000FFFFQ"FFQ0FF00T 00FF000000FF00FF<FF000000

J#J&>*<&<`E#<&
U(FF00U*FFFFFFFF00FF00FF0000FFFFFFFFFF000000FFFF00FF00000000

J%;$J#J#J#?#;"=PJQ#
O=FFFFFFFF000000OF00FFR=FF00T,FF00FF00FF700FF

J":PJaJ">":"G%9$9#a;";";"8":&
O@00W%Q#FFFFFFFF00FFFFFF00FFFFFFFFFFFFFF00000000FF

J"J#J#JSJ">"<%:P;"8"9"9"8R;";";"8"9%
O@FFS6FF00O(FF00P9Q!FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF

J%J"J#
O=00000000PK00QCFF00

J"j@j
P<FF2:

J%JYFZ"PJ#J#Jj
O=FFFFFFFFK200Q2FF00O)FF00S3P4

J$J&?%J#J#J#JZ
O>00FF00O*00FFFFFFFFFFFFFF00LFF00Q400FF?FF00S1P6

J$@%J#J"D%:%9$JhJj
O=00000000000000=FF00O5000000000000000000000000P348

J$J%;%9$JYJZ
OKFFFFFFP4FFFFFFFFFF00FFFFFFFFFFP249

J$DdJ#<#<#F#H"JbJb
O>FFFFFFAFF0000FF00FF00FF00Q,4

JQ8"J#B#A$F#J"JRIQJi8`8#9&9#9%8#=`9`$:#
P FF5FF00FF000000FF00FF4FFQ,T'00000000FF00000000000000000000FF00000000

J$=%JjJ">";"A";#:"?"=":&8$
PMFF00000000FFFFE<W@FF0000000000000000FF00FF00000000FF

J#J#C#b"I#I#S"S"Q#J#8#9P9$C#<$C&9%8'
OJFF00AFF00FFFFFF00FFFF00000000FFW:FFFFFFFFFFFFFFFF00FFFFFFFFFFFF0000FFFFFF00FF00000000FF

J$J#DRJ$J"J%=#9$;"@$=$;$9#
OKFF0000@FF00O,0000FF600W400000000FFFF00000000FF00000000FF0000FFFFFF

J%9#J#J#H"8#=#9%>"J":"I$J$8"8"
OLFFFF000000FF:FF00G00FF00FF00FF000000FFFF00WBFF00FF0000?000000FFFF

J&J#F$D$8d8i8"J"PA$
P FFFF000000O600FF00FF0000000000W100FFFFFF

J"E%J$J`<#H$B"8W"ZJjJ#B"?$?";$8"
O@00FFFFFFFF<FF0000800FF00FFFFFF002P&JT;0000FF0000FF00FF0000FF

J"J$J"P":#H&@#8"J"8R8Y"S&8"J`9$F":$;`"8$;$
O@FFO"FFFF006000000FFFF00000000000000PDFF0000FFFFFFFFFFT/000000FF000000FF000000000000

JjJ#H":$:$J%:%J%J%J";"C#8";"?":%;"
O>>7FF00000000000000FF800FFFF000000FFFFQ#FFFF000080000FFFFT6FFFFFF00FFFFFFFFFFFFFFFF

JZJ#H#9":$J$=%9"J"@$J$J#9R8P8#9P9#8P8R8%:P:#
O=@7FF000000FF00FFFF5FFFFFF0000FFFFFFPFFFFFFF00600FFFFT+FFFFFFFFFFFFFFFFFFFFFFFF

J$G"=#J#:$J$I#
PGFF0000FF00FF:FFFF00FFFFQ+FF000000FF

J%D"<$J#J%D%
PHFFFF0000FF0000FF@00FFQ.FFFF0000000000FF

J&@"9&J$J%:$:$J#;#9`9%;#:%;#9b#9#:":"
PJFFFF000000FF00000000FFAFF0000Q0FFFF000000000000FFFFT100000000000000000000000000000000FF0000000000

J$`8a;#J"?#J#`(J#8"8#8#<%9"8#8%:"B"9"9"8':"
PLFFFFFF00FFAFFFF00Q(FFFFFFFF00000000FFT10000000000000000FF00FF0000000000FF0000FF00000000FF00FF0000

JP#WJ#J"8#GP:#J"8"8"9#;-9#;&8"8"8(9,
Q!0000CFF00PK00FF00FFFFT100FF00FFFFFFFFFF00000000FFFFFF0000FFFFFFFFFF00000000FFFFFF00FFFFFF0000FFFF00FF000000FF00

J#J"J$J%JP$8$D$8$J"8#9"
Q&FFFFO"FFPH00FF00;000000FFT50000FFFF00000000FFFF0000:FFFF0000

J$J$J$J+B&J$
R;000000P60000FF900FFFFTF00000000FF00FF00000000000000FF;FF0000

J%J"8#J$J"9#F'
R:00FFFFFFP5FF000060000FFU 00FFFF0000FFFF0000

J#J"I%J#@#;$8"?#<#D">$
R3FF00PC000000FFFFT=0000FFFFFFFFFFFFFFFF000000FF0000

J%J$9#D%J$8"a";#?`":$9#E&;"
R:FF000000P6FFFFFFFF000000FFFFT<000000FFFFFF00FFFF0000FFFF00000000FFFF

J%J#F$J";$@#?"C$8$@"@#
R;FFFFFFFFP8FFFF00FFFFT<FFFFFFFFFF00FF0000FFFF0000FFFF00

J#@$JP9S9%=S9%:#9"9#8S9$
U-FF000000FFT?FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF

J%
U70000FFFF

E#J#J#;%J#
0000R#FF00PFFF000000FFFFW"0000

J$J`Jj
U400FFFF:Q*S#

J$J"P"JZGT&>P"Z
U20000FF;0000Q*OK00FFFFFFFF00P&

D"8"J&C"A":$JjJYFQJ#;#?*;$J"
0000TKFF0000FFFF0000000000Q,3O:G000000000000FF000000FF0000000000G00

D%J%J$D&?#9"JZJ#9"<"8$8&8%9#J$
FFFFFFFFQH00000000PM00FFFF00FF0000000000FFQ.1Q)00FF000000FF00FFFFFF00FFFF00FF00FFFFEFFFFFF

J$;#J"H#:#;"JiFaJ"8">"8"@#
R-FFFFFFFF00PFFFFFFF0000FFS0G0000000000FF

J%9"J#JjJZDSJ#9":"
UG00FFFF00FFP+0000O&1O:0FFFFF0000

J$J";"J`JjJ"<"9"H"
R-000000Q=FF00P(O3EP6FFFFFF00

J$=%J"9#9#J#;"`JZ"ZJbJ"9Y8"8"8#8"8$
R-FFFFFF00000000Q1FFFF0000FFP!0000FFK600?LO-FF00FFFFFFFFFF00FF

J&J"APJ":"8"9"`J"R"?jJ#C"
R7FFFFFFFF00Q)FFP!00FF00FFPL00001O%FFFFFF

J"8"J"eJ";"9%9&JZJ&809#8'
R70000Q,FFP$0000FFFF0000FF00000000Q./B0000FF00000000FF00FF00FF00FF00FF0000FF0000000000FF00FF00

J&J$9"U"J"9#@$:$J"8&>%;&8#
R6FF000000FFQ&0000000000P"00FFFFFF0000000000R/FFFFFF0000FF0000FF00FF0000FFFF00FF

J#J$J";";#>":$J"j"Jj"J"8"9"9"8";#:$
R8FFFFQ'FFFFFFP000000000FF000000=FFO(FFO//FFE00FF0000FF00FF00FFFF

J";":"I$JZJ"b"?ZJ"<"
X%0000FF000000;O(KFFFF0FFFFF

J"8#J$:eJ"9#;";$>#:%Jj=jJ&<0
R800FF00Q$000000P 00FFFFFFFF0000FFFFFF0000007P';E00FFFF0000FF00FF0000FF0000FFFF0000FF0000

JP8WJ#?%:"<":"9#JZ"Z"ZJ"8#8Z8Q8"
U@OK0000FF000000000000FF00:OK009001AFFFFFF0FF

J"J"9"8#>"I"JjAc
R7FFS700FF0000FFFF;P0

J$J"?%F$;"8"J"Z8ZCQJ58"8#8"8(
R-000000S>00FFFF0000FF000000FF700OJ1E40000FF000000FF0000FF000000FF000000FF000000000000000000FF00FF00

J$J%8"?"8":"@%8"J$8"9%9"9#8$="
R-FFFFFFS=00FF00FF00FF00FFFFFFFF00FFR#00FFFFFFFF0000FFFFFF0000FFFFFF

J"8#J)J%9$8"Jj"jB"aJ%=#F"
R900FF00S.00FF000000FFFFFF5FFFF0000000000FF:OKFF1FFM00FF000000FF00

J"J":"8&;"=":"?"JZ8ZBRJ#?#>"
R<00S.00FF00FFFFFFFF000000FFP&12D0000FFFF00

J'J"8":`9$B"JZJ":"9#;"<"@"9"
R8FF000000FFFFS,0000FFFFFF00FO8P FF00FF0000FF00FF

J%>$J%;#:%8%G"J$I#JV9U8"8"8R
R-000000FFFFFFFFS,000000FF00FF00000000FFFFFFFFFFPE0000000000GFFFF

J%J#:$8%8$9#>#;"J"J#>j
R,FFFFFFFFS:FF0000FF00FFFFFFFF000000FFFFFFFF00PFFF5FF00P&

J"<#8"9$8);#JjJZ
WJ0000FF00FFFFFF00000000FFFFFFFF0000COBO'P&

J%`8%8"9&=#JZJ"?c
X#FF0000FFFFFFFFFF00FFFFFF00FFFFFF<OAL00

J#;%P8$:">"<"J"J$?Q
WHFFFFFFFF0000000000FF00FFPG004FFFFFF

JQ$;%a<"="J$
WJ0000FFFFFFFFFF00FFPGFFFFFF

J%@#?"="Jj<j8a"
X 000000FFFFFF00FF@OEKFF

JjJ%A#;"8"="JZ=XGX"R
FO5U@00FF00FF00000000FFAOD00

JZJ%J#8"9#JZ
GO3U@000000FF40000FFFFFFPM/

J"F"E"Jj
WK00FF00R0B

J"8#J$9"JjEjJZ
WJ00FFFF7FFFF00FFCOJ/O"@

J"jJ"8"E#SJZiGh
FFFO3U=00FF0000JOJ

J"Z$J"8":$=%@%JZ
F00O100FFFFU;00FF000000000000FFFF00FFFFQ(6

J#8":"?%B"JZJj
WF0000FF000000FFFFFFPD3O+@

J"9"9#?$JjJZ
WE00FF00000000FFO'OJO?B

J"8":"9#:$J"jJj
WEFFFFFFFFFF0000FFQ%FF38P&

J"j"J'8";$JZ8ZJZ"P=P
FFFO1FFU=000000FF0000FF0000FFO(OK4DO500

J"Z"ZJ"8"8"9":%JjJVJQ"
F00600HU;00FF00FF000000FFO5O3O,O=00

J#9$:&8"JZJb
WC000000FFFF00FF000000FFO7O1@

J(8#8#9#J"R"IfJa
WB00FF00FF00FFFFFFFFFF00FFFFQ:0000O=

JjJc";)JXJS
G6V/FF0000FF0000FFFFFFR)O;

JZJ%>$
F8V2FF00FFFF0000FF

J#="9"J"j"JbJ#8%8&J"8"
WB00FF00FFO=FFO1FF?O&00000000FF0000FF000000H0000

J"8#="9"JZJTJ#8"8'J"
W>FFFFFF00FFO?O1?O&FF00FF00000000FFFFH00

J#>"9"Jj
W?FFFF00FFQ1K

J"J"JZ
WKFFQ3FF73

J$Jc=`J"Z"J#;(J#
WIFF0000P.?00700O'00FFFFFF00FF0000FFHFF00

J$JcR="P"J"9$8$JP
WJFFFFFFP%0000P0FF00FFFFFFFFFFI

J$SC&JjJ"9#="
Z!00000000FFFF0000B7O'FFFFFFFF

J#J(JZIj
Z"FFFF700FF0000FFFF00=9P&

Jb9$B%8"JZ"Z
Z#0000000000FF0000O:H00O+

JR9$B(
Z#FFFFFFFF0000FF00FFFF

J$J%J$JjGj
Z"0000006FF0000FFO&00000058@

J%cB)J"JY"RIZ$T$
Z!FFFFFFFFFF00FFFF000000FFO%FF700/00FF0000FFFF

JSa='
Z%FF000000FFFF

JR=$
Z-FFFFFF

J"Jj"G"j"
[F0076FFFF>FF

J$JZIZ
[EFFFFFF57>

Jj
8]K

JZ"Z"Z"Z"Z"Z"Z"Z
7OC00P#00P"00P"00P"00P#00P"00OC

J#J%J"J#J"J"J#J"
O*0000P 00000000P!00P!0000P"00P"00P"0000P"00

J#J%J#J"J#J$J"
O)00FFP!FFFF00FFP 00FFP"FFR%FF00P!FFFF00P 00

J#J"J"J#J#J#J"
O)FF00R&00P"00P!00FFP"00FFP"00FFP FF

J#J%J$J"J#J#
O)00FFR$00FFFF00P FFFF00P!00P"FF00P!00FF

J"J#J%J"J"
O)FFP#00FFP FF00FFFFP"FFP"00

J#J"J"J"J#J"J#J"J$J"J"J"J"J"J"
O*00FFO FFO FFO"FFMFF00O!FFM0000O!FFMFFFFFFO FFO 00O"FFO 00O!FFO FF

J"J"J#J#J#
O*FFR&FFP!FFFFR%FFFFP!FFFF

?"j
FF^9

@Z
^:























ENDBITMAP
%%EndBinary
72 72 540 720 C
0 0 612 792 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "10" 4
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 4
%%DocumentFonts: Times-Bold
%%+ Times-Italic
%%+ Times-Roman
%%EOF
