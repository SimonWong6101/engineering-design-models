%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{1 dict dup /PageSize [paperwidth paperheight]put setpagedevice}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 {1 dict dup /ManualFeed manualfeed put setpagedevice } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 5 FMDOCUMENT
0 0 /Times-Bold FMFONTDEFINE
1 0 /Times-Italic FMFONTDEFINE
2 0 /Times-Roman FMFONTDEFINE
3 0 /Times-BoldItalic FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 1 1 0 1 0 0]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 14 Q
0 X
0 0 0 1 0 0 0 K
(IDS PRO/3DPAINT SCRIPT) 218.11 746.67 T
0 0 0 1 0 0 0 K
72 30.67 540 42.67 C
0 0 0 1 0 0 0 K
72 41.67 540 41.67 2 L
1 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
72 38.67 540 38.67 2 L
N
0 0 0 1 0 0 0 K
0 0 612 792 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
(SCRIPT) 72 24 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(PTC Confidential) 270.58 24 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(IDS 1-1) 508.62 24 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
71.4 744 540.59 743.4 2 L
0.9 H
2 Z
N
540.59 740.4 71.4 740.4 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
576 144 612 216 R
V
0 0 0 0 1 1 1 K
2 12 Q
7 X
0 0 0 0 1 1 1 K
(      IDS) 0 -270 591.33 153 TF
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
0 X
0 0 0 1 0 0 0 K
(INTRODUCTION) 72 684 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(W) 103.8 670 T
(elcome to today\325) 114.17 670 T
(s presentation of Parametric T) 194.16 670 T
(echnology\325) 337.95 670 T
(s Pro/3DP) 391.28 670 T
(AINT) 439.19 670 T
(.) 466.95 670 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Pro/3DP) 103.8 656 T
(AINT is a product to help designers and artists create sketches, renderings, 3D) 144.04 656 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(details on models and retouch images simply and quickly) 103.8 642 T
(.  During this demonstration we) 378.33 642 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(will show you how to create a sketch quickly using the sketching tools, layers, masks, fris-) 103.8 628 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(kets, curves and more.  W) 103.8 614 T
(e will also be demonstrating the speed by which you can paint) 227.81 614 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(details on a 3D model created in Pro/DESIGNER.) 103.8 600 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.36 (This demonstration will highlight the ease and speed designers can learn and use the digital) 103.8 572 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.17 (version of their traditional tools.  Notice as we get started the intuitive interface design and) 103.8 558 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(versatility) 103.8 544 T
(.  These sketches can be \336nished and taken into Pro/DESIGNER and used as) 151.02 544 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(underlays or a perspective sketch can be taken into the PERSPECT) 103.8 530 T
(ASKETCH module of) 425.46 530 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Pro/DESIGNER and easily generate a 3D model.  Painted models can also be rendered) 103.8 516 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(with highlights and re\337ections in a photorealistic environment within Pro/PHOT) 103.8 502 T
(OREN-) 489.91 502 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(DER.) 103.8 488 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(USER INTERF) 72 446 T
(ACE) 151.45 446 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(Y) 108 432 T
(ou will notice \336rst the interface of Pro/3DP) 115.46 432 T
(AINT) 322.01 432 T
(, all the traditional tools located on the) 349.78 432 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.09 (tool bar \050explain the tools on the tool bar brie\337y\051.  The canvas has the \336le interface would) 108 418 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(expect on the left, on the right are buttons which bring up a set of Editors.  These Editors) 108 404 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(let you work quickly and can be expanded or collapsed to maintain maximum canvas) 108 390 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(working area.  Lets talk about these Editors for a moment.) 108 376 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(BRUSH EDIT) 108 334 T
(OR) 181.46 334 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(The Brush Editor displays a selected brush and a representation of the brush stroke to be) 108 320 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(edited.  Y) 108 306 T
(ou see as a slider is moved the stroke is updating to see the results of the stroke) 153.79 306 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(even before you draw on the canvas.  Pressure sensitivity is essential to the integrity of) 108 292 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(each stroke placed on the canvas, with Pro/3DP) 108 278 T
(AINT the line quality is maintained even) 335.52 278 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(on the digital canvas as you would expect using traditional tools.  Notice the brush shape) 108 264 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(can be modi\336ed to be elliptical and even rotated to the desired angle.  This allows each) 108 250 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.04 (designer to dial in the set of brushes needed for the illustration.  Custom brush pallets can) 108 236 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(also be saved and loaded into any paint session.) 108 222 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(COLOR EDIT) 108 180 T
(OR) 184.13 180 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
-0.07 (This Editor helps a designer create, modify a pallet quickly and intuitively) 108 166 P
-0.07 (.  See how easy) 463.05 166 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.25 (it is to adjust colors and create blends.  W) 108 152 P
-0.25 (e can create a series of colors, select the block of) 305.46 152 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(colors, now select blend \050this takes the \336rst and last colors selected and creates an even) 108 138 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(blend between them no matter how many steps\051.  As we add colors to the Editors pallet,) 108 124 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(notice the Color Pallet at the bottom of the canvas has all the colors found in our Color) 108 110 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Editors Pallet helping conserve screen space.) 108 96 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1" 1
%%Page: "2" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 1 1 0 1 0 0]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 14 Q
0 X
0 0 0 1 0 0 0 K
(IDS PRO/3DPAINT SCRIPT) 218.11 746.67 T
0 0 0 1 0 0 0 K
72 30.67 540 42.67 C
0 0 0 1 0 0 0 K
72 41.67 540 41.67 2 L
1 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
72 38.67 540 38.67 2 L
N
0 0 0 1 0 0 0 K
0 0 612 792 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
(CDRS 1-2) 72 24 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(PTC Confidential) 270.58 24 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(SCRIPT) 506.62 24 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
71.4 744 540.59 743.4 2 L
0.9 H
2 Z
N
540.59 740.4 71.4 740.4 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(Layer Editor) 108 712 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(Layers allow a designer to work on separate sheets \050layers\051building up the design as) 108 698 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(needed.  Layers work on a hierarchy stacked as displayed but can be reordered or com-) 108 684 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.04 (bined while working.  Thumbnails are displayed to graphically see what is on each layer) 108 670 P
-0.04 (.) 531.08 670 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.08 (Unique to Pro/3DP) 108 656 P
-0.08 (AINT is the ability to work with more than one active Mask.  Masking) 198.75 656 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(allows artists to block of) 108 642 T
(f an area of the canvas to protect from overspray or unwanted) 225.78 642 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(paint.  The masks can be modi\336ed easily and activated quickly as needed.) 108 628 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 F
(2D portion of the demo) 108 586 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(\050Discuss the dif) 108 572 T
(ference between 2D and 3D painting\051.  2D is like drawing on a piece of) 183.11 572 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(paper) 108 558 T
(, 3D is painting directly on a model \050like holding a model in your hand masking) 134.17 558 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(areas of the surface, and painting details, colors and textures onto that model\051.) 108 544 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(CREA) 108 530 T
(TING A SKETCH) 141.11 530 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
-0.35 (As we are discussing the Editors I\325ll show how this sketch was created.  Y) 108 516 P
-0.35 (ou see the layers) 458.77 516 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(with the thumbnails active.  As we step between the layers, you see the building of paint) 108 502 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.06 (on the canvas.  I can add layers at any time.  Once the pencil sketch is complete, I\325ll use a) 108 488 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(2D curve to trace the outside of the product sketch using hot keys to control the curve.) 108 474 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.13 (This curve then becomes the active Frisket.  In other words, only the area inside the curve) 108 460 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(can be painted.  I\325ll use the Fill T) 108 446 T
(ool, select black and pick inside the frisket.  The area) 266.81 446 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\336lled can be made more transparent by adjusting the slider in Layer Properties.) 108 432 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(2D CUR) 108 390 T
(VES AS STENCILS) 151.24 390 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(Y) 108 376 T
(ou have seen how a closed curve can be used as a frisket, now I\325ll show you how 2D) 115.46 376 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.06 (curves can be used as a stencil \050much like a french curve is used\051.  I\325ll use the curve that I) 108 362 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(just created as a path for the brush to follow) 108 348 T
(.  Select the airbrush tool and while holding) 318.18 348 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(down the Shift Key) 108 334 T
(, paint near the curve.  I can create a brush stroke which follows the) 200.88 334 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(curve and maintain the look and feel of a true brush stroke.  By selecting another pencil,) 108 320 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(airbrush or brush tool, the stroke can be built up or changed as needed.  Y) 108 306 T
(ou\325ll notice the) 461.06 306 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(integrity of my brush stroke is maintained and the fade-out at the end is exactly what I) 108 292 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(want.  The Curves are saved with the canvas \336le and can also be copied, edited or trans-) 108 278 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.48 (formed.  Let\325) 108 264 P
-0.48 (s add some detail to the sketch.  I\325ll resize the curve and add a highlight edge.) 170.03 264 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(I can also turn the displayed curves of) 108 250 T
(f under the pull down Curve Menu.) 290.08 250 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(WORKING ON THE SKETCH) 108 208 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(Now that I have one cutout of this wheel created, I will utilize the capabilities of) 108 194 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(Pr) 108 180 T
(o/3DP) 120.44 180 T
(AINT) 150.89 180 T
2 F
( to save me time and ef) 180.89 180 T
(fort.  I'll take the curve I just used for the painted) 291.98 180 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.35 (highlight and duplicate it because I may want to use the original curve at some other time.) 108 166 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.09 (After I duplicate the curve, I will resize it to encompass all of my recent painted data.  If I) 108 152 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(select Copy Frisket from the edit menu, I can use the painted detail to "cut and paste") 108 138 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(wherever I decide.  I'll take advantage of the rotation icon that by default is located in the) 108 124 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.01 (center of the selected curve and rotate the copied paint data and place it to match my orig-) 108 110 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(inal pencil layer) 108 96 T
(.) 184.66 96 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "2" 2
%%Page: "3" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 1 1 0 1 0 0]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 14 Q
0 X
0 0 0 1 0 0 0 K
(IDS PRO/3DPAINT SCRIPT) 218.11 746.67 T
0 0 0 1 0 0 0 K
72 30.67 540 42.67 C
0 0 0 1 0 0 0 K
72 41.67 540 41.67 2 L
1 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
72 38.67 540 38.67 2 L
N
0 0 0 1 0 0 0 K
0 0 612 792 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
(SCRIPT) 72 24 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(PTC Confidential) 270.58 24 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(IDS 1-3) 508.62 24 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
71.4 744 540.59 743.4 2 L
0.9 H
2 Z
N
540.59 740.4 71.4 740.4 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
576 144 612 216 R
V
0 0 0 0 1 1 1 K
2 12 Q
7 X
0 0 0 0 1 1 1 K
(      IDS) 0 -270 591.33 153 TF
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 X
0 0 0 1 0 0 0 K
(Now that I have created all of my wheel cutouts, I will create the lugnuts using the same) 108 712 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(methods I just used.  I'll select the Circle command from the T) 108 698 T
(oolbar) 406.96 698 T
(, place my circle and) 437.14 698 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(resize it to \336t the sketch.  Again, select a color to be used as the \336ll color and click on the) 108 684 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(canvas inside the selected circle.  I can either resize this original circle as I did on my) 108 670 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(wheel cutouts, or I can duplicate the circle and resize it like I did for creating my paint) 108 656 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(frisket that I used to copy) 108 642 T
(.  I'll Duplicate this circle and resize it so I can have the original) 229.54 642 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(circle if I decide to do some rework.  Now I'll create a highlight and shadow by using the) 108 628 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Alt button and painting along the curve path.  This time, I'll use the Clone tool and click) 108 614 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(on the newly created lugnut while I hold down the Alt key) 108 600 T
(.  Now I can literally paint the) 387.52 600 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(complete lugnut as I brush the canvas.  This method is very handy for creating, copying) 108 586 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(and painting textures that you might want to use later) 108 572 T
(.) 362.99 572 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(MASKING) 108 530 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
-0.07 (I have created a mask that I can use at any time within any layer) 108 516 P
-0.07 (. I can add to the mask by) 414.26 516 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.09 (activating it as I would a layer) 108 502 P
-0.09 (.   I could also use multiple masks simultaneously) 252.12 502 P
-0.09 (.  Y) 489.23 502 P
-0.09 (ou can) 505.52 502 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(see, all my tools can be used to create a mask \050pencils, airbrushes, brushes and erasers\051.) 108 488 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(After I \336nish the mask, I'll return to my paint layer) 108 474 T
(.  Notice the masks turn partially trans-) 350.47 474 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.09 (parent allowing the user to see the work below) 108 460 P
-0.09 (.  Now) 330.46 460 P
-0.09 (, as I paint, the paint below the mask) 361.83 460 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(is shielded by the active mask.  Using the mask, I'll \336nish of) 108 446 T
(f the sketch by creating a) 396.6 446 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(background that will compliment the wheel, similar to that of the one you see here in the) 108 432 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Layer Editor) 108 418 T
(.) 168.32 418 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(My sketch is now complete.  Y) 108 390 T
(ou can see how the sketch is completely \337exible in the cre-) 256.45 390 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ation process.  Y) 108 376 T
(ou can create paint data on one layer and move the layer to represent a) 187.45 376 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.01 (dif) 108 362 P
-0.01 (ferent step in your canvas process or you can mer) 121.12 362 P
-0.01 (ge selected layers for layer consolida-) 358.43 362 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(tion.) 108 348 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(USING SA) 108 306 T
(VED IMAGES T) 162.79 306 T
(O ADD T) 250.58 306 T
(O YOUR SKETCH) 299.7 306 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(Now that I have \336nished the sketch, I'll show you how I can use the sketch or any other) 108 292 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(saved \336le to compliment or \336nish another sketch.  I'll show you how I can add my new) 108 278 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(wheel to a previously saved sketch.) 108 264 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.2 (This sketch \050utahcar) 108 236 P
-0.2 (.tif image\051 was created using the same techniques you saw me demon-) 204.25 236 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(strate with the wheel however) 108 222 T
(, the \336nal layers were mer) 251.48 222 T
(ged into one to save \336le space.) 375.9 222 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(W) 108 208 T
(ithin the Layer Editor) 118.85 208 T
(, I'll Append the current Layer and by using the File Browser) 222.02 208 T
(,) 514.32 208 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(select the \336le of the saved wheel.  Once I select the wheel it appears on my canvas with a) 108 194 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.09 (transformation box around it that will allow me to position, rotate, scale, and warp \050if nec-) 108 180 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(essary\051 before actually placing on the sketch.  Once I have constrained the appended) 108 166 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(image, I'll select OK and see how my sketch turned out.  If it doesn't appear just as I) 108 152 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(wanted, I could select T) 108 138 T
(ransform from the Edit menu and have another opportunity to) 222.55 138 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(place the wheel.  T) 108 124 T
(ransformations are limitless in quantity and I can always go back to) 198.55 124 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(repeat my steps.) 108 110 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "3" 3
%%Page: "4" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 1 1 0 1 0 0]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 14 Q
0 X
0 0 0 1 0 0 0 K
(IDS PRO/3DPAINT SCRIPT) 218.11 746.67 T
0 0 0 1 0 0 0 K
72 30.67 540 42.67 C
0 0 0 1 0 0 0 K
72 41.67 540 41.67 2 L
1 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
72 38.67 540 38.67 2 L
N
0 0 0 1 0 0 0 K
0 0 612 792 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
(CDRS 1-4) 72 24 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(PTC Confidential) 270.58 24 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(SCRIPT) 506.62 24 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
71.4 744 540.59 743.4 2 L
0.9 H
2 Z
N
540.59 740.4 71.4 740.4 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
(I'll create a new layer from within the Layer Editor and name it T) 108 712 T
(ext.  Now) 420.91 712 T
(, by selecting) 467.12 712 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 108 698 T
(ext from the T) 114.49 698 T
(oolbar) 182.64 698 T
(, the T) 212.82 698 T
(ext Editor \050?\051 will appear and me select my Font, type, and) 242.98 698 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.14 (point size for starters.  Once I click inside the canvas, I can start typing.  Notice how I can) 108 684 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(change the color of the text as I type it.  I can also change any of the attributes before I) 108 670 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(select OK.  Now that I have what I want, I'll accept the text and select transform from the) 108 656 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Edit menu.  Now I can warp the text to get the exact form I want to make it look like it is) 108 642 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(painted on the trunk of the car) 108 628 T
(.) 251.98 628 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(IMAGE RET) 108 600 T
(OUCHING) 177.46 600 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
-0.23 (In this portion of the demonstration, I will retouch an image using the selection and image) 108 586 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.25 (processing tools.  First I'll adjust a speci\336c hue in this image using the HSB tool.  Then I'll) 108 572 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(use the smart wand to sample a part of the image and retouch the selection.) 108 558 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(HSB is useful for adjusting a speci\336c range of color throughout an image.  This) 108 530 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\050CHOOSE AN IMAGE OTHER THAN THE SKI BOOT\051 image has a \050color\051 back-) 108 516 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ground.  I'll use the HSB tool to change the background color from \050color\051 to \050color\051) 108 502 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\050example, blue to red\051.) 108 488 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(Selecting ar) 108 460 T
(eas of similar color) 168.11 460 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
-0.41 (This time, instead of changing a color throughout the entire image, I'll use the Smart W) 108 446 P
-0.41 (and) 520.08 446 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(tool to select a portion of the image based on color) 108 432 T
(.  Now that this portion is selected, I'll) 350.64 432 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(use the HSB tool to modify the color in this local area.  The Smart W) 108 418 T
(and is a general pur-) 439.68 418 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(pose selection tool that can be used with any painting or ef) 108 404 T
(fects tool.) 389.41 404 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(3D P) 108 362 T
(AINTING) 132.11 362 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Pr) 108 348 T
(o/3DP) 120.44 348 T
(AINT) 150.89 348 T
2 F
( is totally unique to PTC allowing you to paint details directly on a com-) 180.89 348 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(puter model and using that painted data in a \336nal photorendered image for product con-) 108 334 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(cepts.  Y) 108 320 T
(ou can save the images as dif) 149.12 320 T
(ferent model concepts without having to spend) 288.88 320 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(lengthy time modelling details that might not be approved later) 108 306 T
(.  Image concepts can be) 410.33 306 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(saved and printed out for customer approval.) 108 292 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.11 (In addition, you can create real 3D curves on the model within) 108 264 P
0 F
-0.11 (Pr) 409.58 264 P
-0.11 (o/3DP) 422.02 264 P
-0.11 (AINT) 452.47 264 P
2 F
-0.11 ( that can be) 482.47 264 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(used as manipulative geometry within) 108 250 T
0 F
(Pr) 293.65 250 T
(o/DESIGNER) 306.1 250 T
2 F
( and) 378.11 250 T
0 F
(Pr) 401.44 250 T
(o/ENGINEER) 413.88 250 T
2 F
(.  This) 487.22 250 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(capability is extremely useful to both the Designer and the Engineer because model data) 108 236 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(does not have to be re-created.) 108 222 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(DIFFERENCE IN INTERF) 108 180 T
(ACE) 249.78 180 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
-0.13 (Y) 108 166 P
-0.13 (ou'll notice that there is no dif) 115.46 166 P
-0.13 (ference with the user interface from working in 2D to 3D.) 257.96 166 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(No dif) 108 152 T
(ference except the added functionality of the 3D button.  At the top of the canvas,) 138.78 152 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(I'll toggle the 2D button to 3D.  This will allow me to paint directly on a 3D surface or) 108 138 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(model as opposed to 2D as in sketch mode that you saw earlier) 108 124 T
(.) 409.3 124 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "4" 4
%%Page: "5" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 1 1 0 1 0 0]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 14 Q
0 X
0 0 0 1 0 0 0 K
(IDS PRO/3DPAINT SCRIPT) 218.11 746.67 T
0 0 0 1 0 0 0 K
72 30.67 540 42.67 C
0 0 0 1 0 0 0 K
72 41.67 540 41.67 2 L
1 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
72 38.67 540 38.67 2 L
N
0 0 0 1 0 0 0 K
0 0 612 792 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
(SCRIPT) 72 24 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(PTC Confidential) 270.58 24 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(IDS 1-5) 508.62 24 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
71.4 744 540.59 743.4 2 L
0.9 H
2 Z
N
540.59 740.4 71.4 740.4 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
576 144 612 216 R
V
0 0 0 0 1 1 1 K
2 12 Q
7 X
0 0 0 0 1 1 1 K
(      IDS) 0 -270 591.33 153 TF
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
0 X
0 0 0 1 0 0 0 K
(Gr) 108 712 T
(oup Editor) 122.45 712 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(The Group Editor displays the groups of the model as they were saved in the modelling) 108 698 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(software.  Maintained are both the mirrored and non-mirrored geometry saved in) 108 684 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
-0.44 (Pr) 108 670 P
-0.44 (o/DESIGNER) 120.44 670 P
2 F
-0.44 ( layers.  Groups can be selected by picking the items in the menu.  Single) 192.46 670 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.31 (or multiple groups may be painted on as selected.  Notice how the menus can be resized to) 108 656 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\336t the users needs.) 108 642 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(P) 108 614 T
(AINTING ON THE SURF) 114.44 614 T
(ACE) 249.9 614 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(Now that the proper Group is selected, \050Main Body\051, let me demonstrate how the paint is) 108 600 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.26 (applied to the surface.  I'll select a dark airbrush to apply a lot of paint quickly) 108 586 P
-0.26 (.  The stroke) 478.07 586 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.08 (is real-time as the paint is being applied.  Notice how you can see highlights and shadows) 108 572 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(on the surface just as you would expect to see on an actual model.) 108 558 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(All the tools I used in the 2D mode can be used during 3D painting.) 108 530 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(3D CUR) 108 502 T
(VES) 151.24 502 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(Remember the curves I created on the sketch ?, those were planar curves that were on the) 108 488 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(surface of the canvas.  In 3D mode, we need the curves to be located on the model.  3D) 108 474 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Curves are actually plotted to the surface of the model.  What does that mean to you ?) 108 460 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(This feature will give you complete \337exibility and control of the "painted" area of your) 108 446 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(model.  3D curves created in Pro/3DP) 108 432 T
(AINT can be taken into Pro/DESIGNER maintain-) 289.2 432 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.01 (ing surface area contact that will allow you to use them as real curves that you can manip-) 108 418 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ulate if necessary) 108 404 T
(.  This feature potentially saves a great amount of time of having to re-) 190.52 404 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(create curve geometry within Pro/DESIGNER.  This gives valid user de\336ned input from) 108 390 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(the very beginning stages of design concept !) 108 376 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(As the model is rotated, notice the curve is actually on the surface of the model.  A brush) 108 348 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(stroke will follow the curve just as it did in 2D mode.  I can also create friskets in the 3D) 108 334 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(mode with my curves.  Let me show you how to create a hand grip using a frisket on the) 108 320 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(camera body) 108 306 T
(.  Making sure the curve is closed, the area will become a frisket, protecting) 168.86 306 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.04 (the surrounding area from the paint.  I'll try a gradient \336ll here to see what kind of ef) 108 292 P
-0.04 (fect I) 512.1 292 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.17 (can get.  By double clicking the Fill T) 108 278 P
-0.17 (ool from the T) 288.16 278 P
-0.17 (ool Bar) 356.49 278 P
-0.17 (, an options box appears.  This) 391.51 278 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(is where I input the beginning and end colors I want for my gradient \336ll.  I can select my) 108 264 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(colors from the color scroll at the bottom of my canvas, or if I want to create new colors) 108 250 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.13 (for the \336ll, I'll open up my Color Editor) 108 236 P
-0.13 (.  When I have my selected colors, I'm ready to \336ll) 296.12 236 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(my frisket.) 108 222 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.09 (If I do not like the color of the gradient \336ll, I can change my colors or re-select the area to) 108 194 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(be \336lled.  I'll also use the 3D curve to create a highlight and shadow around the grip area) 108 180 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.29 (giving my grip a dif) 108 166 P
-0.29 (ference in surface change.  After I have the paint in the area I want, I'll) 202.62 166 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(select the Dry button which will match the painted material to the surface of the model.) 108 152 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(As the detail is added, we can now create the camera \337ash.  Let's go in the group editor) 108 124 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(and select the Flash Group as active.  Notice how in the Group Editor) 108 110 T
(, I can select dif) 441.47 110 T
(fer-) 517.56 110 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ent groups to be either active or displayed or both.  I can also turn of) 108 96 T
(f the display of) 436.39 96 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.25 (selected groups if I want.  I'll go into the Layer Editor and select Append which will allow) 108 82 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "5" 5
%%Page: "6" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 1 1 0 1 0 0]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 14 Q
0 X
0 0 0 1 0 0 0 K
(IDS PRO/3DPAINT SCRIPT) 218.11 746.67 T
0 0 0 1 0 0 0 K
72 30.67 540 42.67 C
0 0 0 1 0 0 0 K
72 41.67 540 41.67 2 L
1 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
72 38.67 540 38.67 2 L
N
0 0 0 1 0 0 0 K
0 0 612 792 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
(CDRS 1-6) 72 24 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(PTC Confidential) 270.58 24 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(SCRIPT) 506.62 24 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
71.4 744 540.59 743.4 2 L
0.9 H
2 Z
N
540.59 740.4 71.4 740.4 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
(me to bring in a texture.  I'll select the Flash texture and position over my active group) 108 712 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.43 (until I have the desired size.  As I did with textures in the 2D mode, I can warp the selected) 108 698 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(texture and distort the shape.) 108 684 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.02 (Again, I would like the border of the \337ash to appear separate from the camera body so I'll) 108 656 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(create a 3D curve around my textured area and use a thin pencil to trace a shadow around) 108 642 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.27 (the \337ash.  By Selecting the curve and scaling it from the center) 108 628 P
-0.27 (, the curve can now be used) 405.92 628 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.07 (to add a lighter highlight to the cutline.  Notice how both the grip and the \337ash area really) 108 614 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(start to appear as separate surfaces from the original body and look real.) 108 600 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(I'll Dry the paint and we can take a dynamic look at the camera by rotating it.) 108 572 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 108 544 T
(o give the model even further realism, I'll again append the layer with a Decal that I'll) 114.49 544 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(place on the camera body) 108 530 T
(.  I'll transform the Decal to get the desired shape and select OK) 229.85 530 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.11 (when \336nished.  The Decal is now added to the layer and ready to Dry to the surface of the) 108 516 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(model.) 108 502 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(LIGHTS IN 3D) 108 474 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Pr) 108 460 T
(o/3DP) 120.44 460 T
(AINT) 150.89 460 T
2 F
( gives you full \337exibility while working with your model to create lights) 180.89 460 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.07 (that exist in 3D space.  By selecting the Light Editor) 108 446 P
-0.07 (, you'll notice I can create new lights,) 358.45 446 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(manipulate created lights or I can manipulate the existing default lights.  Notice how the) 108 432 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(model updates in real-time as I change the location of the default Direction Light.  I can) 108 418 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.26 (choose if I want my lights to rotate with the model or stay relative to my canvas viewed as) 108 404 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.34 (planar) 108 390 P
-0.34 (.  I can also turn of) 137.33 390 P
-0.34 (f selected lights and save my light \336les just as I can with my color) 225.4 390 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(palette.) 108 376 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.3 (If I want to change the volor of the light, I simply move the cursor within the color wheel.) 108 348 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.37 (Here, I can change the light color and see the ef) 108 334 P
-0.37 (fect the colored light has on my model as it) 333.03 334 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(changes in real-time.) 108 320 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Y) 108 292 T
(ou can use lights to compliment your model setting for screen captures giving you com-) 115.46 292 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(plete control over the visual display of your model concepts.) 108 278 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(Paint Options) 108 236 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(Many variations can be painted on one model by simply saving the textures and re-apply-) 108 222 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.34 (ing new details.  These models can be saved and brought back in to Pro/PHOT) 108 208 P
-0.34 (ORENDER) 480.67 208 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(and rendered showing highlights and re\337ections from a user de\336ned environment.) 108 194 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(CONCLUSION) 108 152 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(In the last \050however long it took\051 I have demonstrated many time saving techniques and) 108 138 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.44 (real-time capabilities of) 108 124 P
0 F
-0.44 (Parametric T) 223.66 124 P
-0.44 (echnology Corporation\325) 291.09 124 P
-0.44 (s) 412.54 124 P
-0.44 (Pr) 419.77 124 P
-0.44 (o/3DP) 432.21 124 P
-0.44 (AINT) 462.66 124 P
2 F
-0.44 ( product.) 492.66 124 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(I\325ve shown you real-time brushes, unique curve stencil and frisket features as well as) 108 110 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(image retouching tools.) 108 96 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "6" 6
%%Page: "7" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 1 1 0 1 0 0]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 14 Q
0 X
0 0 0 1 0 0 0 K
(IDS PRO/3DPAINT SCRIPT) 218.11 746.67 T
0 0 0 1 0 0 0 K
72 30.67 540 42.67 C
0 0 0 1 0 0 0 K
72 41.67 540 41.67 2 L
1 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
72 38.67 540 38.67 2 L
N
0 0 0 1 0 0 0 K
0 0 612 792 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
(SCRIPT) 72 24 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(PTC Confidential) 270.58 24 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(IDS 1-7) 508.62 24 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
71.4 744 540.59 743.4 2 L
0.9 H
2 Z
N
540.59 740.4 71.4 740.4 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
576 144 612 216 R
V
0 0 0 0 1 1 1 K
2 12 Q
7 X
0 0 0 0 1 1 1 K
(      IDS) 0 -270 591.33 153 TF
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 X
0 0 0 1 0 0 0 K
(Designers and Artists have full \337exibility to work within) 108 712 T
0 F
(Pr) 382.99 712 T
(o/3DP) 395.44 712 T
(AINT) 425.88 712 T
2 F
( to create a) 455.88 712 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(customized working environment \050layout of the menus and editors\051 that they are comfort-) 108 698 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(able with.) 108 684 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Unique to) 108 656 T
0 F
(Pr) 158.66 656 T
(o/3DP) 171.11 656 T
(AINT) 201.55 656 T
2 F
( is the feature which allows multiple Masks to be active at any) 231.55 656 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.17 (one time.  I have also demonstrated how to paint details on a surface that don't really exist) 108 642 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(except as 3D created surface geometry) 108 628 T
(.  Conceptual models can be evaluated early in the) 292.81 628 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(design phase and decisions made before time consuming tasks of modelling many details) 108 614 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(that might have to be changed over and over again.  Once the painted details have been) 108 600 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(approved, \336nal modelling can be \336nished, potentially saving critical time in the design) 108 586 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(cycle.) 108 572 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "7" 7
%%Page: "8" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0 1 1 0 1 0 0]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 14 Q
0 X
0 0 0 1 0 0 0 K
(IDS PRO/3DPAINT SCRIPT) 218.11 746.67 T
0 0 0 1 0 0 0 K
72 30.67 540 42.67 C
0 0 0 1 0 0 0 K
72 41.67 540 41.67 2 L
1 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
72 38.67 540 38.67 2 L
N
0 0 0 1 0 0 0 K
0 0 612 792 C
0 0 0 1 0 0 0 K
1 10 Q
0 X
0 0 0 1 0 0 0 K
(CDRS 1-8) 72 24 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(PTC Confidential) 270.58 24 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(SCRIPT) 506.62 24 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
71.4 744 540.59 743.4 2 L
0.9 H
2 Z
N
540.59 740.4 71.4 740.4 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "8" 8
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 8
%%DocumentFonts: Times-Bold
%%+ Times-Italic
%%+ Times-Roman
%%+ Times-BoldItalic
%%EOF
