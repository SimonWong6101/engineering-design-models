%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 226 318 376 533 
%%LanguageLevel: 1
%%Creator: CorelDRAW 9
%%Title: \\Edge\gicl\data1\repository\...
%%CreationDate: Sun Oct 29 09:43:26 2000
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 1 def
%Build: CorelDRAW 9 Version 9.337
%Color profile: Disabled
%%BeginResource: procset wCorel9Dict 9.0 0
/wCorel9Dict 300 dict def wCorel9Dict begin
% Copyright (c)1992-1999 Corel Corporation
% All rights reserved.     v9.0 r0.5
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CurrentInkName_5 where{pop}{/CurrentInkName_5(Composite)def}
ifelse/$ink_5 where{pop}{/$ink_5 -1 def}ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0
def/$t 1 def/$n _ def/$o 0 def/$fil 0 def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def
/$T 1 def/$N _ def/$O 0 def/$PF false def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0
def/s1t 0 def/s1n _ def/$bkg false def/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op
false def matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm
matrix def/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve
16#6/dotaccent 16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def/Comp?{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{1 0 0 0 @gs
setcmykcolor currentcmykcolor @gr add add add 0 ne 0 1 0 0 @gs setcmykcolor
currentcmykcolor @gr add add add 0 ne 0 0 1 0 @gs setcmykcolor currentcmykcolor
@gr add add add 0 ne 0 0 0 1 @gs setcmykcolor currentcmykcolor @gr add add add
0 ne and and and}ifelse}ifelse}bd/@PL{/LV where{pop LV 2 ge L2? not and{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/p{/$pm xd 7 rp/$pyf xd/$pxf xd/$pn xd/$fil 1 def}
bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}ifelse}bd
/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp}bd
/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}bd
/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld/GetRgb
/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2 systemdict
/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def/SetHsb
systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get def
/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop/SetCmyk_5{LumSepsDict
/setcmykcolor get exec}def}{/AldusSepsDict where{pop/SetCmyk_5{AldusSepsDict
/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld}ifelse}ifelse}{
/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk
/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where
{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where{pop}{
/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll
mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0 4 $ink_5 sub index exch pop 5 1
roll pop pop pop pop SepsColor true eq{$ink_5 3 gt{1 sub neg SetGry}{0 0 0 4
$ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/setcustomcolor where{pop}{/setcustomcolor{exch aload pop SepMode_5 0 eq{pop
@tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll 5 rp 1
sub neg SetGry}ifelse}bd}ifelse/@scc_5{dup type/booleantype eq{setoverprint}{1
eq setoverprint}ifelse dup _ eq{pop setprocesscolor_5 pop}{findcmykcustomcolor
exch setcustomcolor}ifelse SepMode_5 0 eq{true}{GetGry 1 eq currentoverprint
and not}ifelse}bd/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{
/ncolors xd/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop
pop exch pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd
/daqC xd pop pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}
ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub
{dup 3 mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div $dat 3 index
2 add get 255 div rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat
length 3 idiv getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4
mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add
get 255 div $dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop
$dat 3 1 roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}
image}ifelse}bd}ifelse/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5
/$ffpnt xd}bd/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/@sft{$tllx
$pxf add dup $tllx gt{$pwid sub}if/$tx xd $tury $pyf sub dup $tury lt{$phei
add}if/$ty xd}bd/@stb{pathbbox/$ury xd/$urx xd/$lly xd/$llx xd}bd/@ep{{cvx exec
}forall}bd/@tp{@sv/$in true def 2 copy dup $lly le{/$in false def}if $phei sub
$ury ge{/$in false def}if dup $urx ge{/$in false def}if $pwid add $llx le{/$in
false def}if $in{@np 2 copy m $pwid 0 rl 0 $phei neg rl $pwid neg 0 rl 0 $phei
rl clip @np $pn cvlit load aload pop 7 -1 roll 5 index sub 7 -1 roll 3 index
sub Tl matrix currentmatrix/$ctm xd @ep pop pop pop pop}{pop pop}ifelse @rs}bd
/@th{@sft 0 1 $tly 1 sub{dup $psx mul $tx add{dup $llx gt{$pwid sub}{exit}
ifelse}loop exch $phei mul $ty exch sub 0 1 $tlx 1 sub{$pwid mul 3 copy 3 -1
roll add exch @tp pop}for pop pop}for}bd/@tv{@sft 0 1 $tlx 1 sub{dup $pwid mul
$tx add exch $psy mul $ty exch sub{dup $ury lt{$phei add}{exit}ifelse}loop 0 1
$tly 1 sub{$phei mul 3 copy sub @tp pop}for pop pop}for}bd/$fm 0 def/wfill{1
$fm eq{fill}{eofill}ifelse}bd/wclip{1 $fm eq{clip}{eoclip}ifelse}bd/@pf{@gs
$ctm setmatrix $pm concat @stb wclip @sv Bburx Bbury $pm itransform/$tury xd
/$turx xd Bbllx Bblly $pm itransform/$tlly xd/$tllx xd newpath $tllx $tlly m
$tllx $tury l $turx $tury l $turx $tlly l $tllx $tlly m @cp pathbbox @rs/$tury
xd/$turx xd/$tlly xd/$tllx xd/$wid $turx $tllx sub def/$hei $tury $tlly sub def
@gs $vectpat{1 0 0 0 0 _ $o @scc_5{wfill}if}{$t $c $m $y $k $n $o @scc_5{
SepMode_5 0 eq $pfrg or{$tllx $tlly Tl $wid $hei scale <00> 8 1 false[8 0 0 1 0
0]{}imagemask}{/$bkg true def}ifelse}if}ifelse @gr $wid 0 gt $hei 0 gt and{$pn
cvlit load aload pop/$pd xd 3 -1 roll sub/$phei xd exch sub/$pwid xd $wid $pwid
div ceiling 1 add/$tlx xd $hei $phei div ceiling 1 add/$tly xd $psx 0 eq{@tv}{
@th}ifelse}if @gr @np/$bkg false def}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm setmatrix 72
1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{@pf}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$t $c $m $y $k $n $o @scc_5{wfill}
{@np}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp
F}bd/S{matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if $T $C $M
$Y $K $N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}
{@np}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}
bd/b{@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat
readhexstring pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd
/Bblly xd/Bbllx xd}bd/@c{@cp}bd/@p{/$fil 1 def 1 eq dup/$vectpat xd{/$pfrg true
def}{@gs $t $c $m $y $k $n $o @scc_5/$pfrg xd @gr}ifelse/$pm xd/$psy xd/$psx xd
/$pyf xd/$pxf xd/$pn xd}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd
}bd/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/tcc{@cc}def/@i{@sm @gs @ii 6 index 1 ne
{/$frg true def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg
false def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd
/$lly xd/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi
string def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub
$ury $lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts
1 eq{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load
$bts 1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]$msimage false eq $ncl 1 eq or{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl
3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def
/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq
{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5
(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{
CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}
ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000 -72000
l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec
cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}
bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}
ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd/@daq{dup type
/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq MaskedImage true eq and
{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq UseLevel 3 eq or and{7 -2
roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{7 -2 roll pop pop @I}
ifelse}ifelse}ifelse}bd systemdict/pdfmark known not{/pdfmark/cleartomark ld}
if
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel9Dict begin
@BeginSysCorelDict
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
226.47600 318.56400 375.08400 532.04400 @E
1 J 1 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.56693 0.56693 90.00000 @w
/$fm 0 def
226.47600 368.74800 m
226.76400 341.46000 L
365.22000 511.45200 m
351.75600 523.90800 L
304.74000 470.05200 m
306.46800 468.61200 L
247.71600 380.41200 m
247.71600 376.81200 L
300.06000 321.51600 m
342.39600 371.91600 L
289.18800 319.06800 m
293.14800 318.56400 L
297.03600 319.35600 L
300.06000 321.51600 L
281.70000 321.22800 m
289.18800 319.06800 L
226.76400 341.46000 m
228.34800 337.86000 L
232.02000 335.77200 L
232.02000 335.77200 m
239.36400 333.61200 L
302.72400 393.66000 m
302.50800 392.72400 L
301.78800 391.64400 L
301.78800 391.64400 m
290.26800 378.39600 L
290.26800 378.39600 m
287.24400 376.23600 L
282.70800 374.79600 L
277.52400 374.36400 L
272.34000 375.08400 L
268.23600 376.74000 L
265.78800 378.75600 L
265.14000 380.55600 L
251.46000 389.48400 m
249.37200 386.67600 L
248.14800 383.58000 L
247.71600 380.41200 L
272.19600 412.66800 m
251.46000 389.48400 L
342.82800 379.26000 m
353.26800 456.87600 L
298.69200 476.74800 m
260.17200 407.48400 L
332.31600 387.25200 m
342.90000 465.73200 L
348.08400 506.70000 m
343.40400 507.34800 L
338.65200 506.84400 L
333.97200 505.33200 L
329.72400 502.81200 L
325.98000 499.50000 L
323.02800 495.46800 L
321.01200 491.00400 L
319.86000 485.89200 L
320.00400 480.78000 L
321.22800 475.95600 L
312.73200 480.13200 m
309.63600 483.37200 L
307.40400 487.26000 L
306.03600 491.58000 L
305.67600 496.18800 L
344.84400 485.74800 m
341.24400 481.64400 L
336.85200 478.54800 L
331.95600 476.46000 L
326.77200 475.52400 L
321.66000 475.88400 L
316.90800 477.46800 L
312.73200 480.13200 L
342.82800 514.62000 m
345.63600 511.45200 L
347.65200 507.70800 L
348.94800 503.53200 L
349.30800 499.14000 L
310.14000 509.50800 m
313.81200 513.61200 L
318.27600 516.78000 L
323.31600 518.86800 L
328.57200 519.73200 L
333.75600 519.22800 L
338.58000 517.50000 L
342.82800 514.62000 L
356.94000 482.50800 m
344.84400 485.74800 L
348.22800 484.81200 m
350.17200 488.70000 L
351.39600 492.73200 L
351.82800 496.90800 L
312.73200 507.27600 m
310.35600 503.10000 L
308.84400 498.56400 L
308.26800 493.95600 L
305.67600 496.18800 m
293.72400 499.35600 L
308.26800 493.95600 m
305.67600 496.18800 L
349.30800 499.14000 m
361.40400 495.97200 L
351.82800 496.90800 m
363.85200 493.74000 L
351.82800 496.90800 m
349.30800 499.14000 L
300.85200 510.37200 m
312.73200 507.27600 L
298.26000 512.67600 m
310.14000 509.50800 L
310.14000 509.50800 m
312.73200 507.27600 L
342.90000 465.73200 m
353.26800 456.87600 L
342.90000 465.73200 m
338.29200 463.71600 L
333.46800 462.34800 L
328.64400 461.70000 L
323.74800 461.70000 L
319.06800 462.42000 L
314.53200 463.86000 L
310.28400 465.94800 L
306.46800 468.61200 L
363.85200 493.74000 m
362.98800 489.13200 L
361.47600 484.59600 L
359.38800 480.34800 L
361.40400 495.97200 m
363.85200 493.74000 L
351.75600 523.90800 m
347.79600 527.00400 L
343.40400 529.38000 L
338.65200 531.03600 L
333.61200 531.97200 L
328.50000 532.04400 L
323.31600 531.32400 L
318.20400 529.88400 L
313.38000 527.65200 L
308.84400 524.77200 L
304.74000 521.24400 L
301.21200 517.14000 L
298.26000 512.67600 L
361.40400 495.97200 m
361.69200 501.22800 L
361.18800 506.41200 L
359.89200 511.38000 L
357.80400 515.98800 L
355.06800 520.23600 L
351.75600 523.90800 L
300.85200 510.37200 m
298.26000 512.67600 L
296.60400 498.56400 m
297.54000 502.59600 L
298.98000 506.55600 L
300.85200 510.37200 L
304.74000 470.05200 m
308.70000 467.24400 L
313.02000 465.15600 L
317.70000 463.78800 L
322.66800 463.06800 L
327.63600 463.14000 L
332.67600 464.00400 L
337.57200 465.51600 L
342.25200 467.74800 L
346.64400 470.62800 L
350.60400 474.15600 L
354.06000 478.11600 L
356.94000 482.50800 L
293.72400 499.35600 m
293.43600 494.53200 L
293.79600 489.78000 L
294.73200 485.24400 L
296.38800 480.85200 L
298.62000 476.82000 L
301.42800 473.22000 L
304.74000 470.05200 L
359.38800 480.34800 m
356.94000 482.50800 L
365.22000 511.45200 m
368.67600 507.63600 L
371.48400 503.24400 L
373.50000 498.42000 L
374.72400 493.23600 L
375.08400 487.83600 L
374.58000 482.43600 L
373.21200 477.03600 L
373.21200 477.03600 m
371.26800 472.28400 L
368.67600 467.82000 L
365.43600 463.71600 L
361.69200 460.04400 L
357.51600 457.02000 L
352.90800 454.57200 L
332.31600 387.25200 m
323.17200 389.84400 L
226.47600 368.74800 m
227.05200 366.94800 L
228.70800 365.43600 L
231.22800 364.35600 L
227.48400 371.05200 m
226.76400 369.90000 L
226.47600 368.74800 L
260.17200 407.48400 m
227.48400 371.05200 L
266.07600 405.90000 m
260.17200 407.48400 L
305.53200 369.18000 m
302.72400 366.51600 L
299.12400 364.21200 L
294.87600 362.34000 L
290.05200 360.82800 L
284.86800 359.89200 L
279.46800 359.53200 L
273.99600 359.67600 L
268.66800 360.32400 L
263.70000 361.62000 L
259.16400 363.27600 L
255.20400 365.43600 L
252.03600 367.95600 L
249.66000 370.76400 L
248.22000 373.71600 L
247.71600 376.81200 L
325.11600 395.60400 m
323.17200 389.84400 L
323.17200 389.84400 m
305.53200 369.18000 L
305.53200 372.78000 L
299.48400 388.98000 m
296.24400 390.56400 L
292.28400 391.42800 L
288.10800 391.50000 L
284.00400 390.85200 L
280.54800 389.48400 L
278.10000 387.54000 L
300.63600 350.02800 m
332.31600 387.25200 L
342.82800 379.26000 m
332.31600 387.25200 L
288.82800 347.72400 m
292.14000 347.22000 L
295.52400 347.43600 L
298.54800 348.44400 L
300.63600 350.02800 L
300.42000 322.59600 L
231.22800 364.35600 m
231.51600 336.99600 L
231.22800 364.35600 m
288.82800 347.72400 L
288.68400 320.29200 L
276.22800 329.86800 m
280.04400 322.81200 L
243.75600 339.37200 m
276.22800 329.86800 L
240.01200 334.54800 m
243.75600 339.37200 L
342.75600 373.06800 m
300.42000 322.59600 L
298.33200 321.01200 L
295.38000 320.00400 L
291.99600 319.78800 L
288.68400 320.29200 L
300.42000 322.59600 m
300.34800 322.02000 L
300.06000 321.51600 L
280.04400 322.81200 m
280.54800 322.09200 L
281.12400 321.51600 L
281.70000 321.22800 L
288.68400 320.29200 m
280.04400 322.81200 L
S

@rax %Note: Object
226.76400 319.06800 342.82800 413.82000 @E
1 J 1 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.56693 0.56693 90.00000 @w
/$fm 0 def
288.68400 320.29200 m
288.75600 319.71600 L
288.90000 319.21200 L
289.18800 319.06800 L
342.39600 371.91600 m
342.61200 372.42000 L
342.75600 373.06800 L
342.82800 379.26000 m
342.75600 373.06800 L
244.33200 339.15600 m
239.86800 334.11600 L
231.51600 336.99600 m
228.99600 338.14800 L
227.41200 339.66000 L
226.76400 341.46000 L
239.36400 333.61200 m
239.43600 333.68400 L
239.65200 334.04400 L
240.01200 334.54800 L
239.86800 334.11600 m
239.50800 333.75600 L
239.36400 333.61200 L
232.02000 335.77200 m
231.73200 335.98800 L
231.58800 336.42000 L
231.51600 336.99600 L
240.01200 334.54800 m
231.51600 336.99600 L
278.10000 387.54000 m
278.10000 397.04400 L
278.10000 387.54000 m
268.45200 376.59600 L
266.50800 377.96400 m
266.50800 383.86800 L
278.10000 397.04400 m
281.12400 399.20400 L
285.37200 400.64400 L
290.26800 401.07600 L
295.09200 400.35600 L
299.12400 398.77200 L
301.78800 396.39600 L
302.72400 393.66000 L
275.58000 400.14000 m
276.51600 399.63600 L
277.38000 398.91600 L
277.95600 397.98000 L
278.10000 397.04400 L
266.50800 383.86800 m
278.10000 397.04400 L
301.78800 391.64400 m
302.36400 392.07600 L
303.15600 392.22000 L
304.02000 392.14800 L
263.91600 386.96400 m
264.92400 386.53200 L
265.71600 385.81200 L
266.29200 384.87600 L
266.50800 383.86800 L
265.14000 380.55600 m
265.50000 382.28400 L
266.50800 383.86800 L
290.26800 378.39600 m
290.84400 378.82800 L
291.63600 378.97200 L
292.50000 378.90000 L
274.86000 413.82000 m
323.82000 400.14000 L
292.50000 378.90000 m
304.02000 392.14800 L
305.53200 395.10000 L
305.10000 398.19600 L
302.86800 401.07600 L
299.05200 403.30800 L
294.15600 404.67600 L
288.68400 405.03600 L
283.35600 404.31600 L
278.82000 402.58800 L
275.58000 400.14000 L
263.91600 386.96400 L
262.33200 384.01200 L
262.62000 380.84400 L
264.85200 377.96400 L
268.66800 375.66000 L
273.63600 374.22000 L
279.18000 373.86000 L
284.58000 374.58000 L
289.18800 376.30800 L
292.50000 378.90000 L
302.94000 375.94800 m
299.91600 373.14000 L
295.81200 370.76400 L
290.98800 368.96400 L
285.66000 367.74000 L
279.90000 367.16400 L
274.06800 367.30800 L
268.45200 368.17200 L
263.26800 369.68400 L
258.73200 371.70000 L
255.06000 374.29200 L
252.46800 377.17200 L
250.95600 380.41200 L
250.66800 383.65200 L
251.53200 386.89200 L
253.54800 389.91600 L
247.71600 380.41200 m
248.22000 377.31600 L
249.66000 374.36400 L
252.03600 371.55600 L
255.20400 369.03600 L
259.16400 366.87600 L
263.70000 365.14800 L
268.66800 363.92400 L
273.99600 363.27600 L
279.46800 363.06000 L
284.86800 363.49200 L
290.05200 364.42800 L
294.87600 365.86800 L
299.12400 367.81200 L
302.72400 370.11600 L
305.53200 372.78000 L
323.82000 400.14000 m
324.68400 399.56400 L
325.26000 398.48400 L
325.40400 397.11600 L
325.11600 395.60400 L
305.53200 372.78000 m
325.11600 395.60400 L
305.53200 372.78000 m
305.38800 373.78800 L
304.81200 374.72400 L
303.94800 375.44400 L
302.94000 375.94800 L
323.82000 400.14000 m
302.94000 375.94800 L
272.19600 412.66800 m
273.49200 413.67600 L
274.86000 413.82000 L
253.54800 389.91600 m
274.86000 413.82000 L
253.54800 389.91600 m
252.75600 390.06000 L
252.03600 389.84400 L
251.46000 389.48400 L
S

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel9Dict 9.0 0
%%EOF
